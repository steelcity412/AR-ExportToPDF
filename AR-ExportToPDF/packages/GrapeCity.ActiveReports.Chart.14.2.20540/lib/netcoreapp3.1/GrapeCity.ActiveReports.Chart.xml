<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GrapeCity.ActiveReports.Chart</name>
    </assembly>
    <members>
        <member name="T:GrapeCity.ActiveReports.Chart.Annotations.Annotation">
            <summary>
            Base class for all the annotation classes
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.Annotation.AnnotationClass">
            <summary>
            Name of this annotation type
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection">
            <summary>
            Collection of the annotation objects
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Change">
            <summary>
            Occurs when collection contents is changed
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.#ctor">
            <summary>
            Initializes new instance of the AnnotationsCollection class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.#ctor(GrapeCity.ActiveReports.Chart.Annotations.Annotation[])">
            <summary>
            Initializes new instance of the AnnotationsCollection class
            </summary>
            <param name="annArray">Array of <see cref="T:GrapeCity.ActiveReports.Chart.Annotations.Annotation" /> to initialize new instance with</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.CollectionBase" /> instance. This property cannot be overridden.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Capacity">
            <summary>
            Gets or sets the number of elements that the <see cref="T:System.Collections.CollectionBase" /> can contain.
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Item(System.Int32)">
            <summary>
            Gets or sets item by given index
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Item(System.String)">
            <summary>
            Gets item by given name
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Add(GrapeCity.ActiveReports.Chart.Annotations.Annotation)">
            <summary>
            Adds annotation object to the collection
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.AddRange(GrapeCity.ActiveReports.Chart.Annotations.Annotation[])">
            <summary>
            Adds a set of objects to the current collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Contains(GrapeCity.ActiveReports.Chart.Annotations.Annotation)">
            <summary>
            Determines whether the Collection contains the given <see cref="T:GrapeCity.ActiveReports.Chart.Annotations.Annotation" /></summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Annotations.Annotation" /> to find within the collection</param>
            <returns>
                <code>true</code> if the collection contains the <code>value</code>parameter given; otherwise, <code>false</code>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.CopyTo(GrapeCity.ActiveReports.Chart.Annotations.Annotation[],System.Int32)">
            <summary>
            TBW
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.IndexOf(GrapeCity.ActiveReports.Chart.Annotations.Annotation)">
            <summary>
            Returns the index of the first occurrence of a value in the collection.
            </summary>
            <param name="value">The object to locate in array.</param>
            <returns>The index of the first occurrence of value within the entire array, if found; otherwise, the lower bound of the array - 1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Insert(System.Int32,GrapeCity.ActiveReports.Chart.Annotations.Annotation)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <code>value</code> should be inserted.</param>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Annotations.Annotation" /> to insert.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Remove(GrapeCity.ActiveReports.Chart.Annotations.Annotation)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Annotations.Annotation" /> to remove from the collection.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.ToArray">
            <summary>
            TBW
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Clear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes objects at the index specified
            </summary>
            <param name="index">A zero-based index of object to delete</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationsCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine">
            <summary>
            Line annotation object, may connect to other annotations
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.StartPoint">
            <summary>
            Get or sets start point of line.
            Is not used if start of line is connected to another annotation
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.EndPoint">
            <summary>
            Gets or sets end point of line.
            Is not used if end of line is connected to another annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.Line">
            <summary>
            Get or sets line info used to draw this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.StartConnection">
            <summary>
            Gets or sets <code>AnnotationTextBar</code> object to connect start point to.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.EndConnection">
            <summary>
            Gets or sets <code>AnnotationTextBar</code> object to connect end point to.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.StartConnectionIndex">
            <summary>
            Gets or sets index of anchor point of destination annotation to connect start point to.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.EndConnectionIndex">
            <summary>
            Gets or sets index of anchor point of destination annotation to connect end point to.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.Name">
            <summary>
            Gets or sets the Name of annotation line.
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.#ctor">
            <summary>
            Initializes a new instance of the AnnotationLine class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.AnnotationClass">
            <summary>
            Gets annotation type name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationLine.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Annotations.AnchorPlacementType">
            <summary>
            Specifies how an annotation's bar anchors to annotation's position.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Annotations.AnchorPlacementType.TopLeft">
            <summary>
            The bar is anchored by its top left corner.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Annotations.AnchorPlacementType.Top">
            <summary>
            The bar is anchored by its top side.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Annotations.AnchorPlacementType.TopRight">
            <summary>
            The bar is anchored by its top right corner.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Annotations.AnchorPlacementType.Left">
            <summary>
            The bar is anchored by its left side.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Annotations.AnchorPlacementType.Center">
            <summary>
            The bar is anchored by its center.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Annotations.AnchorPlacementType.Right">
            <summary>
            The bar is anchored by its top right side.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Annotations.AnchorPlacementType.BottomLeft">
            <summary>
            The bar is anchored by its bottom left corner.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Annotations.AnchorPlacementType.Bottom">
            <summary>
            The bar is anchored by its bottom side.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Annotations.AnchorPlacementType.BottomRight">
            <summary>
            The bar is anchored by its bottom right corner.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar">
            <summary>
            Text bar annotation object
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.AnchorPlacement">
            <summary>
            Gets or sets position of anchor point to stick to layer surface.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.Backdrop">
            <summary>
            Gets or sets background used to fill interior of the text bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.Line">
            <summary>
            Get or sets line info used to stroke text bar
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.AnchorPoint">
            <summary>
            Gets or sets anchor point in coordinate system of the corresponding layer
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.Width">
            <summary>
            Gets or sets the width of the bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.Height">
            <summary>
            Gets or sets the height of the bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.RotationAngle">
            <summary>
            Gets or sets rotation angle (in degrees) of bar around anchor point.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.Font">
            <summary>
            Gets or sets font used to display text on bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.Text">
            <summary>
            Gets or sets text string to display on bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.#ctor">
            <summary>
            Initializes new instance of <code>AnnotationTextBar</code> object with all properties set to its defaults.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Annotations.AnnotationTextBar.AnnotationClass">
            <summary>
            Gets annotation type name.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ChartTypeConfig">
            <summary>
            Holds data about particular chart type
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartTypeConfig.IsXY">
            <summary>
            Gets a value indicating whether this instance is not categorical.
            </summary>
            <value>
                <c>true</c> if this instance is xy; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartTypeConfig.IsCategorical">
            <summary>
            Gets a value indicating whether this instance is categorical.
            </summary>
            <value>
                <c>true</c> if this instance is categorical; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartTypeConfig.RequiredSeriesCount">
            <summary>
            Gets the required series count.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartTypeConfig.PropertiesTypes">
            <summary>
            Gets the properties types.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartTypeConfig.CoreStyleType">
            <summary>
            Gets the type of the core style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartTypeConfig.CoreRendererType">
            <summary>
            Gets the type of the core renderer.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartTypeConfig.ApplyColorPaletteOnDataPoint">
            <summary>
            Gets a value indicating whether color palette should be applied to data point.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.BorderSizes">
            <summary>
            Describes sizes of border around rectangular area.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BorderSizes.#ctor">
            <summary>
            Initializes new instance of the BorderSizes class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BorderSizes.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes new instance of the BorderSizes class
            </summary>
            <param name="left">Left border margin</param>
            <param name="right">Right border margin</param>
            <param name="top">Top border margin</param>
            <param name="bottom">Bottom border margin</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.BorderSizes.Left">
            <summary>
            Gets or sets margin between inner and outer edges on the left side of a border
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.BorderSizes.Right">
            <summary>
            Gets or sets margin between inner and outer edges on the right side of a border
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.BorderSizes.Top">
            <summary>
            Gets or sets margin between inner and outer edges on the top side of a border
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.BorderSizes.Bottom">
            <summary>
            Gets or sets margin between inner and outer edges on the bottom side of a border
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.CustomDrawEventArgs">
            <summary>
            Class CustomDrawEventArgs. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomDrawEventArgs.#ctor">
            <summary>
            Initializes a new instance of the CustomDrawEventArgs class.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.CustomDrawEventHandler">
            <summary>
            Specifies custom drawing event
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ICustomDrawer">
            <summary>
            ICustomDrawer interface
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.ICustomDrawer.PreDraw">
            <summary>
            Occurs before any drawings on this object by graph core.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.ICustomDrawer.PostDraw">
            <summary>
            Occurs after all drawings on this object by graph core is finished.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ICustomBorderDrawer">
            <summary>
            Specifies custom border drawing interface
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ICustomBorderDrawer.MeasureBorder">
            <summary>
            Returns border margins
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ICustomBorderDrawer.DrawBorder(System.Drawing.RectangleF,System.Object)">
            <summary>
            Draws border
            </summary>
            <param name="drawSpace">Rectangle to draw border within</param>
            <param name="drawer">Drawing device interface</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.CustomPropertyType">
            <summary>
            custom property types
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.IChartMemberNameProvider">
            <summary>
            Provides name for chart member name provider.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.IChartMemberNameProvider.GetName(System.Int32)">
            <summary>
            Gets the name for the field to find.
            </summary>
            <returns>
            The name of the field or the empty string (""), if there is no value to return.
            </returns>
            <param name="i">The index of the field to find. </param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.BindingUtil">
            <summary>
            Utility class. For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BindingUtil.CheckDataSource(System.Object)">
            <summary>
            Check data source.
            </summary>
            <param name="dataSource">data source to check.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BindingUtil.CalculateSeriesData(GrapeCity.ActiveReports.Chart.Series,System.Object,System.String,System.Object,System.String)">
            <summary>
            Generates data values for given series 
            </summary>
            <param name="series">Series should be placed into SeriesCollection in order to make references to other series</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BindingUtil.GetDataMembers(System.Object,System.Boolean)">
            <summary>
            Gets the data members.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.XmlDataProvider">
            <summary>
            Provides access to XML data.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.XmlDataProvider.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the XMLDataProvider class.
            </summary>
            <param name="dataSource">Data source object.</param>
            <param name="columnName">The name of the column where the row of data is read.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.XmlDataProvider.Count">
            <summary>
            Gets the number of data values
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.XmlDataProvider.Item(System.Int32)">
            <summary>
            if index is more then maximum allowed value provider should try not to throw exception, but return default (0) value.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Editors.AxesSelectEditor">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.AxesSelectEditor.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.Editors.AxesSelectEditor" /> Class. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.AxesSelectEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.AxesSelectEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Editors.AxesSelectForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.AxesSelectForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.AxesSelectForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Editors.BindingEditor">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.BindingEditor.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.Editors.BindingEditor" /> Class. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.BindingEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.BindingEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.BindingEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.BindingEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.BindingEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="M:GrapeCity.ActiveReports.Chart.Editors.BindingEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.BindingEditor.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayEditor">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayEditor.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayEditor" /> Class. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="M:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.DoubleArrayForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor" /> Class. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a representation of an object's value within the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <returns>true if <see cref="M:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> is implemented; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paints a representation of the value of an object using the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs" />.
            </summary>
            <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> that indicates what to paint and where to paint it.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="M:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.DropDownEditor.PaintValueImpl(System.Object,System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paint value.
            </summary>
            <param name="value">The value to paint.</param>
            <param name="currentValue">Is equal to value for simple draw, and represents selected item in listbox</param>
            <param name="g">Context to paint.</param>
            <param name="bounds">Bounds to paint.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionEditor">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionEditor.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionEditor" /> Class. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="M:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Editors.LabelsCollectionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.UIOptions">
            <summary>
            Specifies user interface settings for SharpGraph control
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UIOptions.None">
            <summary>
            No UI
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UIOptions.ContextCustomize">
            <summary>
            Adds "Customize" menu under items context menu
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UIOptions.UseCustomTooltips">
            <summary>
            Use controls drawn tooltips instead on System.Windows.Forms.Tooltip
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UIOptions.ForceHitTesting">
            <summary>
            Switch this option on if you wish to use HitTest function, by default control applies
            optimization so only objects that has mouse event handlers (or context menus or tooltips) 
            attached will be visible thru hit testing.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.UICommand">
            <summary>
            Commands for control's DoCmd method
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UICommand.New">
            <summary>
            creates new chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UICommand.OpenXml">
            <summary>
            performs "open" command
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UICommand.SaveXml">
            <summary>
            performs "save as" command
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UICommand.PrintPreview">
            <summary>
            displays print preview
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UICommand.Copy">
            <summary>
            copies chart to clipboard
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UICommand.Designer">
            <summary>
            displays Chart Designer
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UICommand.Customize">
            <summary>
            displays Chart Designer, obsolete
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UICommand.Wizard">
            <summary>
            displays "Chart Wizard"
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UICommand.Clear">
            <summary>
            Reverts graph to empty state
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.UICommand.RefreshData">
            <summary>
            Refreshes chart data
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.DeviceModes">
            <summary>
            Specifies device drawing mode
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.DeviceModes.None">
            <summary>
            Standard mode, no specific options
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.DeviceModes.BlackWhite">
            <summary>
            Hatch patterns and line dashing are used to designate colors
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Alignment">
            <summary>
            Specifies how text item anchors to its position
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Alignment.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Alignment.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Alignment.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Alignment.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Alignment.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Alignment.TopLeft">
            <summary>
            Top left
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Alignment.TopRight">
            <summary>
            Top right
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Alignment.BottomLeft">
            <summary>
            Bottom left
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Alignment.BottomRight">
            <summary>
            Bottom right
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.DockType">
            <summary>
            Specify the docking area
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.DockType.Top">
            <summary>
            Dock to the top
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.DockType.Bottom">
            <summary>
            Dock to the bottom
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.DockType.Left">
            <summary>
            Dock to the left
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.DockType.Right">
            <summary>
            Dock to the right
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.BarType">
            <summary>
            Specifies bar shapes
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.BarType.Bar">
            <summary>
            Bar
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.BarType.Cone">
            <summary>
            Cone
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.BarType.Custom">
            <summary>
            Custom bar type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.BarType.Cylinder">
            <summary>
            Cylinder
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.BarType.Pyramid">
            <summary>
            Pyramid shape
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.BaseStyle">
            <summary>
            Funnel/Pyramid chart 3D drawing style 
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.BaseStyle.CircularBase">
            <summary>
            (Default) Renders the Funnel chart with a Circular base shape. 
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.BaseStyle.SquareBase">
            <summary>
            Renders the Funnel chart with a Square base shape.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.LabelsPlacement">
            <summary>
            Point label placement
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.LabelsPlacement.Left">
            <summary>
            Data point labels are drawn to the left of the funnel segment
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.LabelsPlacement.Right">
            <summary>
            (Default) Data point labels are drawn to the right of the funnel segment
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.FunnelStyle">
            <summary>
            Funnel chart style
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.FunnelStyle.YIsWidth">
            <summary>
            Data point Y-value controls the radius of the funnel segment.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.FunnelStyle.YIsHeight">
            <summary>
            (Default) Data point Y-value controls the height of the funnel segment
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Exchange.Persistence">
            <summary>
            Manages saving and restoring of chart state
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Exchange.Persistence.ToXml(GrapeCity.ActiveReports.Chart.SharpGraph,System.Xml.XmlElement,System.Boolean)">
            <summary>
            Creates an XML encoding of the SharpGraph object and its current state.
            </summary>
            <param name="sharpChartControl"></param>
            <param name="rootElement"></param>
            <param name="includeData">Specifies whether to store data to XML</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Exchange.Persistence.ToXml(GrapeCity.ActiveReports.Chart.SharpGraph,System.String)">
            <summary>
            Creates an XML encoding of the SharpGraph object and its current state (without data).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Exchange.Persistence.ToXml(GrapeCity.ActiveReports.Chart.SharpGraph,System.String,System.Boolean)">
            <summary>
            Creates an XML encoding of the SharpGraph object and its current state.
            </summary>
            <param name="sharpChartControl"></param>
            <param name="fileName"></param>
            <param name="includeData"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Exchange.Persistence.FromXml(GrapeCity.ActiveReports.Chart.SharpGraph,System.Xml.XmlElement)">
            <summary>
            Reconstructs a SharpGraph object with a specified state from an XML encoding.
            
            Use "strict" attribute of root element "SharpGraph" in xml files
            to control error handling behaviour. This attribute is false by default. If true xml import process will stop once it finds first error and throw an exception.
            If false it will mutually continue. 
            </summary>
            <param name="sharpChartControl"></param>
            <param name="rootElement">The XML encoding to use to reconstruct the SharpGraph object.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Exchange.Persistence.FromXml(GrapeCity.ActiveReports.Chart.SharpGraph,System.String)">
            <summary>
            Reconstructs a SharpGraph object with a specified state from an XML encoding.
            </summary>
            <param name="sharpChartControl"></param>
            <param name="fileName">The XML file name to use to reconstruct the SharpGraph object.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.AxisType">
            <summary>
            Specifies axis type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.AxisType.Categorical">
            <summary>
            Tha axis is used to place categories
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.AxisType.Numerical">
            <summary>
            Numeric axis
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.AxisType.Logarithmic">
            <summary>
            Logarithmic axis
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.StandardAxis">
            <summary>
            Enum StandardAxis
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.StandardAxis.AxisX">
            <summary>
            The axis x
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.StandardAxis.AxisX2">
            <summary>
            The axis x2
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.StandardAxis.AxisY">
            <summary>
            The axis y
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.StandardAxis.AxisY2">
            <summary>
            The axis y2
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.StandardAxis.AxisZ">
            <summary>
            The axis z
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ArrowType">
            <summary>
            Enum ArrowType
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ArrowType.None">
            <summary>
            No arrow
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ArrowType.Triangle">
            <summary>
            Triangle arrow
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ArrowType.Lines">
            <summary>
            Lines arrow
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.AxisBase">
            <summary>
            Axes base class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxisBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.AxisBase" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxisBase.CloneTo(GrapeCity.ActiveReports.Chart.AxisBase)">
            <summary>
            Creates clone of the current object
            </summary>
            <param name="clone"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.Xml">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxisBase.CheckPropertiesValidityImpl(GrapeCity.ActiveReports.Chart.SharpGraph)">
            <summary>
            This method should be overriden if item should check inter-property dependencies.
            By default it does nothing
            Method should throw ArgumentException if it encounters errors
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.TickOffset">
            <summary>
            Offset of the first tick from Axis.Min
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.Position">
            <summary>
            Position along adjacent axis
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.SmartLabels">
            <summary>
            Gets or sets a value indicating whether the labels are smart.
            </summary>
            <value>
                <c>true</c> if [smart labels]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.Arrow">
            <summary>
            Gets or sets the axis arrow type.
            </summary>
            <value>The arrow.</value>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Arrow</exception>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.AxisType">
            <summary>
            Gets or sets axis type, i.e. numerical or categorical
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.Min">
            <summary>
            Min value for the axis or starting data point index for categories axis
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.Max">
            <summary>
            Max value for the axis. Last data point index for categories axis.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.Title">
            <summary>
            Text to draw on axis
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.TitleFont">
            <summary>
            Font to use to draw title
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.MajorTick">
            <summary>
            Major axis tick
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.MinorTick">
            <summary>
            Minor axis tick
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.Line">
            <summary>
            Line used to draw axis
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.LabelFont">
            <summary>
            Font used to draw axis' labels
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.LabelsGap">
            <summary>
            How many labels to skip (for example 3 means: show label, skip, skip, ...)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.LabelFormat">
            <summary>
            Format used to ouput labels values
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.Labels">
            <summary>
            Labels contents, used for categorical axes
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.LabelsInside">
            <summary>
            Controls position of labels against axis line
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.LabelsAtBottom">
            <summary>
            Gets or sets a value indicating whether the labels should be shown at bottom of the axis.
            </summary>
            <value>
                <c>true</c> if [labels at bottom]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.LabelsVisible">
            <summary>
            If false, axis labels will not be drawn.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.Scale">
            <summary>
            Gets or sets scale value used to draw labels. Label values are divided by scale.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.DisplayScale">
            <summary>
            Specifies whether to display scale value on axis's title
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.Visible">
            <summary>
            Specifies whether to draw axis.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisBase.StaggerLabels">
            <summary>
            Gets or sets a value indicating whether the labels are stagger.
            </summary>
            <value>
                <c>true</c> if [stagger labels]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxisBase.ShouldSerializeScroll">
            <summary>
            This method is called by serializer using reflection.
            This is a standard way to dynamically specify DesignerSerializationVisibility
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Axis">
            <summary>
            Chart's axis
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Axis.#ctor">
            <summary>
            Creates default (numerical) axis
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Axis.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Axis.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Axis.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Axis.Name">
            <summary>
            Gets or sets the axis name.
            </summary>
            <value>The name.</value>
            <exception cref="T:System.InvalidOperationException">Can't change name for standard axis</exception>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Axis.IsDirty">
            <summary>
            Dirty state.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.CustomAxis">
            <summary>
            Custom axis
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomAxis.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomAxis.#ctor">
            <summary>
            Creates default axis
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomAxis.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomAxis.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.CustomAxis.Parent">
            <summary>
            Main axis (i.e. X, Y or Z) on which to draw this custom axis
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.CustomAxis.MinDerived">
            <summary>
            if true, axis automatically calculates it's min value based on position against parent axis
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.CustomAxis.MaxDerived">
            <summary>
            if true, axis automatically calculates it's max value based on position against parent axis
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.CustomAxis.PlacementLength">
            <summary>
            Legnth of custom axis in terms of parent axis
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.CustomAxis.PlacementLocation">
            <summary>
            Position of custom axis' origin in terms of parent axis
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.CustomAxis.IsDirty">
            <summary>
            Dirty state.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.AxesCollection">
            <summary>
            Axes collection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.#ctor">
            <summary>
            Controls standard axes by default
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.Clone">
            <summary>
            Clones current object
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxesCollection.Item(System.Int32)">
            <summary>
            Gets axis.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxesCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.ActiveReports.Chart.AxisBase" /> with the specified axis name.
            </summary>
            <param name="axisName">Name of the axis.</param>
            <returns>AxisBase.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.Add(GrapeCity.ActiveReports.Chart.AxisBase)">
            <summary>
            Adds axis to the collection
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.AddRange(GrapeCity.ActiveReports.Chart.AxisBase[])">
            <summary>
            Adds a set of axes to the current collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.ToArray">
            <summary>
            Gets all axis.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.Contains(GrapeCity.ActiveReports.Chart.AxisBase)">
            <summary>
            Determines whether the Collection contains the given <see cref="T:GrapeCity.ActiveReports.Chart.AxisBase" /></summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.AxisBase" /> to find within the collection</param>
            <returns>
                <code>true</code> if the collection contains the <code>value</code>parameter given; otherwise, <code>false</code>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.Remove(GrapeCity.ActiveReports.Chart.AxisBase)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.AxisBase" /> to remove from the collection.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.Insert(System.Int32,GrapeCity.ActiveReports.Chart.AxisBase)">
            <summary>
            Inserts an <code>AxisBase</code> to the collection at the specified position
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.IndexOf(GrapeCity.ActiveReports.Chart.AxisBase)">
            <summary>
            Returns the index of the first occurrence of a value in the collection.
            </summary>
            <param name="value">The object to locate in array.</param>
            <returns>The index of the first occurrence of value within the entire array, if found; otherwise, the lower bound of the array - 1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes when removing an element from the System.Collections.CollectionBase instance.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxesCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.CollectionBase" /> instance. This property cannot be overridden.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxesCollection.Capacity">
            <summary>
            Gets or sets the number of elements that the <see cref="T:System.Collections.CollectionBase" /> can contain.
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the System.Collections.CollectionBase instance.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the System.Collections.CollectionBase instance.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the System.Collections.CollectionBase instance.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxesCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.LabelsCollection">
            <summary>
            Labels collection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelsCollection.Clone">
            <summary>
            Clones current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelsCollection.GetLabels">
            <summary>
            Gets a string array of the labels in the collection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LabelsCollection.Item(System.Int32)">
            <summary>
            TBW
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelsCollection.Add(System.String)">
            <summary>
            Adds label to the collection
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelsCollection.AddRange(System.String[])">
            <summary>
            Adds a set of labels to the current collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelsCollection.Contains(System.String)">
            <summary>
            Determines whether the Collection contains the given element
            </summary>
            <param name="value">The string to find within the collection</param>
            <returns>
                <code>true</code> if the collection contains the <code>value</code>parameter given; otherwise, <code>false</code>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelsCollection.CopyTo(GrapeCity.ActiveReports.Chart.CustomAxis[],System.Int32)">
            <summary>
            TBW
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelsCollection.IndexOf(System.String)">
            <summary>
            Returns the index of the first occurrence of a value in the collection.
            </summary>
            <param name="value">The object to locate in array.</param>
            <returns>The index of the first occurrence of value within the entire array, if found; otherwise, the lower bound of the array - 1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelsCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <code>value</code> should be inserted.</param>
            <param name="value">The <see cref="T:System.String" /> to insert.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelsCollection.Remove(System.String)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The <see cref="T:System.String" /> to remove from the collection.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelsCollection.Clear">
            <summary>
            Removes all labels from collection
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LabelsCollection.Count">
            <summary>
            Gets the number of items in collection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.AxisScroll">
            <summary>
            Represents the scroll bar on an axis.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxisScroll.#ctor">
            <summary>
            Initializes a new instance of the AxisScroll class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxisScroll.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxisScroll.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.AxisScroll.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisScroll.ScrollPosition">
            <summary>
            Scrolling position within parent axis
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisScroll.ScrollLength">
            <summary>
            Scrolling area length
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisScroll.ScrollStepSize">
            <summary>
            Step scrolling size. Step scrolling is occured when user clicks scroll buttons.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisScroll.Visible">
            <summary>
            Specifies whether scroll is available
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisScroll.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.ActiveReports.Chart.AxisScroll" /> is enabled.
            </summary>
            <value>
                <c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisScroll.BackColor">
            <summary>
            scrollbar background color
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisScroll.ButtonColor">
            <summary>
            buttons face color
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisScroll.OutlineColor">
            <summary>
            scrollbar outline color
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisScroll.Width">
            <summary>
            scrollbar width in pixels
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.AxisScroll.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.BackdropItem">
            <summary>
            Represents backdrop that acts as separate item, i.e. may handle mouse events
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor">
            <summary>
            Creates a new instance of the BackdropItem object
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Creates a new instance of the BackdropItem object
            </summary>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new instance of the BackdropItem object
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Creates a new instance of the BackdropItem object.
            </summary>
            <param name="color"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(System.Drawing.Color,System.Byte)">
            <summary>
            Creates a new instance of the BackdropItem object.
            </summary>
            <param name="color"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(System.Drawing.Color,System.Byte,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Creates a new instance of the BackdropItem object.
            </summary>
            <param name="color"></param>
            <param name="alpha"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a new instance of the BackdropItem object of a "gradient" style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Creates a new instance of the BackdropItem object of a "gradient" style.
            </summary>
            <param name="gradient"></param>
            <param name="color"></param>
            <param name="color2"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a new instance of the BackdropItem object with a "hatch" style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Creates a new instance of the BackdropItem object of a "hatch" style.
            </summary>
            <param name="pattern"></param>
            <param name="color"></param>
            <param name="color2"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle)">
            <summary>
            Creates a new instance of the BackdropItem object with a "picture" style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Creates a new instance of the BackdropItem object with a "picture" style.
            </summary>
            <param name="picture"></param>
            <param name="pictureAlignment"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Drawing2D.HatchStyle,System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle)">
            <summary>
            Creates a new instance of the BackdropItem object.
            </summary>
            <param name="style"></param>
            <param name="color"></param>
            <param name="color2"></param>
            <param name="gradient"></param>
            <param name="pattern"></param>
            <param name="picture"></param>
            <param name="pictureAlignment"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Drawing2D.HatchStyle,System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Creates a new instance of the BackdropItem object.
            </summary>
            <param name="style"></param>
            <param name="color"></param>
            <param name="color2"></param>
            <param name="gradient"></param>
            <param name="pattern"></param>
            <param name="picture"></param>
            <param name="pictureAlignment"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Drawing2D.HatchStyle,System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle,System.Byte)">
            <summary>
            Creates a new instance of the BackdropItem object.
            </summary>
            <param name="style"></param>
            <param name="color"></param>
            <param name="color2"></param>
            <param name="gradient"></param>
            <param name="pattern"></param>
            <param name="picture"></param>
            <param name="pictureAlignment"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Drawing2D.HatchStyle,System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle,System.Byte,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Creates a new instance of the BackdropItem object.
            </summary>
            <param name="style"></param>
            <param name="color"></param>
            <param name="color2"></param>
            <param name="gradient"></param>
            <param name="pattern"></param>
            <param name="picture"></param>
            <param name="pictureAlignment"></param>
            <param name="alpha"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Drawing2D.HatchStyle,System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle,System.Byte,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.BackdropItem" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.BackdropItem.MouseMove">
            <summary>
            Occurs when the mouse pointer is moved over the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.BackdropItem.MouseDown">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is pressed.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.BackdropItem.MouseEnter">
            <summary>
            Occurs when the mouse pointer enters the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.BackdropItem.MouseHover">
            <summary>
            Occurs when the mouse pointer hovers over the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.BackdropItem.MouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.BackdropItem.MouseUp">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is released.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.BackdropItem.MouseWheel">
            <summary>
            Occurs when the mouse wheel moves while the control has focus.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.GrapeCity#ActiveReports#Chart#IMouseEnabled#NeedMouseHandling">
            <summary>
            Indicates whether mouse events should be handled for this control (i.e. control implemets at least one of mouse event handler).
            </summary>
            <returns>
                <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.OnMouseMove(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseMove" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.OnMouseDown(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.OnMouseEnter(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseEnter" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.OnMouseHover(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseHover" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.OnMouseLeave(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseLeave" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.OnMouseUp(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseUp" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.OnMouseWheel(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseWheel" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.BackdropItem.ContextMenu">
            <summary>
            Gets or sets the shortcut menu associated with the control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.BackdropItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Border">
            <summary>
            Represents information required to draw borders
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Border.MIN_SHADOWWEIGHT_VALUE">
            <summary>
            ZDepthRatio property's minimal and maximal values.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.#ctor">
            <summary>
            Creates default border
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Line)">
            <summary>
            Initializes new instance of border object.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Line,System.Int32)">
            <summary>
            Initializes new instance of border object with a black shadow.
            </summary>
            <param name="line">Specifies border line info</param>
            <param name="shadowWeight">Specifies shadow weight</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Line,System.Int32,System.Drawing.Color)">
            <summary>
            Initializes new instance of border object.
            </summary>
            <param name="line">Specifies border line info</param>
            <param name="shadowWeight">Specifies shadow weight</param>
            <param name="shadowColor">Specifies shadow color</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Border.Line">
            <summary>
            Line style to draw border
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Border.ShadowWeight">
            <summary>
            Width of shadow outlining border
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Border.ShadowColor">
            <summary>
            Color of shadow outlining border
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Border.Converter">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of object to get the properties for.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that will be used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" />that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.Equals(System.Object)">
            <summary>
            Compare the Border object to another System.Object and check if the two are equal.
            </summary>
            <param name="obj">System.Object to compare with Border object.</param>
            <returns>Boolean type. Returns True if the Border object is equal to System.Object. Otherwise it is False.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Border.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ChartArea">
            <summary>
            Chart area object
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartArea.MIN_ZDEPTH_VALUE">
            <summary>
            ZDepthRatio property's minimal and maximal values.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.Xml">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartArea.#ctor">
            <summary>
            Initializes new instance of chart area object without axes
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartArea.#ctor(System.Boolean)">
            <summary>
            Initializes new instance of chart area object.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartArea.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartArea.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.Backdrop">
            <summary>
            Gets or sets backdrop info to draw chart area
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.Border">
            <summary>
            Gets or sets chart area's border info
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.Padding">
            <summary>
            Gets or sets chart area's padding info
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.ZDepthRatio">
            <summary>
            Gets or sets area depth, specified as z/x ratio.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.WallXZ">
            <summary>
            Gets or sets XZ wall properties
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.WallXY">
            <summary>
            Gets or sets XY wall settings
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.WallYZ">
            <summary>
            Gets or sets YZ wall properties
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.Projection">
            <summary>
            geometric projection details
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.Light">
            <summary>
            Lighting details
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.ViewPoint">
            <summary>
            Determines point from which chart is seen
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.Axes">
            <summary>
            User defined custom axes
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.WallRanges">
            <summary>
            Wall ranges (strip lines)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.SwapAxesDirection">
            <summary>
            Specifies whether to swap X and Y axis direction. Used to get horizontally oriented chart.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartArea.SeriesLine">
            <summary>
            Series line
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartArea.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartArea.SetInversedAxes(System.Boolean)">
            <summary>
            Forces axis swapping
            </summary>
            <param name="inversed"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ChartAreasCollection">
            <summary>
            Chart areas collection class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartAreasCollection.#ctor">
            <summary>
            Initializes a new instance of the ChartAreasCollection class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartAreasCollection.Clone">
            <summary>
            Creates clone of the current object
            </summary>
            <returns></returns>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.ChartAreasCollection.Change">
            <summary>
            Occurs when collection contents is changed.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartAreasCollection.Item(System.Int32)">
            <summary>
            Gets or sets area object at the given index
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartAreasCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.ActiveReports.Chart.ChartArea" /> with the specified chart area name.
            </summary>
            <param name="chartAreaName">Name of the chart area.</param>
            <returns>ChartArea.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartAreasCollection.Add(GrapeCity.ActiveReports.Chart.ChartArea)">
            <summary>
            Adds area object to the current collection
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartAreasCollection.AddRange(GrapeCity.ActiveReports.Chart.ChartArea[])">
            <summary>
            Adds a set of area objects to the current collection
            </summary>
            <param name="areas"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartAreasCollection.Contains(GrapeCity.ActiveReports.Chart.ChartArea)">
            <summary>
            Determines whether the Collection contains the given <see cref="T:GrapeCity.ActiveReports.Chart.ChartArea" /></summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.ChartArea" /> to find within the collection</param>
            <returns>
                <code>true</code> if the collection contains the <code>value</code>parameter given; otherwise, <code>false</code>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartAreasCollection.CopyTo(GrapeCity.ActiveReports.Chart.ChartArea[],System.Int32)">
            <summary>
            TBW
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartAreasCollection.IndexOf(GrapeCity.ActiveReports.Chart.ChartArea)">
            <summary>
            Returns the index of the first occurrence of a value in the collection.
            </summary>
            <param name="value">The object to locate in array.</param>
            <returns>The index of the first occurrence of value within the entire array, if found; otherwise, the lower bound of the array - 1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartAreasCollection.Insert(System.Int32,GrapeCity.ActiveReports.Chart.ChartArea)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <code>value</code> should be inserted.</param>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.ChartArea" /> to insert.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartAreasCollection.Remove(GrapeCity.ActiveReports.Chart.ChartArea)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.ChartArea" /> to remove from the collection.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartAreasCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ChartAreasCollection.Clear">
            <summary>
            Removes all chart areas from the collection
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ChartAreasCollection.ParentControl">
            <summary>
            Gets the SharpGraph control that holds that collection
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ColorPalette">
            <summary>
            Specifies the type of color palette
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ColorPalette.None">
            <summary>
            Graph will not generate any Backdrop values automatically
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ColorPalette.Default">
            <summary>
            SharpGraph's default color palette
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ColorPalette.Cascade">
            <summary>
            8 color cascades from deep tee to pale orchids
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ColorPalette.Springtime">
            <summary>
            Deep green spring colors. Two vivid colors and five pastel colors
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ColorPalette.Iceburg">
            <summary>
            It ranges from soft blue to gray in iceberg tones
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ColorPalette.Iceberg">
            <summary>
            It ranges from soft blue to gray in iceberg tones
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ColorPalette.Confetti">
            <summary>
            A few light pastel colors
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ColorPalette.Greens">
            <summary>
            Color range from green refrigerator in the 70's to evergreens
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ColorPalette.Berries">
            <summary>
            Color range from blueberry to raspberry
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ColorPalette.Autumn">
            <summary>
            Rich brown and gold autumn 
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ColorPalette.Murphy">
            <summary>
            Bitter green, rust color, beige
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ColorPaletteTypeConverter">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ColorPaletteTypeConverter.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.ColorPaletteTypeConverter" /> Class. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ColorPaletteTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if <see cref="M:GrapeCity.ActiveReports.Chart.ColorPaletteTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> should be called to find a common set of values the object supports; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ColorPaletteTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.This parameter or properties of this parameter can be null.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ColorPaletteTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" />that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ColorPaletteTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ColorPaletteHandler">
            <summary>
            Implementations of this class will have knowledge on how to apply color palette to specific 
            chart type
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.CustomProperties">
            <summary>
            Represents collection of series properties (series type specific)
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.CustomProperties" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetPropertiesCount">
            <summary>
            For internal use only!
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.#ctor(GrapeCity.ActiveReports.Chart.KeyValuePair[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.CustomProperties" /> class.
            </summary>
            <param name="initialValues">The initial values.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.CustomProperties.IsDirty">
            <summary>
            This member overrides <code>Item.IsDirty</code>. Always false.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.CountNotNullProperties">
            <summary>
            For internal use only!
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.Contains(System.String)">
            <summary>
            Returns true if properties collection contains the property with the name specified
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.CustomProperties.Item(System.String)">
            <summary>
            Gets property by its name
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <returns>The class name of the object, or null if the class does not have a name.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetAttributes">
            <summary>
            Returns a collection of custom attributes for this instance of a component.
            </summary>
            <returns>An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for this object.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <returns>The name of the object, or null if the object does not have a name.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetConverter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter" /> for this object.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetDefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <returns>An <see cref="T:System.ComponentModel.EventDescriptor" /> that represents the default event for this object, or null if this object does not have events.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetDefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the default property for this object, or null if this object does not have properties.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetEditor(System.Type)">
            <summary>
            Returns an editor of the specified type for this instance of a component.
            </summary>
            <param name="editorBaseType">A <see cref="T:System.Type" /> that represents the editor for this object.</param>
            <returns>An <see cref="T:System.Object" /> of the specified type that is the editor for this object, or null if the editor cannot be found.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetEvents(System.Attribute[])">
            <summary>
            Returns the events for this instance of a component using the specified attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the filtered events for this component instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetEvents">
            <summary>
            Returns the events for this instance of a component.
            </summary>
            <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the events for this component instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetProperties(System.Attribute[])">
            <summary>
            Returns the properties for this instance of a component using the attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the filtered properties for this component instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetProperties">
            <summary>
            Returns the properties for this instance of a component.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties for this component instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns an object that contains the property described by the specified property descriptor.
            </summary>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the property whose owner is to be found.</param>
            <returns>An <see cref="T:System.Object" /> that represents the owner of the specified property.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.CustomProperties.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.KeyValuePair">
            <summary>
            Represents a key-value pair.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.KeyValuePair.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.KeyValuePair" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.KeyValuePair.#ctor(System.String,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.KeyValuePair" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.KeyValuePair.#ctor(System.String,System.Object,GrapeCity.ActiveReports.Chart.ICustomPropertyValueValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.KeyValuePair" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.KeyValuePair.#ctor(System.String,System.Object,GrapeCity.ActiveReports.Chart.ICustomPropertyValueValidator,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.KeyValuePair" /> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.KeyValuePair.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.KeyValuePair.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.KeyValuePair.Validator">
            <summary>
            Gets the validator.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.KeyValuePair.IsPointOverridable">
            <summary>
            Gets true if the custom property is applicable to series's points
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ICustomPropertyValueValidator">
            <summary>
            Interface ICustomPropertyValueValidator
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ICustomPropertyValueValidator.Validate(System.Object)">
            <summary>
            Method should throw ArgumentException if value is not valid
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ICustomPropertyValueValidator.GetAnyValidValue">
            <summary>
            Gets any valid value.
            </summary>
            <returns>The instance of <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.NumericRangeValidator">
            <summary>
            Class NumericRangeValidator. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NumericRangeValidator.#ctor(System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.NumericRangeValidator" /> class.
            </summary>
            <param name="min">The minimum.</param>
            <param name="isInclusive">if set to <c>true</c> [is inclusive].</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NumericRangeValidator.#ctor(System.Double,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.NumericRangeValidator" /> class.
            </summary>
            <param name="min">The minimum.</param>
            <param name="max">The maximum.</param>
            <param name="isInclusive">if set to <c>true</c> [is inclusive].</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NumericRangeValidator.Validate(System.Object)">
            <summary>
            Method should throw ArgumentException if value is not valid
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NumericRangeValidator.GetAnyValidValue">
            <summary>
            Gets any valid value.
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.DataPoint">
            <summary>
            Represents the set of properties for a data point.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPoint.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.IsDirty">
            <summary>
            This member overrides <code>Item.IsDirty</code>. Always false.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.DataPoint" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPoint.#ctor(System.Object,GrapeCity.ActiveReports.Chart.DoubleArray,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.DataPoint" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPoint.#ctor(System.Object,GrapeCity.ActiveReports.Chart.DoubleArray,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.DataPoint" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPoint.#ctor(System.Object,GrapeCity.ActiveReports.Chart.DoubleArray,System.Boolean,GrapeCity.ActiveReports.Chart.CustomProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.DataPoint" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPoint.#ctor(System.Object,GrapeCity.ActiveReports.Chart.DoubleArray,System.Boolean,GrapeCity.ActiveReports.Chart.CustomProperties,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.DataPoint" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPoint.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPoint.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.Properties">
            <summary>
            Gets or sets the properties fo data point.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.IsEmpty">
            <summary>
            Gets or sets a value indicating whether this instance is empty.
            </summary>
            <value>
                <c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.YValues">
            <summary>
            Gets or sets the Y values.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.XValue">
            <summary>
            Gets or sets the X value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.DisplayInLegend">
            <summary>
            Gets or sets a value indicating whether data point should be reflected in legend.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.LegendText">
            <summary>
            Gets or sets the legend text.
            </summary>
            <value>The legend text.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.Backdrop">
            <summary>
            Gets or sets the backdrop.
            </summary>
            <value>The backdrop.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.BorderLine">
            <summary>
            Gets or sets the border line.
            </summary>
            <value>The border line.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.Line">
            <summary>
            Gets or sets the line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.Marker">
            <summary>
            Gets or sets the marker.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPoint.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.DoubleArray">
            <summary>
            Array of double values
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DoubleArray.IsDirty">
            <summary>
            This member overrides <code>Item.IsDirty</code>. Always false.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.#ctor(System.Double[])">
            <summary>
            Initializes new instance of the DoubleArray
            </summary>
            <param name="data">Data to initialize array with</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.#ctor(System.DateTime[])">
            <summary>
            Initializes new instance of the DoubleArray
            </summary>
            <param name="data">Data to initialize array with</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.#ctor(System.Double[],System.Boolean[])">
            <summary>
            Initializes new instance of the DoubleArray
            </summary>
            <param name="data">Data to initialize array with</param>
            <param name="isDateTime">Specifies whether the array value is a DateTime value</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.SetupFromString(System.String,System.IFormatProvider)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.#ctor(System.String,System.IFormatProvider)">
            <summary>
            Initializes new instance of the DoubleArray. This constructor is used by code serialization.
            </summary>
            <param name="data">Data to initialize array with. Format is numbers in invariant culture separated by semicolons</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.SetupFromXml(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.Clone">
            <summary>
            Creates a clone of the current object
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DoubleArray.Item(System.Int32)">
            <summary>
            Gets value at the index specified
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.IsDateTime(System.Int32)">
            <summary>
            Gets a value indicating whether the 2D array is a DateTime type array.
            </summary>
            <param name="index">Specify the index of a two-dimensional array.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.SetIsDateTime(System.Int32,System.Boolean)">
            <summary>
            Sets the specified value of the specified index as a DateTime value.
            </summary>
            <param name="index">Specify the index of the value to be set.</param>
            <param name="value">Specify a value.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DoubleArray.Length">
            <summary>
            Gets array length
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.DoubleArray.Converter">
            <summary>
            Provides a way to process converting of instances ot <see cref="T:GrapeCity.ActiveReports.Chart.DoubleArray" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" />that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.ToString(System.IFormatProvider)">
            <summary>
            Convert the value of the current instance to string representation, depending on the specified culture.
            </summary>
            <param name="culture">Specify the culture to use.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleArray.ToString">
            <summary>
            Converts the value of the current instance to string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.DataPointsCollection">
            <summary>
            DataPoints collection class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.Clone">
            <summary>
            Creates a clone of the current collection
            </summary>
            <returns></returns>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.DataPointsCollection.Change">
            <summary>
            Occurs when the collection's content is changed
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.#ctor">
            <summary>
            Initializes a new instance of the DataPointsCollection class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPointsCollection.Count">
            <summary>
            Gets the number of elements contained in the DataPointsCollection instance.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPointsCollection.Capacity">
            <summary>
            Gets or sets the number of elements that the DataPointsCollection can contain.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DataPointsCollection.Item(System.Int32)">
            <summary>
            Gets or sets collection item by given index
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.Add(GrapeCity.ActiveReports.Chart.DataPoint)">
            <summary>
            Adds layer object to the current collection
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.AddRange(GrapeCity.ActiveReports.Chart.DataPoint[])">
            <summary>
            Adds a set of layers to the current collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.Contains(GrapeCity.ActiveReports.Chart.DataPoint)">
            <summary>
            Determines whether the Collection contains the given <see cref="T:GrapeCity.ActiveReports.Chart.DataPoint" /></summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.DataPoint" /> to find within the collection</param>
            <returns>
                <code>true</code> if the collection contains the <code>value</code>parameter given; otherwise, <code>false</code>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.CopyTo(GrapeCity.ActiveReports.Chart.DataPoint[],System.Int32)">
            <summary>
            TBW
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.IndexOf(GrapeCity.ActiveReports.Chart.DataPoint)">
            <summary>
            Returns the index of the first occurrence of a value in the collection.
            </summary>
            <param name="value">The object to locate in array.</param>
            <returns>The index of the first occurrence of value within the entire array, if found; otherwise, the lower bound of the array - 1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.Insert(System.Int32,GrapeCity.ActiveReports.Chart.DataPoint)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <code>value</code> should be inserted.</param>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.DataPoint" /> to insert.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.Remove(GrapeCity.ActiveReports.Chart.DataPoint)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.DataPoint" /> to remove from the collection.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.DataPointsCollection.Converter">
            <summary>
            Provides a way to process converting of instances ot <see cref="T:GrapeCity.ActiveReports.Chart.DataPointsCollection" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.AddXY(System.Object,System.Double[])">
            <summary>
            Adds a DataPoint with the specified parameters to the DataPointsCollection.
            </summary>
            <param name="xValue">Specifies the X value.</param>
            <param name="yValue">Specifies the Y values.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.AddY(System.Double[])">
            <summary>
            Adds a DataPoint with the specified y value to the DataPointsCollection.
            </summary>
            <param name="yValue">Specifies the Y value.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.DataBindXY(System.Object,System.String,System.Object,System.String)">
            <summary>
            Binds the X and Y values of the collection's DataPoints to the specified column(s) of the specified data source.
            </summary>
            <param name="xDataSource">Specifies the data source object that provides the X value(s).</param>
            <param name="xField">Specify the name of the column supplying the X value of DataPoints as a string.</param>
            <param name="yDataSource">Specifies the data source object that provides the Y value(s).</param>
            <param name="yFields">Specify a comma-separated column names to supply Y values for DataPoints.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.DataBindY(System.Object,System.String)">
            <summary>
            Binds the Y value(s) of the collection's DataPoints to the specified column(s) of the specified data source.  
            </summary>
            <param name="yDataSource">Specifies the data source object that provides the Y value(s).</param>
            <param name="yFields">Specifies the data source field(s) to which to bind DataPoints.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.DataBindXY(System.Collections.IEnumerable,System.Collections.IEnumerable[])">
            <summary>
            Binds the X value and Y values of the collection's DataPoints to the first column(s) of the specified data source(s).
            </summary>
            <param name="xValueEnumerable">Specifies the data source that will supply the X values for the DataPoints. The first available column will be used.</param>
            <param name="yEnumerableValues">Specifies the Y value(s) of the DataPoint object added to the collection (one or more comma-separated values).</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.DataBindY(System.Collections.IEnumerable[])">
            <summary>
            Binds the Y value(s) of the collection's DataPoints to the first column of the specified data source(s).  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.DataBindXY(System.Object[],System.Double[][])">
            <summary>
            Binds the X value and Y values of the collection's DataPoints to a specified data source.
            </summary>
            <param name="xValues">Specifies the array of X values of the DataPoint object added to the collection.</param>
            <param name="yValues">Specifies the array of Y values of the doubles added to the collection.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DataPointsCollection.DataBindY(System.Double[][])">
            <summary>
            Binds the Y values of the collection's DataPoints to a specified data source.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.FontInfo">
            <summary>
            Summary description for FontInfo.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FontInfo.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FontInfo.#ctor(System.Drawing.Color,System.Drawing.Font,System.Single)">
            <summary>
            Initializes new instance of the FontInfo object
            </summary>
            <param name="color">Text color</param>
            <param name="font">System font</param>
            <param name="angle">Text angle in degrees</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FontInfo.#ctor(System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Initializes new instance of the FontInfo object
            </summary>
            <param name="color">Text color</param>
            <param name="font">System font</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FontInfo.#ctor">
            <summary>
            Initializes new (default) instance of the FontInfo object
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FontInfo.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FontInfo.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.FontInfo.Color">
            <summary>
            Specifies the text color
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.FontInfo.Angle">
            <summary>
            Rotation angle, clockwise, degrees
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.FontInfo.Font">
            <summary>
            GDI font
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FontInfo.Equals(System.Object)">
            <summary>
            Compare the FontInfo object to another System.Object and check if the two are equal.
            </summary>
            <param name="obj">System.Object to compare with FontInfo object.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FontInfo.GetHashCode">
            <summary>
            It functions as a hash function for a particular type. It is suitable for use in data structures such as hash algorithm and hash table.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.GridLayout">
            <summary>
            Represents the setting of the GridLayout object
            For a list of all members of this type, see the GridLayout member
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GridLayout.IsDirty">
            <summary>
            This member overrides <code>Item.IsDirty</code>. Always false.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.#ctor">
            <summary>
            Initializes a new instance of the GridLayout class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the GridLayout class, specifying the number of rows and the number of columns
            </summary>
            <param name="rows">Specify the number of rows</param>
            <param name="columns">Specify the number of columns</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GridLayout.Columns">
            <summary>
            Gets or sets the number of columns in GridLayout
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GridLayout.Rows">
            <summary>
            Gets or sets the number of rows in GridLayout
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GridLayout.Size">
            <summary>
            Gets number of chart area cells
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.IncreaseSize">
            <summary>
            Increases rows or columns whichever is less by 1.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.DecreaseSize">
            <summary>
            Decreases rows or columns whichever is more by 1.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.GridLayout.Converter">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of object to get the properties for.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that will be used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" />that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.Equals(System.Object)">
            <summary>
            Compare the GridLayout object to another System.Object and check if the two are equal.
            </summary>
            <param name="obj">System.Object to compare with GridLayout object.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GridLayout.GetHashCode">
            <summary>
            Gets hash code.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.IGraphItem">
            <summary>
            For internal use. Base interface for chart's items.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.IGraphItem.IsDirty">
            <summary>
            Dirty state.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.IGraphItem.IsAttachable">
            <summary>
            Current attachable state.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.IGraphItem.AttachParent(GrapeCity.ActiveReports.Chart.IGraphItem)">
            <summary>
            Attache to parent.
            </summary>
            <param name="parent">parent</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.IGraphItem.Parent">
            <summary>
            Gets parent if attached.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Item">
            <summary>
            This class supports hierarchy of items
            that allows to handle isDirty flag and to automatically refresh drawing
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Item.isDirty">
            <summary>
            Specifies whether object should be redrawn
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Item.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.Item" /> Class. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Item.IsAttachable">
            <summary>
            Current attachable state.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Item.Destroy(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="descrease">Decrease layout flag.</param>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.Item.Change">
            <summary>
            This event is fire when this object changes, including changes in any inner properties.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Item.InternalGetParents">
            <summary>
            Returns internal array
            </summary>
            <returns>array of some objects</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Item.CheckPropertiesValidity">
            <summary>
            method is called automatically upon attaching parent
            sublcassed items should call this method on critical property change
            if there is no graph as grandparent this method does nothing, otherwise it calls CheckValidityImpl
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Item.CheckPropertiesValidityImpl(GrapeCity.ActiveReports.Chart.SharpGraph)">
            <summary>
            this method should be overriden if item should check inter-property dependencies.
            by default it does nothing
            Method should throw ArgumentException if it encounters errors
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Item.IsDirty">
            <summary>
            Dirty state.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Item.NotifyOnAnyPropertyChange(System.Object)">
            <summary>
            is called when property value changes.
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Item.SetAlreadyConverted">
            <summary>
            Is called by main SharpGraph's core convertor after it have used all info from the object.
            Object has to set it's IsDirty to false on this call.
            Makes sense only for objects that doesn't have getCore... method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Item.ToXmlString">
            <summary>
            For internal use only!
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Item.GetPropertiesForXmlSerialization(GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            Gets collection of PropertyInfo objects for items that should be serialized to XML
            </summary>
            <param name="context">Serialization context</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Item.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Item.Root">
            <summary>
            Returns root of chart graph
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ItemComponent">
            <summary>
            Base class for area scrolls and legend items.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ItemComponent.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.ItemComponent" /> Class. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.ItemComponent.Name">
            <summary>
            Gets or sets component name.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.ItemComponent.Disposed">
            <summary>
            Occurs when the instance disposed.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ItemComponent.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.ItemComponent.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext">
            <summary>
            Represents contextual information about a serialization, such as its DirectionType, document and other.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.DirectionType">
            <summary>
            Direction to serialize - from xml or to xml
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.DirectionType.ToXml">
            <summary>
            Object's state to the xml.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.DirectionType.FromXml">
            <summary>
            Xml to the object's state
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.Doc">
            <summary>
            Gets the XmlDocument.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.RegisteredComponents">
            <summary>
            Gets the registered components collection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.IncludeData">
            <summary>
            Gets the flag determining if points will be included or not.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.StrictImport">
            <summary>
            False by default. If true xml import process will stop once it finds an error and throw an exception.
            If false it will mutually continue. Use "strict" attribute of root element "SharpGraph" in xml files
            to control this behaviour.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.Direction">
            <summary>
            Direction to serialize - from xml or to xml
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.#ctor(GrapeCity.ActiveReports.Chart.SharpGraph,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.DirectionType,System.Xml.XmlDocument,System.Boolean)">
            <summary>
            Initializes a new instance of the GraphXmlSerializationContext class.
            </summary>
            <param name="sharpGraph">A SharpGraph control</param>
            <param name="direction">Direction to serialize - from xml or to xml</param>
            <param name="doc">An XmlDocument</param>
            <param name="includeData"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.#ctor(GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext.DirectionType,System.Xml.XmlDocument,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GraphXmlSerializationContext class.
            </summary>
            <param name="direction">Direction to serialize - from xml or to xml</param>
            <param name="doc">An XmlDocument</param>
            <param name="includeData"></param>
            <param name="useComponentReferences"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.IGraphXmlSerializable">
            <summary>
            IChartXmlSerializable interface
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.IGraphXmlSerializable.ToXml(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            Stores object's state to XML node
            </summary>
            <param name="nodeName">Node name</param>
            <param name="context"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.IGraphXmlSerializable.FromXml(System.Xml.XmlNode,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            Reads object's state from XML node
            </summary>
            <param name="node"></param>
            <param name="context"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.IMouseEnabled">
            <summary>
            IMouseEnabled interface
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.IMouseEnabled.MouseMove">
            <summary>
            Occurs when the mouse pointer is moved over the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.IMouseEnabled.MouseDown">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is pressed.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.IMouseEnabled.MouseEnter">
            <summary>
            Occurs when the mouse pointer enters the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.IMouseEnabled.MouseHover">
            <summary>
            Occurs when the mouse pointer hovers over the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.IMouseEnabled.MouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.IMouseEnabled.MouseUp">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is released.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.IMouseEnabled.MouseWheel">
            <summary>
            Occurs when the mouse wheel moves while the control has focus.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.IMouseEnabled.ContextMenu">
            <summary>
            Gets or sets the shortcut menu associated with the control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.IMouseEnabled.NeedMouseHandling">
            <summary>
            Indicates whether mouse events should be handled for this control (i.e. control implemets at least one of mouse event handler).
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.DrawCustomizableItem">
            <summary>
            Class of items with overridable drawing code
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DrawCustomizableItem.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.DrawCustomizableItem" /> Class. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DrawCustomizableItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.DrawCustomizableItem" /> Class. 
            </summary>
            <param name="antiAliasMode">Current mode.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DrawCustomizableItem.AntiAliasMode">
            <summary>
            Specifies antialiasing mode to draw current object
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DrawCustomizableItem.AASettingsEqual(GrapeCity.ActiveReports.Chart.DrawCustomizableItem)">
            <summary>
            Check if AntiAliasing mode is same.
            </summary>
            <param name="itemToCompare">Item to compare.</param>
            <returns>True if equals.</returns>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.DrawCustomizableItem.PreDraw">
            <summary>
            PreDraw event is fired before any drawings on this object by chart core.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.DrawCustomizableItem.PostDraw">
            <summary>
            PostDraw event is fired after all drawings on this object by chart core is finished.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DrawCustomizableItem.ToCoreObject(System.Int32)">
            <summary>
            Don't call, it just for overriding
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DrawCustomizableItem.GetCoreObject(System.Int32)">
            <summary>
            Call to get corresponding core object
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.INamedComponent">
            <summary>
            Component with name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.INamedComponent.Name">
            <summary>
            Gets or sets component name.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.DrawCustomizableComponent">
            <summary>
            Chart area and legend base class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.DrawCustomizableComponent.Name">
            <summary>
            Gets or sets component name.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.DrawCustomizableComponent.Disposed">
            <summary>
            Throws if component was disposed.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DrawCustomizableComponent.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DrawCustomizableComponent.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.MouseEnabledItem">
            <summary>
            Class of the items user may interact with
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledItem.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.MouseEnabledItem" /> Class. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.MouseEnabledItem" /> Class. 
            </summary>
            <param name="antiAliasMode">Current mode.</param>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.MouseEnabledItem.MouseMove">
            <summary>
            Occurs when the mouse pointer is moved over the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.MouseEnabledItem.MouseDown">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is pressed.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.MouseEnabledItem.MouseEnter">
            <summary>
            Occurs when the mouse pointer enters the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.MouseEnabledItem.MouseHover">
            <summary>
            Occurs when the mouse pointer hovers over the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.MouseEnabledItem.MouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the control.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.MouseEnabledItem.MouseUp">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is released.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.MouseEnabledItem.MouseWheel">
            <summary>
            Occurs when the mouse wheel moves while the control has focus.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledItem.NeedMouseHandling">
            <summary>
            Check if mouse handling required.
            </summary>
            <returns>True if mouse handling required.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledItem.OnMouseMove(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseMove" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledItem.OnMouseDown(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledItem.OnMouseEnter(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseEnter" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledItem.OnMouseHover(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseHover" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledItem.OnMouseLeave(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseLeave" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledItem.OnMouseUp(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseUp" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledItem.OnMouseWheel(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseWheel" /> event.
            </summary>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.MouseEnabledItem.ContextMenu">
            <summary>
            Gets or sets the shortcut menu associated with the control.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.MouseEnabledComponent">
            <summary>
            Class of the components user may interact with
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledComponent.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.MouseEnabledComponent" /> Class. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.MouseEnabledComponent.Name">
            <summary>
            Gets or sets component name.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.MouseEnabledComponent.Disposed">
            <summary>
            Occurs when the instance disposed.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledComponent.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.MouseEnabledComponent.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.LabelInfo">
            <summary>
            Label object
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelInfo.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelInfo.CheckPropertiesValidityImpl(GrapeCity.ActiveReports.Chart.SharpGraph)">
            <summary>
            This member overrides <code>Item.CheckPropertiesValidityImpl</code>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelInfo.#ctor">
            <summary>
            Initializes new instance of the LabelInfo class with default settings
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelInfo.#ctor(GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes new instance of the LabelInfo class with default settings
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelInfo.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Line,GrapeCity.ActiveReports.Chart.Graphics.Backdrop,GrapeCity.ActiveReports.Chart.FontInfo,System.String,GrapeCity.ActiveReports.Chart.Alignment)">
            <summary>
            Initializes new instance of the LabelInfo class 
            </summary>
            <param name="border">border info to outline label's bar</param>
            <param name="backdrop">backdrop info to fill label's bar</param>
            <param name="font">font info to draw label text</param>
            <param name="format">format string to draw label</param>
            <param name="alignment">label alignment around the anchor point</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelInfo.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Line,GrapeCity.ActiveReports.Chart.Graphics.Backdrop,GrapeCity.ActiveReports.Chart.FontInfo,System.String,GrapeCity.ActiveReports.Chart.Alignment,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes new instance of the LabelInfo class 
            </summary>
            <param name="border">border info to outline label's bar</param>
            <param name="backdrop">backdrop info to fill label's bar</param>
            <param name="font">font info to draw label text</param>
            <param name="format">format string to draw label</param>
            <param name="alignment">label alignment around the anchor point</param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelInfo.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelInfo.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LabelInfo.Border">
            <summary>
            Gets or sets line info to outline label bar
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LabelInfo.Backdrop">
            <summary>
            Gets or sets background info to fill label bar
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LabelInfo.Font">
            <summary>
            Gets or sets font info to draw labels
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LabelInfo.Format">
            <summary>
            Gets or sets label format string
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LabelInfo.InternalFormat">
            <summary>
            this value replaces Format and is used for labels data binding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LabelInfo.Alignment">
            <summary>
            Gets or sets label's position around anchor point
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LabelInfo.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Legend">
            <summary>
            Legend class
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Legend.alignment">
            <summary>
            Floating legend alignment
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Legend.marginX">
            <summary>
            Floating legend vertical margin
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Legend.marginY">
            <summary>
            Floating legend horizontal margin
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Legend.dockAreaSetExplicitly">
            <summary>
            this variable is used to determine if user initialized value of DockArea
            or we should set it to default value
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Legend.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.Xml">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Legend.#ctor">
            <summary>
            Initializes new instance of the LegendItem object with the default properties set
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Legend.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Legend.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.Backdrop">
            <summary>
            Gets or sets backdrop info to fill legend box
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.Border">
            <summary>
            Gets or sets border info to outline legend box
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.Visible">
            <summary>
            Gets or sets legend visibility
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.Header">
            <summary>
            Gets or sets legend title
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.Footer">
            <summary>
            Gets or sets legend footer
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.LabelsFont">
            <summary>
            Gets or sets font to draw labels
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.LegendItems">
            <summary>
            Gets custom legend items collection
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.Alignment">
            <summary>
            Gets or sets floating legend alignment within chart area
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.MarginX">
            <summary>
            Gets or sets floating legend horizontal margin
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.MarginY">
            <summary>
            Gets or sets floating legend vertical margin
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.CustomBorderDrawer">
            <summary>
            Gets or sets custom-draw object
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.DockArea">
            <summary>
            Gets or sets the chart area to which the legend is docked.
            </summary>
            <value>The dock area.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.DockInsideArea">
            <summary>
            Specifies whether legend will be docked inside containing area
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Legend.GridLayout">
            <summary>
            Gets or sets the grid layout for the Legend.  
            </summary>
            <value>The grid layout.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.LegendsCollection">
            <summary>
            Legends collection class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.#ctor">
            <summary>
            Initializes a new instance of the LegendsCollection class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.Clone">
            <summary>
            Creates a clone of the current collection
            </summary>
            <returns></returns>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.LegendsCollection.Change">
            <summary>
            Occurs when the collection's content is changed
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendsCollection.Item(System.Int32)">
            <summary>
            Gets or sets collection item by given index
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendsCollection.Item(System.String)">
            <summary>
            Gets or sets collection item by given name
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.Add(GrapeCity.ActiveReports.Chart.Legend)">
            <summary>
            Adds layer object to the current collection
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.AddRange(GrapeCity.ActiveReports.Chart.Legend[])">
            <summary>
            Adds a set of layers to the current collection
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.Contains(GrapeCity.ActiveReports.Chart.Legend)">
            <summary>
            Determines whether the Collection contains the given <see cref="T:GrapeCity.ActiveReports.Chart.Legend" /></summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Legend" /> to find within the collection</param>
            <returns>
                <code>true</code> if the collection contains the <code>value</code>parameter given; otherwise, <code>false</code>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.CopyTo(GrapeCity.ActiveReports.Chart.Legend[],System.Int32)">
            <summary>
            TBW
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.IndexOf(GrapeCity.ActiveReports.Chart.Legend)">
            <summary>
            Returns the index of the first occurrence of a value in the collection.
            </summary>
            <param name="value">The object to locate in array.</param>
            <returns>The index of the first occurrence of value within the entire array, if found; otherwise, the lower bound of the array - 1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.Insert(System.Int32,GrapeCity.ActiveReports.Chart.Legend)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <code>value</code> should be inserted.</param>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Legend" /> to insert.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.Remove(GrapeCity.ActiveReports.Chart.Legend)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Legend" /> to remove from the collection.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.Clear">
            <summary>
            Removes all legend objects from the collection
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendsCollection.ParentControl">
            <summary>
            Gets the SharpGraph control that holds that collection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.Equals(System.Object)">
            <summary>
            Compare the LegendsCollection object to another System.Object and check if the two are equal
            </summary>
            <param name="obj">The System.Object to compare with the LegendsCollection object</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendsCollection.GetHashCode">
            <summary>
            It functions as a hash function for a particular type. It is suitable for use in data structures such as hash algorithm and hash table.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.StdLegendMarker">
            <summary>
            Specifies standard legend marker shapes
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.StdLegendMarker.None">
            <summary>
            No shape
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.StdLegendMarker.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.StdLegendMarker.Bar">
            <summary>
            Filled rectangle
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.StdLegendMarker.Area">
            <summary>
            Filled area
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.LegendItem">
            <summary>
            Custom legend item
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItem.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItem.#ctor">
            <summary>
            Initializes new instance of the LegendItem class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItem.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItem.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendItem.Text">
            <summary>
            Gets or sets text string to display on legend
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendItem.Style">
            <summary>
            Gets or sets Marker shape
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendItem.Line">
            <summary>
            Gets or sets Line style to display on marker shape
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendItem.Backdrop">
            <summary>
            Backdrop to draw under the legend marker shape
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendItem.Border">
            <summary>
            Gets or sets border to draw around legend marker shape
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendItem.Marker">
            <summary>
            Gets or sets series marker info to draw inside legend marker
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.LegendItemsCollection">
            <summary>
            Represents the settings for the LegendItemsCollection class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.#ctor(GrapeCity.ActiveReports.Chart.LegendItem[])">
            <summary>
            Initializes new instance of the LegendItemsCollection class
            </summary>
            <param name="itemsArray"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendItemsCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.CollectionBase" /> instance. This property cannot be overridden.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendItemsCollection.Capacity">
            <summary>
            Gets or sets the number of elements that the <see cref="T:System.Collections.CollectionBase" /> can contain.
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendItemsCollection.Item(System.Int32)">
            <summary>
            Get or sets custom legend item by given index
            </summary>
            <param name="index">The index of the item</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.LegendItemsCollection.Item(System.String)">
            <summary>
            Get or sets custom legend item by given name
            </summary>
            <param name="legendItemName">The name of the item</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.Add(GrapeCity.ActiveReports.Chart.LegendItem)">
            <summary>
            Adds new legend item to the current collection
            </summary>
            <param name="item">Legend item to add</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.AddRange(GrapeCity.ActiveReports.Chart.LegendItem[])">
            <summary>
            Adds array of legend items to collection
            </summary>
            <param name="items">legent items</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.Contains(GrapeCity.ActiveReports.Chart.LegendItem)">
            <summary>
            Determines whether the Collection contains the given <see cref="T:GrapeCity.ActiveReports.Chart.LegendItem" /></summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.LegendItem" /> to find within the collection</param>
            <returns>
                <code>true</code> if the collection contains the <code>value</code>parameter given; otherwise, <code>false</code>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.CopyTo(GrapeCity.ActiveReports.Chart.LegendItem[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the legend items copied from collection. The Array must have zero-based indexing. </param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.IndexOf(GrapeCity.ActiveReports.Chart.LegendItem)">
            <summary>
            Returns the index of the first occurrence of a value in the collection.
            </summary>
            <param name="value">The object to locate in array.</param>
            <returns>The index of the first occurrence of value within the entire array, if found; otherwise, the lower bound of the array - 1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.Insert(System.Int32,GrapeCity.ActiveReports.Chart.LegendItem)">
            <summary>
            Inserts a legend item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <code>value</code> should be inserted. </param>
            <param name="item">The <see cref="T:GrapeCity.ActiveReports.Chart.LegendItem" /> to insert</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.Remove(GrapeCity.ActiveReports.Chart.LegendItem)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The <see cref="T:GrapeCity.ActiveReports.Chart.LegendItem" /> to remove from the collection</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new item into the collection instance.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="item">The new value of the item at <code>index</code>.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.LegendItemsCollection.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.LightType">
            <summary>
            Specifies type of the light source
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.LightType.Ambient">
            <summary>
            Ambient light source. Is equal to DirectionalLightRatio == 0
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.LightType.InfiniteDirectional">
            <summary>
            Infinite directional light source (like the Sun)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.LightType.FiniteDirectional">
            <summary>
            Point light source
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Light">
            <summary>
            Represents lighting options and positioning
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Light.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Light.IsDirty">
            <summary>
            This member overrides <code>Item.IsDirty</code>. Always false.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Light.#ctor">
            <summary>
            Initializes new instance of the LightInfo class with a default settings
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Light.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Point3d,GrapeCity.ActiveReports.Chart.LightType,System.Single)">
            <summary>
            Initializes new instance of the LightInfo class
            </summary>
            <param name="source">Light source position</param>
            <param name="type">Light source type</param>
            <param name="directionalRatio">Specifies directional/ambient intencity ratio</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Light.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Light.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Light.Type">
            <summary>
            Gets or sets type of the light source
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Light.Source">
            <summary>
            Gets or sets light source position (direction for infinite source)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Light.DirectionalRatio">
            <summary>
            Gets os sets directional/ambient intencity ratio
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Light.Equals(System.Object)">
            <summary>
            Compare the Light object to another System.Object and check if the two are equal.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Light.GetHashCode">
            <summary>
            It functions as a hash function for a particular type. It is suitable for use in data structures such as hash algorithm and hash table.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.MarkerStyle">
            <summary>
            Specifies marker shapes
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.MarkerStyle.None">
            <summary>
            No shape
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.MarkerStyle.Point">
            <summary>
            Displays dot shape
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.MarkerStyle.Square">
            <summary>
            Displays rectangle in 2D, cube in 3D
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.MarkerStyle.Circle">
            <summary>
            Displays circle in 2D, sphere in 3D mode
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.MarkerStyle.Triangle">
            <summary>
            Displays triangle in 2D mode, cone in 3D
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.MarkerStyle.InvTriangle">
            <summary>
            Displays inverted triangle (inverted cone)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.MarkerStyle.Diamond">
            <summary>
            Displays diamond
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.MarkerStyle.Pyramid">
            <summary>
            Displays pyramid shape
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.MarkerStyle.Cross">
            <summary>
            Displays x-like cross shape
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Marker">
            <summary>
            Marker object
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Marker.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Marker.#ctor">
            <summary>
            Initializes new instance of the MarkerInfo class with a default settings
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Marker.#ctor(GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes new instance of the MarkerInfo class
            </summary>
            <param name="antiAliasMode"></param>
            <param name="antiAliasText"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Marker.#ctor(System.Int32,GrapeCity.ActiveReports.Chart.MarkerStyle,GrapeCity.ActiveReports.Chart.Graphics.Backdrop,GrapeCity.ActiveReports.Chart.Graphics.Line,GrapeCity.ActiveReports.Chart.LabelInfo)">
            <summary>
            Initializes new instance of the MarkerInfo class
            </summary>
            <param name="size">Marker size</param>
            <param name="style">Marker's shape</param>
            <param name="backdrop">backdrop info to fill marker shape</param>
            <param name="line">line info to outline marker shape</param>
            <param name="label">label info to draw on the marker</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Marker.#ctor(System.Int32,GrapeCity.ActiveReports.Chart.MarkerStyle,GrapeCity.ActiveReports.Chart.Graphics.Backdrop,GrapeCity.ActiveReports.Chart.Graphics.Line,GrapeCity.ActiveReports.Chart.LabelInfo,System.Single)">
            <summary>
            Initializes new instance of the MarkerInfo class
            </summary>
            <param name="size">Marker size</param>
            <param name="style">Marker's shape</param>
            <param name="backdrop">backdrop info to fill marker shape</param>
            <param name="line">line info to outline marker shape</param>
            <param name="label">label info to draw on the marker</param>
            <param name="labelDistanceFactor">label distance factor</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Marker.#ctor(System.Int32,GrapeCity.ActiveReports.Chart.MarkerStyle,GrapeCity.ActiveReports.Chart.Graphics.Backdrop,GrapeCity.ActiveReports.Chart.Graphics.Line,GrapeCity.ActiveReports.Chart.LabelInfo,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes new instance of the MarkerInfo class
            </summary>
            <param name="size">Marker size</param>
            <param name="style">Marker's shape</param>
            <param name="backdrop">backdrop info to fill marker shape</param>
            <param name="line">line info to outline marker shape</param>
            <param name="label">label info to draw on the marker</param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Marker.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Marker.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Marker.Size">
            <summary>
            Gets or sets marker size
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Marker.Style">
            <summary>
            Gets or sets marker shape
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Marker.Backdrop">
            <summary>
            Gets or sets background info to fill marker shape
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Marker.Line">
            <summary>
            Gets or sets line info to stroke marker shape
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Marker.Label">
            <summary>
            Gets or sets label info to draw on marker
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Marker.LabelDistanceFactor">
            <summary>
            Gets or sets label distance factor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Marker.Equals(System.Object)">
            <summary>
            Compare the Marker object to another System.Object and check if the two are equal.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Marker.GetHashCode">
            <summary>
            It functions as a hash function for a particular type. It is suitable for use in data structures such as hash algorithm and hash table.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.NullableBoolean">
            <summary>
            Boolean type accepted null value.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.#ctor(System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="value">a boolean value to use as a initial value</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.Compare(GrapeCity.ActiveReports.Chart.NullableBoolean,GrapeCity.ActiveReports.Chart.NullableBoolean)">
            <summary>
            Performs a comparison of two NullableBooleans and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="n1">The first NullableBoolean to compare.</param>
            <param name="n2">The second NullableBoolean to compare.</param>
            <returns>Less than zero if n1 is less than n2; 0 (zero) if n1 and n2 are equal; Greater than zero if n1 is greater than n2.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.op_Implicit(System.Boolean)~GrapeCity.ActiveReports.Chart.NullableBoolean">
            <summary>
            Implicit type conversion operator from <see cref="T:System.Boolean" /> to <see cref="T:GrapeCity.ActiveReports.Chart.NullableBoolean" />.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.op_Explicit(GrapeCity.ActiveReports.Chart.NullableBoolean)~System.Boolean">
            <summary>
            Explicit type conversion operator from <see cref="T:GrapeCity.ActiveReports.Chart.NullableBoolean" /> to <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.op_Equality(GrapeCity.ActiveReports.Chart.NullableBoolean,GrapeCity.ActiveReports.Chart.NullableBoolean)">
            <summary>
            Oveloading the equality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.op_Inequality(GrapeCity.ActiveReports.Chart.NullableBoolean,GrapeCity.ActiveReports.Chart.NullableBoolean)">
            <summary>
            Overloading the inequality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="other">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.Equals(GrapeCity.ActiveReports.Chart.NullableBoolean)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns>
                <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.NullableBoolean.CompareTo(GrapeCity.ActiveReports.Chart.NullableBoolean)">
            <summary>
            Performs a comparison of current instance and  specified instance of <see cref="T:GrapeCity.ActiveReports.Chart.NullableBoolean" /> 
            and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="other">The instance of <see cref="T:GrapeCity.ActiveReports.Chart.NullableBoolean" /> to be compared with.</param>
            <returns>Less than zero if current instance is less than other; 0 (zero) if they are equal; Greater than zero if current instance is greater than other.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.NullableBoolean.HasValue">
            <summary>
            Returns the false if there is null value otherwise returns true.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.NullableBoolean.Value">
            <summary>
            Gets the value of <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Padding">
            <summary>
            Padding class
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Padding.Empty">
            <summary>
            Padding Empty Structure
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Padding.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Padding.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Padding.#ctor(System.Int32)">
            <summary>
            Padding Constructor
            </summary>
            <param name="all">All</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Padding.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Padding Constructor
            </summary>
            <param name="left">Left</param>
            <param name="top">Tol</param>
            <param name="right">Right</param>
            <param name="bottom">Bottom</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Padding.All">
            <summary>
            Gets or sets padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Padding.Bottom">
            <summary>
            Gets or sets bottom padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Padding.Left">
            <summary>
            Gets or sets left padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Padding.Right">
            <summary>
            Gets or sets right padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Padding.Top">
            <summary>
            Gets or sets top padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Padding.Horizontal">
            <summary>
            Gets horizontal padding property
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Padding.Vertical">
            <summary>
            Gets versical padding property
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Padding.Size">
            <summary>
            Gets size
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Padding.op_Equality(GrapeCity.ActiveReports.Chart.Padding,GrapeCity.ActiveReports.Chart.Padding)">
            <summary>
            Determines whether the two paddings are the same.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Padding.op_Inequality(GrapeCity.ActiveReports.Chart.Padding,GrapeCity.ActiveReports.Chart.Padding)">
            <summary>
            Determines whether the two paddings are not the same.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Padding.Equals(GrapeCity.ActiveReports.Chart.Padding)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.ActiveReports.Chart.Padding" /> is equal to this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Padding.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Padding.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.PlaneItem">
            <summary>
            Wall object
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.#ctor">
            <summary>
            Initializes new instance of the Wall object with a default settings
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes new instance of the Wall object
            </summary>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Backdrop)">
            <summary>
            Initializes new instance of the Wall object
            </summary>
            <param name="backdrop">backdrop info to fill the wall rectangle</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Backdrop,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes new instance of the Wall object
            </summary>
            <param name="backdrop">backdrop info to fill the wall rectangle</param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Backdrop,System.Single)">
            <summary>
            Initializes new instance of the Wall object
            </summary>
            <param name="backdrop">backdrop info to fill the wall rectangle</param>
            <param name="width"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Backdrop,System.Single,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes new instance of the Wall object
            </summary>
            <param name="backdrop">backdrop info to fill the wall rectangle</param>
            <param name="width"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Backdrop,System.Boolean,System.Single)">
            <summary>
            Initializes new instance of the Wall object
            </summary>
            <param name="backdrop">backdrop info to fill the wall rectangle</param>
            <param name="visible"></param>
            <param name="width"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Backdrop,System.Boolean,System.Single,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes new instance of the Wall object
            </summary>
            <param name="backdrop">backdrop info to fill the wall rectangle</param>
            <param name="visible"></param>
            <param name="width"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.#ctor(GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode,GrapeCity.ActiveReports.Chart.Graphics.Backdrop,System.Boolean,System.Single,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Chart.PlaneItem" /> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.PlaneItem.Width">
            <summary>
            Gets or sets the wall width (thickness)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.PlaneItem.Backdrop">
            <summary>
            Gets or sets backdrop info to fill the wall
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.PlaneItem.Visible">
            <summary>
            Gets or sets the wall visibility
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.PlaneItem.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Projection">
            <summary>
            Geometric projection settings class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Projection.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Projection.IsDirty">
            <summary>
            This member overrides <code>Item.IsDirty</code>. Always false.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Projection.#ctor">
            <summary>
            Initializes new instance of the Projection class with the default settings.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Projection.#ctor(GrapeCity.ActiveReports.Chart.Graphics.ProjectionType,System.Single,System.Single)">
            <summary>
            Initializes new instance of the Projection class.
            </summary>
            <param name="projectionType">Specifies projection type</param>
            <param name="projectionDX">For use for orthogonal projection only</param>
            <param name="projectionDY">For use for orthogonal projection only</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Projection.#ctor(GrapeCity.ActiveReports.Chart.Graphics.ProjectionType,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes new instance of the Projection class.
            </summary>
            <param name="projectionType">Specifies projection type</param>
            <param name="projectionDX">For use for orthogonal projection only</param>
            <param name="projectionDY">For use for orthogonal projection only</param>
            <param name="horizontalRotation"></param>
            <param name="verticalRotation"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Projection.#ctor(GrapeCity.ActiveReports.Chart.Graphics.ProjectionType,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes new instance of the Projection class.
            </summary>
            <param name="projectionType">Specifies projection type</param>
            <param name="projectionDX">For use for orthogonal projection only</param>
            <param name="projectionDY">For use for orthogonal projection only</param>
            <param name="horizontalRotation"></param>
            <param name="verticalRotation"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Projection.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Projection.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Projection.ProjectionType">
            <summary>
            Gets or sets projection type
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Projection.ProjectionDX">
            <summary>
            Gets or sets world origin offset by x axis. For use for orthogonal projection only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Projection.ProjectionDY">
            <summary>
            Gets or sets world origin offset by y axis. For use for orthogonal projection only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Projection.HorizontalRotation">
            <summary>
            Determines horizontal rotation of chart box (in degrees)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Projection.VerticalRotation">
            <summary>
            Determines horizontal rotation of chart box (in degrees)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Projection.PerspectiveRatioPct">
            <summary>
            Determines perspective ratio (0-100%).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Projection.MinVerticalRotation">
            <summary>
            Minimum allowed value for VerticalRotation for current Projection.DY
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Projection.MaxVerticalRotation">
            <summary>
            Maximum allowed value for VerticalRotation for current Projection.DY
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Projection.MinHorizontalRotation">
            <summary>
            Minimum allowed value for HorizontalRotation for current Projection
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Projection.MaxHorizontalRotation">
            <summary>
            Maximum allowed value for HorizontalRotation for current Projection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Projection.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ChartType">
            <summary>
            Specifies chart types
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Area">
            <summary>
            Area chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Area3D">
            <summary>
            Area chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Bar2D">
            <summary>
            2D bar (vertical) chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Bar3D">
            <summary>
            3D bar (vertical) chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Bezier">
            <summary>
            Bezier line chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.BezierXY">
            <summary>
            Bezier XY line chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.BezierXY3D">
            <summary>
            3D Bezier XY line chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Bezier3D">
            <summary>
            Bezier 3D line chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Bubble">
            <summary>
            Bubble (requires two data series)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.BubbleXY">
            <summary>
            XY bubble (requires 3 series)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Candle">
            <summary>
            Candlestick chart (requires 4 data series)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.ClusteredBar">
            <summary>
            Clustered Bar
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Doughnut">
            <summary>
            Pie/doughnut chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Doughnut3D">
            <summary>
            3D Pie/doughnut chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Funnel">
            <summary>
            Funnel chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Funnel3D">
            <summary>
            Funnel 3D chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Gantt">
            <summary>
            Gantt chart (requires 2 data series)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Gantt3D">
            <summary>
            3D Gantt chart (requires 2 data series)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.HiLo">
            <summary>
            HiLo chart (requires 2 data series)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.HiLoOpenClose">
            <summary>
            HLOC chart (requires 4 data series)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.HorizontalBar">
            <summary>
            Horizontal Bar chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.HorizontalBar3D">
            <summary>
            3D Horizontal Bar chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Kagi">
            <summary>
            Kagi chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Kagi3D">
            <summary>
            3D Kagi chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Line">
            <summary>
            Line chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Line3D">
            <summary>
            3D line chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.LineXY">
            <summary>
            XY Line chart (requires 2 data series)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.LineXY3D">
            <summary>
            3D XY Line chart (requires 2 sorted data series)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.PlotXY">
            <summary>
            XY plot chart (requires 2 data series)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.PointAndFigure">
            <summary>
            Point and Figure chart (requires 2 data series)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Pyramid">
            <summary>
            Pyramid chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Pyramid3D">
            <summary>
            Pyramid 3D chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Renko">
            <summary>
            Renko chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Renko3D">
            <summary>
            3D Renko chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.Scatter">
            <summary>
            Scatter chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.StackedArea">
            <summary>
            Stacked area chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.StackedArea3D">
            <summary>
            3D Stacked area chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.StackedBar">
            <summary>
            Stacked bar chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.StackedBar3D">
            <summary>
            Stacked 3d bar chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.StackedArea100Pct">
            <summary>
            Stacked area chart scaled to 100 percents
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.StackedArea3D100Pct">
            <summary>
            3D Stacked area chart scaled to 100 percents
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.StackedBar100Pct">
            <summary>
            Stacked bar chart scaled to 100 percents
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.StackedBar3D100Pct">
            <summary>
            Stacked 3d bar chart scaled to 100 percents
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.ThreeLineBreak">
            <summary>
            Three Line Break chart
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.ChartType.ThreeLineBreak3D">
            <summary>
            3D Three Line Break chart
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.LegendMode">
            <summary>
            Specifies the mode to build legend items.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.LegendMode.Auto">
            <summary>
            Auto mode
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.LegendMode.Series">
            <summary>
            Legend items are determined by series.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.LegendMode.Points">
            <summary>
            Legend items are determined by data points.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Series">
            <summary>
            Represents the settings for the Series object.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.Series.ValueChangedEvent">
            <summary>
            Event for ValueMembersX and ValueMembersY changes
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Xml">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Series.chartAreaSetExplicitly">
            <summary>
            this variable is used to determine if user initialized value of ChartArea
            or we should set it to default value
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Series.legendSetExplicitly">
            <summary>
            this variable is used to determine if user initialized value of Legend
            or we should set it to default value
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:GrapeCity.ActiveReports.Chart.Series._bindDataGeneration" -->
        <member name="F:GrapeCity.ActiveReports.Chart.Series._pointsGeneration">
            <summary>
            current generation of data represented by Points collection
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Series._cachedDataGeneration">
            <summary>
            Data generation of internal data cache
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.initPointsCollection(GrapeCity.ActiveReports.Chart.DataPointsCollection,System.Boolean)">
            <summary></summary>
            <param name="newPoints"></param>
            <param name="forcePointsChanged">if set to true it will increase points generation and start all series recalculation</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.IsFinancialChart(GrapeCity.ActiveReports.Chart.ChartType)">
            <summary>
            Gets true if specific type is financial chart type
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.NeedMouseHandling">
            <summary>
            Needs the mouse handling.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.OnMouseMove(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseMove" /> event.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.OnMouseHover(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseHover" /> event.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.OnMouseLeave(GrapeCity.ActiveReports.Chart.GraphMouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseLeave" /> event.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.ChartConfig">
            <summary>
            gets config data for current chart type
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.#ctor">
            <summary>
            Creates default series
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.ValueMemberX">
            <summary>
            Gets or sets the binding formula for the X values in the series.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.ValueMembersY">
            <summary>
            Gets or sets the binding formula for the Y values in the series.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Type">
            <summary>
            Specifies the series's chart type
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.AxisX">
            <summary>
            Specified X axis
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.AxisY">
            <summary>
            On which axis layer will be based vertically
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.ZOrder">
            <summary>
            z position of layer's plane on chart space
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Visible">
            <summary>
            Get or sets layer's visibility.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.ChartArea">
            <summary>
            Gets or sets the chart area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Legend">
            <summary>
            Gets or sets the legend.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Points">
            <summary>
            Gets the points.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.ShouldSerializePoints">
            <summary>
            This method is called by serializer using reflection
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Annotations">
            <summary>
            Series' annotations
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.ColorPalette">
            <summary>
            Gets or sets the color palette.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.LegendItemsMode">
            <summary>
            Gets or sets the legend items mode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.DisplayInLegend">
            <summary>
            Gets or sets a value indicating whether the item should be displayed in legend.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.LegendText">
            <summary>
            Gets or sets the legend text.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Backdrop">
            <summary>
            Gets or sets the backdrop.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.BorderLine">
            <summary>
            Gets or sets the border line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Line">
            <summary>
            Gets or sets the line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Marker">
            <summary>
            Gets or sets the marker.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Series.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.CheckPropertiesValidityImpl(GrapeCity.ActiveReports.Chart.SharpGraph)">
            <summary>
            This member overrides <code>Item.CheckPropertiesValidityImpl</code>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.pn(GrapeCity.ActiveReports.Chart.CustomPropertyType)">
            <summary>
            returns custom property name by its id
            </summary>
            <param name="pt">property type</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.ApplyCustomPropertiesConfiguration(GrapeCity.ActiveReports.Chart.ChartType,GrapeCity.ActiveReports.Chart.ColorPalette,GrapeCity.ActiveReports.Chart.CustomProperties,System.Boolean)">
            <summary></summary>
            <param name="type"></param>
            <param name="palette"></param>
            <param name="customProperties"></param>
            <param name="isDataPoint">designates properties level, if true - it is DataPoint, false means Series</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.createCoreLayer(GrapeCity.ActiveReports.Chart.SharpGraph,System.Int32,GrapeCity.ActiveReports.Chart.Graphics.Line)">
            <summary>
            creates core layer for current series
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.AdjustSeriesSet(GrapeCity.ActiveReports.Chart.Core.Objects.SeriesView,GrapeCity.ActiveReports.Chart.ChartTypeConfig)">
            <summary>
             Adjusts data providers for financial charts: creates data adapters and updates SeriesSet
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.isPropertyDefined(GrapeCity.ActiveReports.Chart.CustomProperties,GrapeCity.ActiveReports.Chart.CustomPropertyType)">
            <summary>
            return true if property specified is defined
            </summary>
            <param name="styleProps">Properties collection</param>
            <param name="property">Property name</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.createSeriesStyle(GrapeCity.ActiveReports.Chart.ChartType,GrapeCity.ActiveReports.Chart.CustomProperties,System.Int32,GrapeCity.ActiveReports.Chart.CustomProperties@)">
            <summary>
            creates series style for given chart type and its custom properties
            </summary>
            <param name="type"></param>
            <param name="styleProps"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.createSeriesStyle(GrapeCity.ActiveReports.Chart.ChartType,GrapeCity.ActiveReports.Chart.Core.Objects.SeriesStyleBase,GrapeCity.ActiveReports.Chart.CustomProperties,System.Int32,GrapeCity.ActiveReports.Chart.CustomProperties@)">
            <summary>
            creates series style for based on style specified (overrides defined properties)
            </summary>
            <param name="type"></param>
            <param name="styleBase">style to inherit defined properties from</param>
            <param name="originalProps">custom properties to override base style</param>
            <param name="colorIndex"></param>
            <param name="styleProps"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Series.RaiseOnValueChangedEvent(System.String,System.String,System.String)">
            <summary>
            Raise when valueMembersX or ValueMembersY changes
            </summary>
            <param name="propName">Property Name</param>
            <param name="oldValue">Old Value</param>
            <param name="newValue">New Value </param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.SeriesCollection">
            <summary>
            Series collection class
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.SeriesCollection.SeriesCollectionChangedHandler">
            <summary>
            For handling ValueMemberx and ValueMemberY changes
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.#ctor">
            <summary>
            Initializes a new instance of the SeriesCollection class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.Clone">
            <summary>
            Creates a clone of the current collection
            </summary>
            <returns></returns>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.SeriesCollection.Change">
            <summary>
            Occurs when the collection's content is changed
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SeriesCollection.Item(System.Int32)">
            <summary>
            Gets or sets collection item by given index
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SeriesCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.ActiveReports.Chart.Series" /> with the specified series name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.Add(GrapeCity.ActiveReports.Chart.Series)">
            <summary>
            Adds layer object to the current collection
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.AddRange(GrapeCity.ActiveReports.Chart.Series[])">
            <summary>
            Adds a set of layers to the current collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.Contains(GrapeCity.ActiveReports.Chart.Series)">
            <summary>
            Determines whether the Collection contains the given <see cref="T:GrapeCity.ActiveReports.Chart.Series" /></summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Series" /> to find within the collection</param>
            <returns>
                <code>true</code> if the collection contains the <code>value</code>parameter given; otherwise, <code>false</code>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.CopyTo(GrapeCity.ActiveReports.Chart.Series[],System.Int32)">
            <summary>
            TBW
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.IndexOf(GrapeCity.ActiveReports.Chart.Series)">
            <summary>
            Returns the index of the first occurrence of a value in the collection.
            </summary>
            <param name="value">The object to locate in array.</param>
            <returns>The index of the first occurrence of value within the entire array, if found; otherwise, the lower bound of the array - 1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.Insert(System.Int32,GrapeCity.ActiveReports.Chart.Series)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <code>value</code> should be inserted.</param>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Series" /> to insert.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.Remove(GrapeCity.ActiveReports.Chart.Series)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Series" /> to remove from the collection.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.OnSeriesXChange(System.Object,GrapeCity.ActiveReports.Chart.XYVAlueChangedEventArgs)">
            <summary>
            Raised when ValueMeberx and ValueMembersY changes
            </summary>
            <param name="sender">Series</param>
            <param name="e"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SeriesCollection.ParentControl">
            <summary>
            Gets the SharpGraph control that holds that collection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SeriesCollection.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Tick">
            <summary>
            Tick attributes. Ticks are drawn on axes.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Tick.MIN_TICKLEN_VALUE">
            <summary>
            TickLength property's minimal and maximal values.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Tick.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Tick.#ctor">
            <summary>
            Initializes new instance of the TickInfo object.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Tick.#ctor(System.Double)">
            <summary>
            Initializes new instance of the TickInfo object.
            </summary>
            <param name="step">Tick step</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Tick.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Line,System.Double,System.Single)">
            <summary>
            Initializes new instance of the TickInfo object.
            </summary>
            <param name="line">Line info to draw tick line</param>
            <param name="step">Tick step</param>
            <param name="length">Tick length</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Tick.#ctor(GrapeCity.ActiveReports.Chart.Graphics.Line,GrapeCity.ActiveReports.Chart.Graphics.Line,System.Double,System.Single,System.Boolean)">
            <summary>
            Initializes new instance of the TickInfo object.
            </summary>
            <param name="line">Line info to draw tick line</param>
            <param name="gridLine">Line info to draw grid line</param>
            <param name="step">Tick step</param>
            <param name="length">Tick length</param>
            <param name="visible">Specifies tick and grid lines visibility</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Tick.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Tick.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Tick.Line">
            <summary>
            Line used to draw tick
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Tick.GridLine">
            <summary>
            Line used to draw grid on walls
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Tick.Step">
            <summary>
            Step in units of measure of the axis between two subsequent ticks
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Tick.Length">
            <summary>
            length of line to draw tick
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Tick.Visible">
            <summary>
            Controls if tick will be drawn
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Tick.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Tick.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Title">
            <summary>
            Properties for text objects
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Title.dockAreaSetExplicitly">
            <summary>
            this variable is used to determine if user initialized value of DockArea
            or we should set it to default value
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Title.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Title.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Title.Xml">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Title.#ctor">
            <summary>
            Initializes new instance of the Title object.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Title.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Title.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Title.Text">
            <summary>
            Text string to display
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Title.Backdrop">
            <summary>
            Backdrop to draw under the text
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Title.Visible">
            <summary>
            If false, nothing will be drawn
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Title.Docking">
            <summary>
            Gets or sets the docking type.
            </summary>
            <value>The docking.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Title.DockArea">
            <summary>
            Gets or sets the dock area.
            </summary>
            <value>The dock area.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Title.Border">
            <summary>
            Border to draw around text
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Title.Font">
            <summary>
            Font to draw text
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Title.Alignment">
            <summary>
            position of text
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Title.Name">
            <summary>
            Gets or sets the title name.
            </summary>
            <value>The name.</value>
            <exception cref="T:System.ArgumentException">Name</exception>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Title.CustomBorderDrawer">
            <summary>
            Gets or sets custom border draw implementation class
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.TitlesCollection">
            <summary>
            Titles collection class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.TitlesCollection.#ctor">
            <summary>
            Initializes a new instance of the TitlesCollection class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.TitlesCollection.Clone">
            <summary>
            Creates a clone of the current collection
            </summary>
            <returns></returns>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.TitlesCollection.Change">
            <summary>
            Occurs when the collection's content is changed
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.TitlesCollection.Item(System.Int32)">
            <summary>
            Gets or sets collection item by given index
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.TitlesCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.ActiveReports.Chart.Title" /> with the specified title name.
            </summary>
            <param name="titleName">Name of the title.</param>
            <returns>Title.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.TitlesCollection.Add(GrapeCity.ActiveReports.Chart.Title)">
            <summary>
            Adds layer object to the current collection
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.TitlesCollection.AddRange(GrapeCity.ActiveReports.Chart.Title[])">
            <summary>
            Adds a set of layers to the current collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.TitlesCollection.Contains(GrapeCity.ActiveReports.Chart.Title)">
            <summary>
            Determines whether the Collection contains the given <see cref="T:GrapeCity.ActiveReports.Chart.Title" /></summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Title" /> to find within the collection</param>
            <returns>
                <code>true</code> if the collection contains the <code>value</code>parameter given; otherwise, <code>false</code>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.TitlesCollection.CopyTo(GrapeCity.ActiveReports.Chart.Title[],System.Int32)">
            <summary>
            TBW
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.TitlesCollection.IndexOf(GrapeCity.ActiveReports.Chart.Title)">
            <summary>
            Returns the index of the first occurrence of a value in the collection.
            </summary>
            <param name="value">The object to locate in array.</param>
            <returns>The index of the first occurrence of value within the entire array, if found; otherwise, the lower bound of the array - 1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.TitlesCollection.Insert(System.Int32,GrapeCity.ActiveReports.Chart.Title)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <code>value</code> should be inserted.</param>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Title" /> to insert.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.TitlesCollection.Remove(GrapeCity.ActiveReports.Chart.Title)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.Title" /> to remove from the collection.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.TitlesCollection.ParentControl">
            <summary>
            Gets the SharpGraph control that holds that collection
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.WallRange">
            <summary>
            Wall range object class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRange.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRange.NeedMouseHandling">
            <summary>
            Implements <code>IMouseEnabled.NeedMouseHandling</code></summary>
            <returns>always true</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRange.#ctor">
            <summary>
            Initializes new instance of the WallRange class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRange.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRange.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRange.AdjacentAxes">
            <summary>
            Gets adjacent axes collection. Wall range is displayed on the visible walls based on primary and adjacent axes.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRange.PrimaryAxis">
            <summary>
            Gets or sets primary axis. Wall range is displayed on the visible walls based on primary and adjacent axes.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRange.DrawOnTopOfGridLines">
            <summary>
            Gets or sets DrawOnTopOfGridLines property. DrawOnTopOfGridLines specifies whether to draw current range after grid lines are drawn.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRange.StartValue">
            <summary>
            Gets or sets range's start value
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRange.EndValue">
            <summary>
            Gets or sets range's end value
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRange.Backdrop">
            <summary>
            Gets or sets backdrop into to fill range with
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRange.Visible">
            <summary>
            Gets or sets range visibility
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRange.Border">
            <summary>
            Gets or sets border info to outline wall range
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.WallRangesCollection">
            <summary>
            Collection of wall ranges
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRangesCollection.Clone">
            <summary>
            Creates a clone of the current object
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRangesCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.CollectionBase" /> instance. This property cannot be overridden.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRangesCollection.Capacity">
            <summary>
            Gets or sets the number of elements that the <see cref="T:System.Collections.CollectionBase" /> can contain.
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRangesCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>WallRange.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.WallRangesCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.ActiveReports.Chart.WallRange" /> with the specified wall range name.
            </summary>
            <param name="wallRangeName">Name of the wall range.</param>
            <returns>WallRange.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRangesCollection.Add(GrapeCity.ActiveReports.Chart.WallRange)">
            <summary>
            Adds wall range object to the current collection
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRangesCollection.AddRange(GrapeCity.ActiveReports.Chart.WallRange[])">
            <summary>
            Adds a set of wall ranges to the current collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRangesCollection.Contains(GrapeCity.ActiveReports.Chart.WallRange)">
            <summary>
            Determines whether the Collection contains the given <see cref="T:GrapeCity.ActiveReports.Chart.WallRange" /></summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.WallRange" /> to find within the collection</param>
            <returns>
                <code>true</code> if the collection contains the <code>value</code>parameter given; otherwise, <code>false</code>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRangesCollection.CopyTo(GrapeCity.ActiveReports.Chart.WallRange[],System.Int32)">
            <summary>
            TBW
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRangesCollection.IndexOf(GrapeCity.ActiveReports.Chart.WallRange)">
            <summary>
            Returns the index of the first occurrence of a value in the collection.
            </summary>
            <param name="value">The object to locate in array.</param>
            <returns>The index of the first occurrence of value within the entire array, if found; otherwise, the lower bound of the array - 1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRangesCollection.Insert(System.Int32,GrapeCity.ActiveReports.Chart.WallRange)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <code>value</code> should be inserted.</param>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.WallRange" /> to insert.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.WallRangesCollection.Remove(GrapeCity.ActiveReports.Chart.WallRange)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Chart.WallRange" /> to remove from the collection.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.GraphMouseEventHandler">
            <summary>
            Specifies mouse events
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs">
            <summary>
            Mouse event arguments
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs.ItemCount">
            <summary>
            TBW
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs.PointIndex">
            <summary>
            Gets the point index if the mouse event occured on the data series
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs.UserX">
            <summary>
            Gets mouse pointer x coordinate
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs.UserY">
            <summary>
            Gets mouse pointer y coordinate
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs.Control">
            <summary>
            Gets control which mouse event occured on
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphMouseEventArgs.ShapeArea">
            <summary>
            Gets Shape Area on which mouse event occured on
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.SharpGraph">
            <summary>
            Datadynamics SharpGraph control for WinForms
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.SharpGraph.IChartDesigner">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.IChartDesigner.RaiseChanging">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.IChartDesigner.RaiseChanged">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.SetCultureProvider(System.Func{System.Globalization.CultureInfo})">
            <summary>
            Sets the culture provider.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.#ctor">
            <summary>
            Initializes new instance of the SharpGraph control
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.DataSourceDirect">
            <summary>
            Gets or sets the data source direct.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.RefreshData">
            <summary>
            Clears internal caches, so that chart will load all that data when it will be drawn next time
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            DrawContent is provided primararily for usage with ARNet2. However, by providing this function, it also
            allows some other usages to non-display canvases. OnPaint now calls this.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.DrawContentInternal(GrapeCity.ActiveReports.Chart.Graphics.Device,System.Drawing.Rectangle,GrapeCity.ActiveReports.Chart.Core.DrawParts)">
            <summary>
            SharpGraph device oriented DrawContent
            </summary>
            <param name="g"></param>
            <param name="rectangle"></param>
            <param name="drawnItems"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <code>Control.OnPaint</code></summary>
            <param name="pe"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <code>Control.OnPaintBackground</code></summary>
            <param name="pe"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.OnResize(System.EventArgs)">
            <summary>
            This member overrides <code>Control.OnResize</code></summary>
            <param name="e"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.IsOneFigureChart(GrapeCity.ActiveReports.Chart.ChartType)">
            <summary>
            Returns true if given chart type suggested to render only a figure.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.transferChartAreas(GrapeCity.ActiveReports.Chart.Core.Objects.Region)">
            <summary>
            transfers chart areas
            </summary>
            <param name="chartAreasHolder"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.isAnyFloatingLegendDocked(GrapeCity.ActiveReports.Chart.ChartArea)">
            <summary>
            Returns true if any floating legend is docked to area specified
            </summary>
            <param name="areaDocked"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.transferFloatingLegends(GrapeCity.ActiveReports.Chart.ChartArea,GrapeCity.ActiveReports.Chart.Core.Objects.Region)">
            <summary>
            transfers floating legends for chart area specified
            </summary>
            <param name="areaDocked">Chart area to handle</param>
            <param name="container">Region object to add core legend object to</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.transferDockedObjects(System.Collections.ICollection,GrapeCity.ActiveReports.Chart.ChartArea,GrapeCity.ActiveReports.Chart.Core.Objects.Region,GrapeCity.ActiveReports.Chart.Core.Objects.Region@)">
            <summary>
            transfers all the titles docked to object specified. Skips all floating objects (legends)
            </summary>
            <param name="objects">collection to transfer</param>
            <param name="areaDocked">area to transfer objects docked to</param>
            <param name="region">region to put docked objects to to</param>
            <param name="innerRegion">the inner region to put other objects laying inside</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.transferSeries(GrapeCity.ActiveReports.Chart.ChartArea)">
            <summary>
            transfers data series
            </summary>
            <param name="areaBound">if specified transfers only series bound to area specified.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.orderedAddComponents(GrapeCity.ActiveReports.Chart.Core.Objects.LayoutMgr,System.Collections.ArrayList,System.Collections.Hashtable)">
            <summary>
            reorders components and adds them to given Layout manager object
            </summary>
            <param name="objectList">list of components to add</param>
            <param name="layout">layout to reorder components of</param>
            <param name="orderMap">map of components to their position. Valid position values are integers {0,1,2}</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.DisplayHorizontally(GrapeCity.ActiveReports.Chart.ChartArea)">
            <summary>
            Returns true if horizontal chart should be drawn for area specified
            </summary>
            <param name="chartArea"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.AreAllSeriesHaveTheSameType(GrapeCity.ActiveReports.Chart.ChartArea,GrapeCity.ActiveReports.Chart.ChartType@)">
            <summary>
            Returns true if all the visible series bounds to area specified have the same type
            </summary>
            <param name="areaBound"></param>
            <param name="chartType">Assigned to series type if return value is true. Otherwise value is undefined</param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.Backdrop">
            <summary>
            Main chart's backdrop, spans all chart control area
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.Border">
            <summary>
            Main chart's border, spans all chart control area
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.Titles">
            <summary>
            Gets control's Titles collection
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.Series">
            <summary>
            Where chart gets it's data to display
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.DataSource">
            <summary>
            Global graph's data source
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.SaveCredentials(System.String,System.String)">
            <summary>
            For internal use only!
            </summary>
            <param name="username"></param>
            <param name="password"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.ChartAreas">
            <summary>
            Chart Areas
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.GridLayout">
            <summary>
            Chart Areas Columns
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.Legends">
            <summary>
            Gets control's Legend object
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.AutoRefresh">
            <summary>
            If true chart will be automatically refreshed(redrawn) on each property change
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.UIOptions">
            <summary>
            Enables specific UI features
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.DeviceMode">
            <summary>
            Gets or sets graphics device specific options
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.ChartCustomBorderDrawer">
            <summary>
            Gets or sets custom border drawer object for entire control
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.AreaCustomBorderDrawer">
            <summary>
            Gets or sets custom border drawer object for chart areas
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.ColorPalette">
            <summary>
            Global color palette. May be overrided on series level
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.IsDesignMode">
            <summary>
            Gets or sets a value indicating whether this instance is design mode.
            </summary>
            <value>
                <c>true</c> if this instance is design mode; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.SetDesignMode(System.Boolean)">
            <summary>
            Enable or disable the design mode.
            </summary>
            <param name="isDesignMode">
                <c>true</c> to enable design mode.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.CurrentDesigner">
            <summary>
            Gets or sets the current designer.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.AccessibleDescription">
            <summary>
            Gets or sets the description of the control used by accessibility client applications.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.AccessibleName">
            <summary>
            Gets or sets the name of the control used by accessibility client applications.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.AccessibleRole">
            <summary>
            Gets or sets the accessible role of the control
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.BackgroundImage">
            <summary>
            Gets or sets the background image displayed in the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.RightToLeft">
            <summary>
            Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.
            </summary>
            <value>The right to left.</value>
            <PermissionSet>
                <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
                <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
                <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
            </PermissionSet>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.Cursor">
            <summary>
            This member overrides <code>Control.Cursor</code></summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.ImeMode">
            <summary>
            Gets or sets the Input Method Editor (IME) mode of the control.
            </summary>
            <value>The IME mode.</value>
            <PermissionSet>
                <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
                <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
                <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
            </PermissionSet>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.CausesValidation">
            <summary>
            Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.
            </summary>
            <value>
                <c>true</c> if [causes validation]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the XML.
            </summary>
            <param name="controlNode">The control node.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.ReadXml(System.Xml.XmlElement)">
            <summary>
            Reads the XML.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Serialize this object to binary writer in XML format.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Deserialize the data from XMl format.
            </summary>
            <param name="binReader">The bin reader.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.OnContextMenu(System.Drawing.Point)">
            <summary>
            Called when context menu requested.
            </summary>
            <param name="p">The p.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.ClearInvalidBindings">
            <summary>
            Clears the invalid bindings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.SharpGraph.HideWizard">
            <summary>
            This property exists for tests only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.isWizardAutoStart">
            <summary>
            Gets the boolean value indicating "AutoRunWizard" registry value set to non-zero value
            </summary>
            <returns>true is "Auto Run Wizard" option is on</returns>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.SharpGraph.ParentHost">
            <summary>
            is set to DataDyanmics.ActiveReports.ChartControl from ChartControl : CHART_WIZARD_DATASOURCE
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.DoCommand(GrapeCity.ActiveReports.Chart.UICommand,System.Object[])">
            <summary>
            Executes command
            </summary>
            <param name="command">command to execute</param>
            <param name="parameters">optional parameters</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.SharpGraph.DataSourceConverter">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" />that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.DataSourceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.DataSourceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.HitTest(System.Int32,System.Int32)">
            <summary>
            Returns info about graph item that is placed in specified coordinates.
            Please consider using UIOptions.ForceHitTesting before calling HitTest function.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>reference to HitTestInfo or null if item is not found</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <code>Control.OnMouseMove</code></summary>
            <param name="e"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <code>Control.OnMouseDown</code></summary>
            <param name="e"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <code>Control.OnMouseUp</code></summary>
            <param name="e"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <code>Control.OnMouseWheel</code></summary>
            <param name="e"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.OnMouseLeave(System.EventArgs)">
            <summary>
            This member overrides <code>Control.OnMouseLeave</code></summary>
            <param name="e"></param>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.SharpGraph.SetDirtyFired">
            <summary>
            Occurs when SetDirty called.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.BeginInit">
            <summary>
             Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.FixReferences">
            <summary>
            Fixes the references between chart object.
            This method is used when chart is partially deserialized.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.GetDefaultChartArea">
            <summary>
            Gets "default" chart area. Newly added series and legends are bound to "default" chart area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.GetDefaultLegend">
            <summary>
            Gets "default" legend. Newly added series are bound to "default" legend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.SharpGraph.ValidateReferences">
            <summary>
            Verifies references between object, raises asserts in case of inconsistencies
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.XYValueChangedEventHandler">
            <summary>
            delegate for handling ValueMebersX and ValueMembersY
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.XYVAlueChangedEventArgs">
            <summary>
            Holds on to ValueMembersX and ValuemembersY changes
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.XYVAlueChangedEventArgs.PropertyName">
            <summary>
            Gets the name of the changed property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.XYVAlueChangedEventArgs.OldValue">
            <summary>
            Gets the old value of the changed property.
            </summary>
            <value>The old value.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.XYVAlueChangedEventArgs.NewValue">
            <summary>
            Gets the new value of the changed property.
            </summary>
            <value>The new value.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.HitTest">
            <summary>
            Represents the properties of the HitTest object
            For a list of all members of this type, see the HitTest member
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.HitTest.Item">
            <summary>
            Graph item that was under specified coordinates
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.HitTest.ItemCount">
            <summary>
            Ordinal number of item, applicable only for series views, and denotes column(sector etc) number
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.ISGDesigner">
            <summary>
            Specifies internal interface for design-time purposes
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.GraphReferenceConverter">
            <summary>
            Provides a unified way to process converting.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GraphReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" />that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GraphReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GraphReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GraphReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GraphReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
            <returns>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GraphReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from GetStandardValues is an exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if the TypeConverter.StandardValuesCollection returned from GetStandardValues is an exhaustive list of possible values; false if other values are possible.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GraphReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if GetStandardValues should be called to find a common set of values the object supports; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.GraphReferenceConverter.findAvailableComponents(GrapeCity.ActiveReports.Chart.IGraphItem)">
            <summary>
            Finds available components.
            </summary>
            <param name="startSearchItem">The item the searching starts from.</param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.GraphReferenceConverter.ObjectType">
            <summary>
            Get the object type to get the empty ctor for
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.DoubleConverter">
            <summary>
            this class is created to fix error of visualization in vs.net property grid values like 0.2 of double
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" />that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.DoubleConverterWithAuto">
            <summary>
            Converter for double with "automatic calculate" values support.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleConverterWithAuto.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleConverterWithAuto.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleConverterWithAuto.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if GetStandardValues should be called to find a common set of values the object supports; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleConverterWithAuto.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from GetStandardValues is an exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if the TypeConverter.StandardValuesCollection returned from GetStandardValues is an exhaustive list of possible values; false if other values are possible.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.DoubleConverterWithAuto.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
            <returns>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.FloatConverterWithAuto">
            <summary>
            Converter for float with "automatic calculate" values support.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FloatConverterWithAuto.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FloatConverterWithAuto.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FloatConverterWithAuto.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if GetStandardValues should be called to find a common set of values the object supports; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FloatConverterWithAuto.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from GetStandardValues is an exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if the TypeConverter.StandardValuesCollection returned from GetStandardValues is an exhaustive list of possible values; false if other values are possible.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FloatConverterWithAuto.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
            <returns>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FloatConverterWithAuto.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" />that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.FloatConverterWithAuto.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.TxExpandableObjectConverter">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.TxExpandableObjectConverter.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.TxExpandableObjectConverter" /> Class. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.TxExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets a collection of properties for the type of object specified by the value parameter.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value"></param>
            <param name="attributes">An <see cref="T:System.Object" /> that specifies the type of object to get the properties for.</param>
            <returns>An array of type System.Attribute that will be used as a filter.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Core.Objects.AutoScaleType">
            <summary>
            Axis.AutoScale modes
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Core.Objects.AutoScaleType.None">
            <summary>
            Neither autoscale nor smart labels
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Core.Objects.AutoScaleType.Min">
            <summary>
            automatically calulate Axis.Min value
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Core.Objects.AutoScaleType.Max">
            <summary>
            automatically calulate Axis.Max value
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Core.Objects.AutoScaleType.SmartLabels">
            <summary>
            automatically calculate labels appearance
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Core.Objects.Alignment">
            <summary>
            Object's alignment inside container or bounding box
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Core.Objects.StdLegendMarkers">
            <summary>
            Standard legend markers
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Core.Objects.LineJoin">
            <summary>
            Specifies how to join consecutive line or curve segments in a figure (subpath) contained in a path (PolyLine)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Core.Objects.LineJoin.Miter">
            <summary>
            Specifies a mitered join. This produces a sharp corner or a clipped corner, depending on whether the length of the miter exceeds the miter limit.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Core.Objects.LineJoin.Bevel">
            <summary>
            Specifies a beveled join. This produces a diagonal corner.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Core.Objects.LineJoin.Round">
            <summary>
            Specifies a circular join. This produces a smooth, circular arc between the lines.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Core.Objects.LineJoin.MiterClipped">
            <summary>
            Specifies a mitered join. This produces a sharp corner or a beveled corner, depending on whether the length of the miter exceeds the miter limit. 
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.AppearancePage">
            <summary>
            Appearance page control
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.AppearancePage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.AppearancePage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.AppearancePage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.AppearancePage.graphControl">
            <summary>
            control to be customized (copy)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.AppearancePage.isWizardMode">
            <summary>
            in the "Wizard" mode preview and reset colors button are unavailable
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.AppearancePage.listBoxChartPalette_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Applies new palette to the chart
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.AxisEditor">
            <summary>
            Axis editor control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.AxisEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.AxisEditor.displayValueToCombo(System.Double,System.Windows.Forms.ComboBox)">
            <summary>
            displays value in combobox, in case of NaN value 1st combo list item is displayed (usually "Auto")
            </summary>
            <param name="value"></param>
            <param name="comboBox"></param>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.AxisEditor.collMgr">
            <summary>
            control to be customized (copy)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.AxisEditor._isSelectionChanging">
            <summary>
            used to prevent axis updates during selection change
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.AxisEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.AxisEditor.Title">
            <summary>
            Gets current axis title
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.AxisEditor.ActivateItem(System.Collections.ArrayList)">
            <summary>
            switched editing context to modify object specified
            </summary>
            <param name="parentCollection"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.AxisTickEditor">
            <summary>
            Summary description for AxisTickEditor.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.AxisTickEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.AxisTickEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.AxisTickEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ChartAreasPage">
            <summary>
            ChartAreas editor page
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ChartAreasPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ChartAreasPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ChartAreasPage.collMgr">
            <summary>
            control to be customized (copy)
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ChartDesignerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ChartDesignerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.ChartDesignerForm.WizardStepData.CurrentObject">
            <summary>
            Gets or sets last collection index. Updated manually
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ChartDesignerForm.graphControl">
            <summary>
            copy of the control to be customized
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ChartDesignerForm.originalControl">
            <summary>
            reference to user control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ChartDesignerForm.locatePage(System.Type)">
            <summary>
            locates step number by form type of associated page
            </summary>
            <param name="formType"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor">
            <summary>
            Collection editor control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor.ItemList">
            <summary>
            Gets or sets item list
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor.Toolbar">
            <summary>
            Gets command toolbar
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor.SelectedItem">
            <summary>
            Gets or sets current item
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor.Populate">
            <summary>
            Populates items list
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor.UpdateItemName(System.Object)">
            <summary>
            Updates item name in the list
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor.ItemCount">
            <summary>
            Gets the number of items in the list
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor.ButtonAdd">
            <summary>
            Gets add button control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor.CanReorder(System.Int32)">
            <summary>
            Return true item at the index specified can be moved up or down
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.CollectionEditor.CanDelete(System.Int32)">
            <summary>
            Return true item at the index specified can be deleted
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "F:GrapeCity.ActiveReports.Chart.Designer.DataUtil.regexSplitMembers" -->
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.CustomPropertyPane">
            <summary>
            Summary description for CustomPropertyPane.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.CustomPropertyPane.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.CustomPropertyPane.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.CustomPropertyPane.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.CustomPropertyPane.newObjectTemplate">
            <summary>
            template for the new object (will be cloned if derived from Item)
            or the new object itself
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.Designer.CustomPropertyPane.DrillDown">
            <summary>
            A <see cref="T:GrapeCity.ActiveReports.Chart.Designer.PanelState">PanelState</see> changed event.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.FlatComboBox.isHovering">
            <summary>
            Gets true when mouse is over dropdown button
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.FlatButton.isHovering">
            <summary>
            Gets true when mouse is over button
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.TabControlEx">
            <summary>
            Owner-draw tabcontrol with flat appearance.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.FlickerFreePanel">
            <summary>
            Clone of System.Windows.Forms.Panel with some tweaks to reduce flickering.
            You should provide complete implementation of Paint method or event.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ImageListBox">
            <summary>
            Multicolumn listbox with images.
            Created to use instead of WinForms TreeView because it supports transparency (with no jagged bounds).
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.LightDirCtl">
            <summary>
            Light settings control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.LightDirCtl.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.Designer.LightDirCtl" /> control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.LightDirCtl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.LightDirCtl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.LightDirCtl.InitFrom(GrapeCity.ActiveReports.Chart.Light)">
            <summary>
            Initializes the controls from the specified <see cref="T:GrapeCity.ActiveReports.Chart.Light" /> control settings
            </summary>
            <param name="light"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.LightDirCtl.StoreTo(GrapeCity.ActiveReports.Chart.ChartArea)">
            <summary>
            Stores the current settings to the specified <see cref="T:GrapeCity.ActiveReports.Chart.ChartArea" /> object
            </summary>
            <param name="area"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ListBoxEx">
            <summary>
            Extended listbox control, displays string if list is empty
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ObjectPropertiesPane">
            <summary>
            Summary description for ObjectPropertiesPane.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ObjectPropertiesPane.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.ObjectPropertiesPane.DisplayTitle">
            <summary>
            Gets or sets whether object title should be displayed
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.ObjectPropertiesPane.SelectedObject">
            <summary>
            Gets or sets object which properties are displayed within this control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ObjectPropertiesPane.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ObjectPropertiesPane.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ObjectPropertiesPane.internalSetSelectedObject(System.Object)">
            <summary>
            displays object's properties
            </summary>
            <param name="selectedObject"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ObjectPropertiesPane.createPropertyEditor(System.Type)">
            <summary>
            creates new control for property specified
            </summary>
            <param name="propertyType">property type</param>
            <returns></returns>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ObjectPropertiesPane.typeToTypeMap">
            <summary>
            hashtable used to map object types to its base types supported in the designer
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ObjectPropertiesPane.isSimpleProperty(System.Type)">
            <summary>
            returns true if property is supported and it is simple property
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ViewPointProjectionCtl">
            <summary>
            3-D View settings control
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ViewPointProjectionCtl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ViewPointProjectionCtl.#ctor">
            <summary>
            Initializes a new nstance of the <see cref="T:GrapeCity.ActiveReports.Chart.Designer.ViewPointProjectionCtl" /> control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ViewPointProjectionCtl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ViewPointProjectionCtl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ViewPointProjectionCtl.InitFrom(GrapeCity.ActiveReports.Chart.ChartArea)">
            <summary>
            initialized the control from the <see cref="T:GrapeCity.ActiveReports.Chart.ChartArea" /> object specified
            </summary>
            <param name="area"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ViewPointProjectionCtl.StoreTo(GrapeCity.ActiveReports.Chart.ChartArea)">
            <summary>
            Stores current settings to specified <see cref="T:GrapeCity.ActiveReports.Chart.ChartArea" /> object
            </summary>
            <param name="area"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.StepTitle">
            <summary>
            WizardStepButton's Title member properties class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.StepTitle.parentInvalidate">
            <summary>
            invalidates parent WizardStepButton control
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.StepTitle.Text">
            <summary>
            Gets or sets the text to display
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.StepTitle.Color">
            <summary>
            Gets or sets color to draw text with
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.StepTitle.Font">
            <summary>
            Gets or sets font to draw text with
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.StepTitle.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.StepTitle.#ctor(System.String,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Full constructor
            </summary>
            <param name="text">title's text</param>
            <param name="color">text color</param>
            <param name="font">text font</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.StepTitle.Converter">
            <summary>
            UI Converter class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.StepTitle.Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given object to another type.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.WizardStepButton">
            <summary>
            WizardStepButton control
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.WizardStepButton.IMG_DX">
            <summary>
            Margin between control's bound and both image and text
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.WizardStepButton.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.WizardStepButton.IsAutoColors">
            <summary>
            Gets or sets whether to calculate colors automatically from control's BackColor
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.WizardStepButton.IsSelected">
            <summary>
            Gets or sets whether to calculate colors automatically from control's BackColor
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.WizardStepButton.BordersSet">
            <summary>
            Gets or sets whether to draw border around the title
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.WizardStepButton.Image">
            <summary>
            Gets or sets image. Image is drawn on left side of the control's rectangle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.WizardStepButton.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.WizardStepButton.SubTitle">
            <summary>
            Gets or sets the subtitle, drawn below the title
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.WizardStepButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.WizardStepButton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.YaPanel">
            <summary>
            Yet another panel class. Uses constants and enums of YaPanel.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Chart.Designer.YaPanel.PanelStateChanged">
            <summary>
            A <see cref="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.PanelState">PanelState</see> changed event.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.YaPanel.panelHeight">
            <summary>
            expanded panel height
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.YaPanel.panelTitleHeight">
            <summary>
            actual title height
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.PanelState">
            <summary>
            Gets/sets the <see cref="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.PanelState">PanelState</see>.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.Text">
            <summary>
            Gets/sets the text displayed as the panel title. Set to empty string to hide title.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.StartColor">
            <summary>
            Gets/sets the starting color for the background gradient of the header.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.EndColor">
            <summary>
            Gets/sets the ending color for the background gradient of the header.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.GradientMode">
            <summary>
            Gets/sets the direction of the title gradient.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.TitleHeight">
            <summary>
            Gets/sets the border width (in pixels) of the panel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.TitleColor">
            <summary>
            Gets/sets the border width (in pixels) of the panel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.TitleFont">
            <summary>
            Gets/sets the border width (in pixels) of the panel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.BorderColor">
            <summary>
            Gets/sets the border color of the panel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.BorderWidth">
            <summary>
            Gets/sets the border width (in pixels) of the panel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.YaPanel.BorderStyle">
            <summary>
            Gets or sets border style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.YaPanel.UpdateDisplayedState">
            <summary>
            Helper function to update the displayed state of the panel.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.YaPanel.OnPanelStateChanged(GrapeCity.ActiveReports.Chart.Designer.YaPanelEventArgs)">
            <summary>
            Event handler for the <see cref="E:GrapeCity.ActiveReports.Chart.Designer.YaPanel.PanelStateChanged">PanelStateChanged</see> event.
            </summary>
            <param name="e">A <see cref="T:GrapeCity.ActiveReports.Chart.Designer.YaPanelEventArgs">PanelEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.PanelState">
            <summary>
            Defines the state of a <see cref="T:GrapeCity.ActiveReports.Chart.Designer.YaPanel">YaPanel</see>.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.PanelState.Expanded">
            <summary>
            The <see cref="T:GrapeCity.ActiveReports.Chart.Designer.YaPanel">YaPanel</see> is expanded.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.PanelState.Collapsed">
            <summary>
            The <see cref="T:GrapeCity.ActiveReports.Chart.Designer.YaPanel">YaPanel</see> is collapsed.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.LegendItemEditor">
            <summary>
            Custom Legend Item Editor
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.LegendItemEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.LegendItemEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.LegendItemEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.LegendItemEditor.ActivateItem(System.Collections.ArrayList)">
            <summary>
            switched editing context to modify object specified
            </summary>
            <param name="parentCollection"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.LegendsPage">
            <summary>
            ChartAreas editor panel control
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.LegendsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.LegendsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.LegendsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.LegendsPage.graphControl">
            <summary>
            control to be customized (copy)
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.LocateCredentialsEventArgs">
            <summary>
            Provides data for <see cref="!:LocateCredentials" /> event.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.LocateCredentialsEventArgs.DataSource">
            <summary>
            Gets the data source to locate credentials for.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.LocateCredentialsEventArgs.ReportPath">
            <summary>
            Gets the name of the report to locate credentials for.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.LocateCredentialsEventArgs.UserName">
            <summary>
            Gets ot sets the user name of the credentials to be located.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.LocateCredentialsEventArgs.Password">
            <summary>
            Gets ot sets the password of the credentials to be located.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.LocateCredentialsEventArgs.PromptText">
            <summary>
            Gets the text of prompt of the locate credentials request.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.LocateCredentialsEventArgs.Name">
            <summary>
            Gets the name of the datasource.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.LocateCredentialsEventArgs.#ctor(System.Object,System.String,System.String,System.String)">
            <summary>
            Initializes new instance of <see cref="T:GrapeCity.ActiveReports.Chart.Designer.LocateCredentialsEventArgs" /> class.
            </summary>
            <param name="dataSource">The data source to locate credentials for.</param>
            <param name="reportPath">The name of the report to locate credentials for.</param>
            <param name="promptText">The text of prompt of the locate credentials request.</param>
            <param name="name">The datasource's name</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.LocateCredentialsEventHandler">
            <summary>
            Represents method that handles <see cref="!:LocateCredentials" /> event.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.PropertyEditorForm">
            <summary>
            Summary description for PropertyEditorForm.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.PropertyEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.PropertyEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.PropertyEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.PropertyEditors.MarkerEditor">
            <summary>
            Summary description for MarkerEditor.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.PropertyEditors.MarkerEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.PropertyEditors.MarkerEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.PropertyEditors.MarkerEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.PropertyEditors.MarkerEditor.displayMarkerData(GrapeCity.ActiveReports.Chart.Marker)">
            <summary>
            displays the specified marker data in the control
            </summary>
            <param name="markerData"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.SeriesPage">
            <summary>
            Summary description for ChartAreasPage.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.SeriesPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.SeriesPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.SeriesPage.graphControl">
            <summary>
            control to be customized (copy)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.SeriesPage.membersChartType">
            <summary>
            the chart type that the data members are listed for
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.TitlesPage">
            <summary>
            Summary description for ChartAreasPage.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.TitlesPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.TitlesPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.TitlesPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.TitlesPage.graphControl">
            <summary>
            control to be customized (copy)
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.TitlesPage.ReloadAreaList">
            <summary>
            Reloads chart areas combobox, is called when the area list was changed
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ToolBarBorderStyle">
            <summary>
            BorderStyle toolbar control.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ToolBarBorderStyle.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ToolBarBorderStyle.currentData">
            <summary>
            current values stored as the BorderInfo object. Used only for style picker. Actual values are stored
            just before dropdown is open.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.ToolBarBorderStyle.IsStyleAvailable">
            <summary>
            Gets or sets whether Style dropdown and its label are available
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarBorderStyle.redisplayObject">
            <summary>
            Gets the current properties of line object and displays them on UI
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarBorderStyle.copyStyleFrom(GrapeCity.ActiveReports.Chart.Border)">
            <summary>
            Copies properties from object specified and displays them
            </summary>
            <param name="border">Object to copy properties from</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarBorderStyle.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarBorderStyle.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarBorderStyle.handleNewButtonValue(System.Windows.Forms.ToolStripItem)">
            <summary>
            gets updated value from button and applies it to object edited
            </summary>
            <param name="button">button to get data from</param>
            <returns>True if entire toolbar needs invalidate</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ToolBarChartView">
            <summary>
            Summary description for ToolBarBorderStyle.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ToolBarChartView.LightToolBtn">
            <summary>
            Light properties dropdown button
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ToolBarChartView.ProjectionToolBtn">
            <summary>
            Projection properties dropdown button
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ToolBarChartView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ToolBarChartView.tbarLightAndViewpoint">
            <summary>
            current values stored as the BorderInfo object. Used only for style picker. Actual values are stored
            just before dropdown is open.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarChartView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarChartView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ToolBarFillStyle">
            <summary>
            FillStyle toolbar control
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ToolBarFillStyle.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ToolBarFillStyle.currentBackdrop">
            <summary>
            current values stored as the BackdropInfo object
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.ToolBarFillStyle.IsStyleAvailable">
            <summary>
            Gets or sets whether Style dropdown and its label are available
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarFillStyle.redisplayObject">
            <summary>
            Gets the current properties of line object and displays them on UI
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarFillStyle.copyStyleFrom(GrapeCity.ActiveReports.Chart.Graphics.Backdrop)">
            <summary>
            Copies properties from object specified and displays them
            </summary>
            <param name="backdrop">Object to copy properties from</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarFillStyle.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarFillStyle.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarFillStyle.handleNewButtonValue(System.Windows.Forms.ToolStripDropDownButton)">
            <summary>
            updates object's propety from the button specified
            </summary>
            <param name="button"></param>
            <returns>true if entire toolbar needs update</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ToolBarFont">
            <summary>
            Font properties toolbar
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.ToolBarFont.IsStyleAvailable">
            <summary>
            Gets or sets whether Style dropdown and its label are available
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarFont.redisplayObject">
            <summary>
            Gets the current properties of font object and displays them on UI
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarFont.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarFont.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ToolBarLabelInfo">
            <summary>
            Summary description for ToolBarTooltip.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarLabelInfo.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarLabelInfo.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarLabelInfo.redisplayObject">
            <summary>
            Gets the current properties of line object and displays them on UI
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ToolBarLineStyle">
            <summary>
            Summary description for ToolBarLineStyle.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ToolBarLineStyle.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ToolBarLineStyle.currentLine">
            <summary>
            current values stored as the LineInfo object
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.ToolBarLineStyle.IsStyleAvailable">
            <summary>
            Gets or sets whether Style dropdown and its label are available
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarLineStyle.redisplayObject">
            <summary>
            Gets the current properties of line object and displays them on UI
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarLineStyle.copyStyleFrom(GrapeCity.ActiveReports.Chart.Graphics.Line)">
            <summary>
            Copies properties from object specified and displays them
            </summary>
            <param name="line">Object to copy properties from</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarLineStyle.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ToolBarLineStyle.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.AlphaLevelPicker">
            <summary>
            Summary description for AlphaLevelPicker.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.AlphaLevelPicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.AlphaLevelPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.AlphaLevelPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ColorListBox">
            <summary>
            Summary description for ColorListBox.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.ColorPicker">
            <summary>
            Summary description for ColorPicker.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.ColorPicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ColorPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.ColorPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.DropDownHost">
            <summary>
            Summary description for DropDownHost.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.DropDownHost.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.DropDownHost.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.DropDownHost.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.PicturePicker">
            <summary>
            Summary description for PicturePicker.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.PicturePicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.PicturePicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.PicturePutPicker">
            <summary>
            Summary description for PicturePutPicker.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.PicturePutPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.PicturePutPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.StylePickerToolBtn">
            <summary>
            Summary description for StylePicker.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.StylePickerToolBtn.ObjectType">
            <summary>
            Gets or sets object type to apply styles to
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.StylePickerToolBtn.ObjectValue">
            <summary>
            Gets or sets object to apply styles to
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Designer.StylePickerToolBtn.SelectedStyleTemplate">
            <summary>
            Gets style template for the selected style
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.StylePickerToolBtn.OnObjectChanged">
            <summary>
            Updates the current style name. Call this method when one or more properties of your object are changed.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.TextAlignPicker">
            <summary>
            TextAlignPicker object
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.TextAlignPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.TextAlignPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.TextAnglePicker">
            <summary>
            Summary description for TextAnglePicker.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.TextAnglePicker.initialAngle">
            <summary>
            holds angle value before mouse button is pressed
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.TextAnglePicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.TextAnglePicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Designer.WallRangeEditor">
            <summary>
            WallRange editor page.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.WallRangeEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.WallRangeEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Designer.WallRangeEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Designer.WallRangeEditor.graphControl">
            <summary>
            control to be customized (copy)
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Globalization.SR">
            <summary>
            Provides access to the localization resources in the SharpGraph assembly.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Globalization.SR.loader">
            <summary>
            Used for the singleton SR instance.  Used in conjunction with GetLoader().
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Globalization.SR.resources">
            <summary>
            The ResourceManager used by an instance of SR.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Globalization.SR.#ctor">
            <summary>
            Initializes an instance of the SR class.  Note this is a singleton class so the constructor is private.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Globalization.SR.GetLoader">
            <summary>
            Gets the static singleton instance of the SR class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Globalization.SR.GetString(System.String,System.Object[])">
            <summary>
            Returns the value of the specified string resource localized based on the current Thread's CurrentUICulture.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <param name="args">Used to provide format strings like String.Format.</param>
            <returns>
            The value of the resource localized for the caller's current culture settings. If a match is not possible, a null reference (Nothing in Visual Basic) is returned.
            </returns>
            <remarks>
            The resource that is returned is localized for the culture determined by the cultural settings of the current Thread (this is accomplished using the culture's CurrentUICulture property). If the resource has not been localized for that culture, the resource that is returned is localized for a best match (this is accomplished using the Parent property). Otherwise, a null reference (Nothing in Visual Basic) is returned.
            If no usable set of resources has been found, the ResourceManager falls back on the neutral culture's resources, which are expected to be in the main assembly. If an appropriate culture resource has not been found, a MissingManifestResourceException is thrown.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Globalization.SR.GetString(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            Returns the value of the specified string resource localized based on the specified culture.
            </summary>
            <param name="culture">The CultureInfo object that represents the culture for which the resource is localized. Note that if the resource is not localized for this culture, the lookup will fall back using the culture's Parent property, stopping after looking in the neutral culture. </param>
            <param name="name">The name of the resource to get.</param>
            <param name="args">Used to provide format strings like String.Format.</param>
            <returns>The value of the resource localized for the specified culture. If a best match is not possible, a null reference (Nothing in Visual Basic) is returned.</returns>
            <remarks>
            If no usable set of resources has been found, the ResourceManager falls back on the neutral culture's resources, which are expected to be in the main assembly.
            If an appropriate culture resource has not been found, a MissingManifestResourceException is thrown.
            </remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Globalization.strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AlphaLevelPicker_label1Text">
            <summary>
              Looks up a localized string similar to Opaque.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AlphaLevelPicker_label2Text">
            <summary>
              Looks up a localized string similar to Transparent.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AlphaLevelPicker_label3Text">
            <summary>
              Looks up a localized string similar to Sample:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AppearancePage_tabPageAppearanceText">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AppearancePage_tabPagePaletteText">
            <summary>
              Looks up a localized string similar to Palette.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_cbCustomAxisDeriveMaxText">
            <summary>
              Looks up a localized string similar to Derive Max Value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_cbCustomAxisDeriveMinText">
            <summary>
              Looks up a localized string similar to Derive Min value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_cbDisplayScaleInTitleText">
            <summary>
              Looks up a localized string similar to Display in axis title.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_cbDrawAxisInsideText">
            <summary>
              Looks up a localized string similar to Draw axis inside chart area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_cbLabelsAtBottomText">
            <summary>
              Looks up a localized string similar to Draw axis at the bottom.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_cbLabelsVisibleText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_cbSmartLabelsText">
            <summary>
              Looks up a localized string similar to Smart labels.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_cbVisibleText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_checkBoxStaggerLabelsText">
            <summary>
              Looks up a localized string similar to Staggered labels.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label10Text">
            <summary>
              Looks up a localized string similar to Labels:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label11Text">
            <summary>
              Looks up a localized string similar to Scale:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label12Text">
            <summary>
              Looks up a localized string similar to Position:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label13Text">
            <summary>
              Looks up a localized string similar to Tick offset:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label1Text">
            <summary>
              Looks up a localized string similar to Parent axis:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label2Text">
            <summary>
              Looks up a localized string similar to Min:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label3Text">
            <summary>
              Looks up a localized string similar to Max:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label4Text">
            <summary>
              Looks up a localized string similar to Labels font:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label5Text">
            <summary>
              Looks up a localized string similar to Labels gap:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label6Text">
            <summary>
              Looks up a localized string similar to Arrow style:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label7Text">
            <summary>
              Looks up a localized string similar to Label format:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label8Text">
            <summary>
              Looks up a localized string similar to Location:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_label9Text">
            <summary>
              Looks up a localized string similar to Length:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_panelAxisTypeText">
            <summary>
              Looks up a localized string similar to Axis type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_rbCategoriesText">
            <summary>
              Looks up a localized string similar to Categories.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_rbLogarithmicText">
            <summary>
              Looks up a localized string similar to Logarithmic.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_rbNumericText">
            <summary>
              Looks up a localized string similar to Numeric.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_tabCommonText">
            <summary>
              Looks up a localized string similar to Common.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_tabCustomAxisText">
            <summary>
              Looks up a localized string similar to Custom Axis.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_tabLabelsText">
            <summary>
              Looks up a localized string similar to Labels.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_tabTickmarksText">
            <summary>
              Looks up a localized string similar to Tickmarks.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_yaPanel1Text">
            <summary>
              Looks up a localized string similar to Major tick.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_yaPanel2Text">
            <summary>
              Looks up a localized string similar to Placement.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_yaPanel3Text">
            <summary>
              Looks up a localized string similar to Axis line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_yaPanel4Text">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisEditor_yaPanelMajorTickText">
            <summary>
              Looks up a localized string similar to Minor tick.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisTickEditor_cbVisibleText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisTickEditor_label1Text">
            <summary>
              Looks up a localized string similar to Tick length:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisTickEditor_label2Text">
            <summary>
              Looks up a localized string similar to Tick line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisTickEditor_label3Text">
            <summary>
              Looks up a localized string similar to Grid line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.AxisTickEditor_label5Text">
            <summary>
              Looks up a localized string similar to Step:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Category_Chart">
            <summary>
              Looks up a localized string similar to Chart.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Category_ChartArea">
            <summary>
              Looks up a localized string similar to Chart Area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Category_ChartArea_ChartBox">
            <summary>
              Looks up a localized string similar to Chart Box.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Category_LegendItem_Marker">
            <summary>
              Looks up a localized string similar to Marker.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Category_Title_TextItem">
            <summary>
              Looks up a localized string similar to Text Item.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Category_WallRange">
            <summary>
              Looks up a localized string similar to Wall Range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_checkBoxWallXYText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_checkBoxWallXZText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_checkBoxWallYZText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_groupBox1Text">
            <summary>
              Looks up a localized string similar to Wall YZ.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_groupBox2Text">
            <summary>
              Looks up a localized string similar to Wall XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_groupBox3Text">
            <summary>
              Looks up a localized string similar to Wall XZ.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_label1Text">
            <summary>
              Looks up a localized string similar to Width:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_label2Text">
            <summary>
              Looks up a localized string similar to Width:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_label3Text">
            <summary>
              Looks up a localized string similar to Width:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_labelNameText">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_panel2Text">
            <summary>
              Looks up a localized string similar to Projection and light.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartAreasPage_panelWallsPropertiesText">
            <summary>
              Looks up a localized string similar to Walls.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_buttonApplyText">
            <summary>
              Looks up a localized string similar to Apply.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_buttonCancelText">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_buttonFinishText">
            <summary>
              Looks up a localized string similar to Finish.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_buttonValidateText">
            <summary>
              Looks up a localized string similar to validate.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_panelStepPageText">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_panelSubCol1Text">
            <summary>
              Looks up a localized string similar to Axes.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_panelSubCol2Text">
            <summary>
              Looks up a localized string similar to Wall Ranges.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_stepTitleAppearanceText">
            <summary>
              Looks up a localized string similar to Legends.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_stepTitleAreasText">
            <summary>
              Looks up a localized string similar to Legends.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_stepTitleLegendsText">
            <summary>
              Looks up a localized string similar to Legends.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_stepTitleSeriesText">
            <summary>
              Looks up a localized string similar to Legends.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_stepTitleTitlesText">
            <summary>
              Looks up a localized string similar to Legends.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_Text">
            <summary>
              Looks up a localized string similar to Chart Designer.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_toolBarButtonOpen_ToolTipText">
            <summary>
              Looks up a localized string similar to Open XML file.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_toolBarButtonSave_ToolTipText">
            <summary>
              Looks up a localized string similar to Save the chart to XML.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ChartDesignerForm_yaPanelNavigatorText">
            <summary>
              Looks up a localized string similar to step title.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_AnnotationLine">
            <summary>
              Looks up a localized string similar to Annotation line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_AnnotationTextBar">
            <summary>
              Looks up a localized string similar to Annotation text.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_Axis">
            <summary>
              Looks up a localized string similar to Axis.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_BackdropItem">
            <summary>
              Looks up a localized string similar to Backdrop.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_ChartArea">
            <summary>
              Looks up a localized string similar to Chart Area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_LabelInfo">
            <summary>
              Looks up a localized string similar to Label.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_Legend">
            <summary>
              Looks up a localized string similar to Legend.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_PlaneItem">
            <summary>
              Looks up a localized string similar to Wall.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_Series">
            <summary>
              Looks up a localized string similar to Series.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_SharpGraph">
            <summary>
              Looks up a localized string similar to Entire Chart.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_Title">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Class_Name_WallRange">
            <summary>
              Looks up a localized string similar to Wall Range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.CollectionEditor_buttonAddTooltipText">
            <summary>
              Looks up a localized string similar to Add new item.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.CollectionEditor_buttonDeleteTooltipText">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.CollectionEditor_buttonDownTooltipText">
            <summary>
              Looks up a localized string similar to Reorder items.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.CollectionEditor_buttonUpTooltipText">
            <summary>
              Looks up a localized string similar to Reorder items.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ColorPicker_customColorsTabText">
            <summary>
              Looks up a localized string similar to Custom.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ColorPicker_systemColorsTabText">
            <summary>
              Looks up a localized string similar to System.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ColorPicker_webColorsTabText">
            <summary>
              Looks up a localized string similar to Web.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ContextMenu_Customize">
            <summary>
              Looks up a localized string similar to Customize {0}....
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Control_GridLayout_Title">
            <summary>
              Looks up a localized string similar to {0:d} x {1:d}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Control_GridLayout_Tooltip">
            <summary>
              Looks up a localized string similar to Grid size: {0:d} x {1:d}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Control_PropertiesPane_DefTitle">
            <summary>
              Looks up a localized string similar to Click object in the preview window to display its properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Control_PropertiesPane_ErrText">
            <summary>
              Looks up a localized string similar to EXCEPTION: {0}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.CustomPropertyPane_checkBoxUseDefaultText">
            <summary>
              Looks up a localized string similar to Use default (none).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.CustomPropertyPane_labelDrillDownText">
            <summary>
              Looks up a localized string similar to Drill down.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.CustomPropertyPane_panelControlText">
            <summary>
              Looks up a localized string similar to Markers.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_Arrow">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_AxisType">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_DisplayScale">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_LabelFont">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_LabelFormat">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_Labels">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_LabelsAtBottom">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_LabelsGap">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_LabelsInside">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_LabelsVisible">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_Line">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_MajorTick">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_Max">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_Min">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_MinorTick">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_Position">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_Scale">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_Scroll">
            <summary>
              Looks up a localized string similar to Axis scrollbar definition.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_SmartLabels">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_StaggerLabels">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_TickOffset">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_Title">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_TitleFont">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Axis_Visible">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_AxisScroll_BackColor">
            <summary>
              Looks up a localized string similar to Scrollbar background color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_AxisScroll_ButtonColor">
            <summary>
              Looks up a localized string similar to Buttons face color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_AxisScroll_Enabled">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_AxisScroll_OutlineColor">
            <summary>
              Looks up a localized string similar to Scrollbar outline color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_AxisScroll_ScrollLength">
            <summary>
              Looks up a localized string similar to Scrolling area length.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_AxisScroll_ScrollPosition">
            <summary>
              Looks up a localized string similar to Scrolling position within axis.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_AxisScroll_ScrollStepSize">
            <summary>
              Looks up a localized string similar to Step scrolling size. Step scrolling is occurred when user clicks scroll buttons..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_AxisScroll_Visible">
            <summary>
              Looks up a localized string similar to Specifies whether scroll is available.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_AxisScroll_Width">
            <summary>
              Looks up a localized string similar to Scrollbar width in pixels.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Border_Line">
            <summary>
              Looks up a localized string similar to Border line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Border_ShadowColor">
            <summary>
              Looks up a localized string similar to Shadow color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Border_ShadowWeight">
            <summary>
              Looks up a localized string similar to Shadow weight.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_Axes">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_Backdrop">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_Border">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_Light">
            <summary>
              Looks up a localized string similar to Light settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_Padding">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_Projection">
            <summary>
              Looks up a localized string similar to Projection settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_SwapAxesDirection">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_ViewPoint">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_WallRanges">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_WallXY">
            <summary>
              Looks up a localized string similar to Wall XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_WallXZ">
            <summary>
              Looks up a localized string similar to Floor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_WallYZ">
            <summary>
              Looks up a localized string similar to Wall YZ.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_ChartArea_ZDepthRatio">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_DataPoint_DisplayInLegend">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_DataPoint_IsEmpty">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_DataPoint_LegendText">
            <summary>
              Looks up a localized string similar to Legend text.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_DataPoint_Properties">
            <summary>
              Looks up a localized string similar to Custom data point properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_DataPoint_XValue">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_DataPoint_YValues">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Downswing_Line">
            <summary>
              Looks up a localized string similar to Downswing.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_FontInfo_Angle">
            <summary>
              Looks up a localized string similar to Text output angle in degrees.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_FontInfo_Color">
            <summary>
              Looks up a localized string similar to Text color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_FontInfo_Font">
            <summary>
              Looks up a localized string similar to GDI+ Font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_GridLayout_Columns">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_GridLayout_Rows">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Item_AntiAliasMode">
            <summary>
              Looks up a localized string similar to AntiAlias mode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Item_ContextMenu">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Item_Name">
            <summary>
              Looks up a localized string similar to Item name used to reference the item.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Label_Alignment">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Label_Backdrop">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Label_Border">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Label_Font">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Label_Format">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_Alignment">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_Backdrop">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_Border">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_DockArea">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_DockInsideArea">
            <summary>
              Looks up a localized string similar to Floating legend.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_Footer">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_GridLayout">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_Header">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_LabelsFont">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_LegendItems">
            <summary>
              Looks up a localized string similar to Custom legend items.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_MarginX">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_MarginY">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Legend_Visible">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_LegendItem_Backdrop">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_LegendItem_Border">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_LegendItem_Line">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_LegendItem_Marker">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_LegendItem_Style">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_LegendItem_Text">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Light_DirectionalRatio">
            <summary>
              Looks up a localized string similar to Directional to ambient light intencity ratio.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Light_Source">
            <summary>
              Looks up a localized string similar to Light source position.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Light_Type">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_LineColor">
            <summary>
              Looks up a localized string similar to Color of the line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_LineStyle">
            <summary>
              Looks up a localized string similar to Style of the line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_LineWeight">
            <summary>
              Looks up a localized string similar to Weight of the line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Marker_Backdrop">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Marker_Label">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Marker_Line">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Marker_Size">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Marker_Style">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Projection_DX">
            <summary>
              Looks up a localized string similar to Origin offset by X axis.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Projection_DY">
            <summary>
              Looks up a localized string similar to Origin offset by Y axis.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Projection_HorizontalRotation">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Projection_Type">
            <summary>
              Looks up a localized string similar to Projection type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Projection_VerticalRotation">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_Annotations">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_AxisX">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_AxisY">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_ChartArea">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_ColorPalette">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_DisplayInLegend">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_Legend">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_LegendItemsMode">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_LegendText">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_Name">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_Points">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_Properties">
            <summary>
              Looks up a localized string similar to Custom type-specific properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_Type">
            <summary>
              Looks up a localized string similar to Chart type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_ValueMembersY">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_ValueMemberX">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_Visible">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Series_ZOrder">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_AutoRefresh">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_Backdrop">
            <summary>
              Looks up a localized string similar to Background style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_Border">
            <summary>
              Looks up a localized string similar to Chart border style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_ChartAreas">
            <summary>
              Looks up a localized string similar to Chart areas collection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_ColorPalette">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_DataSource">
            <summary>
              Looks up a localized string similar to Chart data source.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_DeviceMode">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_GridLayout">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_Legends">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_Series">
            <summary>
              Looks up a localized string similar to Series collection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_SeriesLine">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_Titles">
            <summary>
              Looks up a localized string similar to Chart titles.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_SharpGraph_UIOptions">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Tick_GridLine">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Tick_Length">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Tick_Line">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Tick_Step">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Tick_Visible">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Title_Alignment">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Title_Backdrop">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Title_Border">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Title_DockArea">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Title_Docking">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Title_Font">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Title_Name">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Title_Text">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Title_Visible">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Upswing_Line">
            <summary>
              Looks up a localized string similar to Upswing.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Wall_Backdrop">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Wall_Visible">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_Wall_Width">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_WallRange_AdjacentAxes">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_WallRange_Backdrop">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_WallRange_Border">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_WallRange_DrawOnTopOfGridLines">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_WallRange_EndValue">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_WallRange_PrimaryAxis">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_WallRange_StartValue">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Description_WallRange_Visible">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_PageTitle_Appearance">
            <summary>
              Looks up a localized string similar to Chart appearance.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_PageTitle_Area">
            <summary>
              Looks up a localized string similar to Chart area properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_PageTitle_Axis">
            <summary>
              Looks up a localized string similar to Axis properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_PageTitle_Legend">
            <summary>
              Looks up a localized string similar to Legend properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_PageTitle_LegendItem">
            <summary>
              Looks up a localized string similar to Legend Item properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_PageTitle_Series">
            <summary>
              Looks up a localized string similar to Series properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_PageTitle_Title">
            <summary>
              Looks up a localized string similar to Title properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_PageTitle_WallRange">
            <summary>
              Looks up a localized string similar to Wall range properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_Verb_ChartDesigner">
            <summary>
              Looks up a localized string similar to Chart Designer.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_Verb_Clear">
            <summary>
              Looks up a localized string similar to Clear.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_Verb_Load">
            <summary>
              Looks up a localized string similar to Load....
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_Verb_RefreshData">
            <summary>
              Looks up a localized string similar to Refresh Data.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_Verb_SaveAs">
            <summary>
              Looks up a localized string similar to Save As....
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Designer_Verb_Wizard">
            <summary>
              Looks up a localized string similar to Wizard.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.DesignerStep_Name_Appearance">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.DesignerStep_Name_Areas">
            <summary>
              Looks up a localized string similar to Chart Areas.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.DesignerStep_Name_Legends">
            <summary>
              Looks up a localized string similar to Legends.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.DesignerStep_Name_Series">
            <summary>
              Looks up a localized string similar to Series.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.DesignerStep_Name_Titles">
            <summary>
              Looks up a localized string similar to Titles.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.DesignerSubStep_Name_Axes">
            <summary>
              Looks up a localized string similar to Axes.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.DesignerSubStep_Name_LegendItems">
            <summary>
              Looks up a localized string similar to Legend items.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.DesignerSubStep_Name_WallRanges">
            <summary>
              Looks up a localized string similar to Wall ranges.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.DropDownList_NoneBtnText">
            <summary>
              Looks up a localized string similar to (none).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.DropDownList_NoneListItem">
            <summary>
              Looks up a localized string similar to (none).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_Alignment_Bottom">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_Alignment_BottomLeft">
            <summary>
              Looks up a localized string similar to BottomLeft.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_Alignment_BottomRight">
            <summary>
              Looks up a localized string similar to BottomRight.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_Alignment_Center">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_Alignment_Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_Alignment_Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_Alignment_Top">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_Alignment_TopLeft">
            <summary>
              Looks up a localized string similar to TopLeft.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_Alignment_TopRight">
            <summary>
              Looks up a localized string similar to TopRight.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ArrowType_Lines">
            <summary>
              Looks up a localized string similar to Lines.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ArrowType_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ArrowType_Triangle">
            <summary>
              Looks up a localized string similar to Triangle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_BackdropStyle_Gradient">
            <summary>
              Looks up a localized string similar to Gradient.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_BackdropStyle_Pattern">
            <summary>
              Looks up a localized string similar to Pattern.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_BackdropStyle_Picture">
            <summary>
              Looks up a localized string similar to Picture.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_BackdropStyle_Solid">
            <summary>
              Looks up a localized string similar to Solid.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_BackdropStyle_Transparent">
            <summary>
              Looks up a localized string similar to (none).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Area">
            <summary>
              Looks up a localized string similar to Area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Area3D">
            <summary>
              Looks up a localized string similar to Area 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Bar2D">
            <summary>
              Looks up a localized string similar to Bar 2D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Bar3D">
            <summary>
              Looks up a localized string similar to Bar 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Bezier">
            <summary>
              Looks up a localized string similar to Bezier.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_BezierFlat">
            <summary>
              Looks up a localized string similar to Bezier.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_BezierFlatXY">
            <summary>
              Looks up a localized string similar to Bezier XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_BezierXY">
            <summary>
              Looks up a localized string similar to Bezier XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Bubble">
            <summary>
              Looks up a localized string similar to Bubble.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_BubbleXY">
            <summary>
              Looks up a localized string similar to Bubble XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Candle">
            <summary>
              Looks up a localized string similar to Candle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_ClusteredBar">
            <summary>
              Looks up a localized string similar to Clustered Bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Doughnut">
            <summary>
              Looks up a localized string similar to Doughnut.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Doughnut3D">
            <summary>
              Looks up a localized string similar to Doughnut 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Funnel">
            <summary>
              Looks up a localized string similar to Funnel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Funnel3D">
            <summary>
              Looks up a localized string similar to Funnel 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Gantt">
            <summary>
              Looks up a localized string similar to Gantt.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Gantt3D">
            <summary>
              Looks up a localized string similar to Gantt 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_HiLo">
            <summary>
              Looks up a localized string similar to HiLo.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_HiLoOpenClose">
            <summary>
              Looks up a localized string similar to HiLoOpenClose.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_HorizontalBar">
            <summary>
              Looks up a localized string similar to Horizontal Bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_HorizontalBar3D">
            <summary>
              Looks up a localized string similar to Horizontal Bar 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Kagi">
            <summary>
              Looks up a localized string similar to Kagi.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Kagi3D">
            <summary>
              Looks up a localized string similar to Kagi 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Line">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Line3D">
            <summary>
              Looks up a localized string similar to Line 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_LineXY">
            <summary>
              Looks up a localized string similar to Line XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_PlotXY">
            <summary>
              Looks up a localized string similar to Plot XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_PointAndFigure">
            <summary>
              Looks up a localized string similar to Point And Figure.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Pyramid">
            <summary>
              Looks up a localized string similar to Pyramid.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Pyramid3D">
            <summary>
              Looks up a localized string similar to Pyramid 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Renko">
            <summary>
              Looks up a localized string similar to Renko.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Renko3D">
            <summary>
              Looks up a localized string similar to Renko 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_Scatter">
            <summary>
              Looks up a localized string similar to Scatter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_StackedArea">
            <summary>
              Looks up a localized string similar to Stacked Area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_StackedArea100Pct">
            <summary>
              Looks up a localized string similar to Stacked Area 100%.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_StackedBar">
            <summary>
              Looks up a localized string similar to Stacked Bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_StackedBar100Pct">
            <summary>
              Looks up a localized string similar to Stacked Bar 100%.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_StackedBar3D">
            <summary>
              Looks up a localized string similar to Stacked Bar 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_StackedBar3D100Pct">
            <summary>
              Looks up a localized string similar to StackedBar 3D 100%.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_ThreeLineBreak">
            <summary>
              Looks up a localized string similar to Three Line Break.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartType_ThreeLineBreak3D">
            <summary>
              Looks up a localized string similar to Three Line Break 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartTypeGroup_All">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartTypeGroup_Area">
            <summary>
              Looks up a localized string similar to Area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartTypeGroup_Bar">
            <summary>
              Looks up a localized string similar to Bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartTypeGroup_Doughnut">
            <summary>
              Looks up a localized string similar to Pie/Doughnut.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartTypeGroup_Financial">
            <summary>
              Looks up a localized string similar to Financial.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartTypeGroup_Line">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_ChartTypeGroup_PointBubble">
            <summary>
              Looks up a localized string similar to Point/Bubble.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_DockType_Bottom">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_DockType_Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_DockType_Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_DockType_Top">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_GradientType_DiagonalDown">
            <summary>
              Looks up a localized string similar to DiagDown.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_GradientType_DiagonalUp">
            <summary>
              Looks up a localized string similar to DiagUp.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_GradientType_FromCenter">
            <summary>
              Looks up a localized string similar to FromCenter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_GradientType_FromCorner">
            <summary>
              Looks up a localized string similar to FromCorner.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_GradientType_Horizontal">
            <summary>
              Looks up a localized string similar to Horizontal.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_GradientType_Vertical">
            <summary>
              Looks up a localized string similar to Vertical.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_MarkerStyle_Circle">
            <summary>
              Looks up a localized string similar to Circle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_MarkerStyle_Cross">
            <summary>
              Looks up a localized string similar to Cross.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_MarkerStyle_Diamond">
            <summary>
              Looks up a localized string similar to Diamond.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_MarkerStyle_InvTriangle">
            <summary>
              Looks up a localized string similar to Inverted Triangle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_MarkerStyle_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_MarkerStyle_Point">
            <summary>
              Looks up a localized string similar to Point.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_MarkerStyle_Pyramid">
            <summary>
              Looks up a localized string similar to Pyramid.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_MarkerStyle_Square">
            <summary>
              Looks up a localized string similar to Square.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_MarkerStyle_Triangle">
            <summary>
              Looks up a localized string similar to Triangle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_StdLegendMarker_Area">
            <summary>
              Looks up a localized string similar to Area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_StdLegendMarker_Bar">
            <summary>
              Looks up a localized string similar to Bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_StdLegendMarker_Line">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_StdLegendMarker_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Area">
            <summary>
              Looks up a localized string similar to Area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_AreaFlat">
            <summary>
              Looks up a localized string similar to Area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Bar">
            <summary>
              Looks up a localized string similar to Bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_BarCylinder">
            <summary>
              Looks up a localized string similar to Bar/Cylinder.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_BarFlat">
            <summary>
              Looks up a localized string similar to Bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_BarPyramid">
            <summary>
              Looks up a localized string similar to Bar/Pyramid.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Bezier">
            <summary>
              Looks up a localized string similar to Bezier.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_BezierFlat">
            <summary>
              Looks up a localized string similar to Bezier.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_BezierFlatXY">
            <summary>
              Looks up a localized string similar to Bezier XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_BezierXY">
            <summary>
              Looks up a localized string similar to Bezier XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Bubble">
            <summary>
              Looks up a localized string similar to Bubble.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_BubbleXY">
            <summary>
              Looks up a localized string similar to Bubble XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_CandleStick">
            <summary>
              Looks up a localized string similar to Candle stick.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_ClusteredBar">
            <summary>
              Looks up a localized string similar to Clustered Bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Doughnut">
            <summary>
              Looks up a localized string similar to Doughnut.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_DoughnutFlat">
            <summary>
              Looks up a localized string similar to Doughnut.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Funnel">
            <summary>
              Looks up a localized string similar to Funnel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_FunnelFlat">
            <summary>
              Looks up a localized string similar to Funnel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Gantt">
            <summary>
              Looks up a localized string similar to Gantt.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_GanttFlat">
            <summary>
              Looks up a localized string similar to Gantt.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_HiLo">
            <summary>
              Looks up a localized string similar to HiLo.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_HiLoClose">
            <summary>
              Looks up a localized string similar to Stock close only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_HiLoOpen">
            <summary>
              Looks up a localized string similar to Stock open only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_HiLoOpenClose">
            <summary>
              Looks up a localized string similar to Stock.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_HorizontalBar2D">
            <summary>
              Looks up a localized string similar to Horizontal Bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_HorizontalBar3D">
            <summary>
              Looks up a localized string similar to Horizontal Bar 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Kagi">
            <summary>
              Looks up a localized string similar to Kagi.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_KagiFlat">
            <summary>
              Looks up a localized string similar to Kagi.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Line">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_LineFlat">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_LineXY">
            <summary>
              Looks up a localized string similar to Line XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Pie">
            <summary>
              Looks up a localized string similar to Pie.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_PlotXY">
            <summary>
              Looks up a localized string similar to Plot XY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_PointAndFigure">
            <summary>
              Looks up a localized string similar to Point And Figure.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Pyramid">
            <summary>
              Looks up a localized string similar to Pyramid.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_PyramidFlat">
            <summary>
              Looks up a localized string similar to Pyramid.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Renko">
            <summary>
              Looks up a localized string similar to Renko.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_RenkoFlat">
            <summary>
              Looks up a localized string similar to Renko.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Ring">
            <summary>
              Looks up a localized string similar to Ring.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_Scatter">
            <summary>
              Looks up a localized string similar to Scatter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_StackedArea">
            <summary>
              Looks up a localized string similar to Stacked Area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_StackedArea100">
            <summary>
              Looks up a localized string similar to Stacked Area 100%.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_StackedArea100Flat">
            <summary>
              Looks up a localized string similar to Stacked Area 100%.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_StackedAreaFlat">
            <summary>
              Looks up a localized string similar to Stacked Area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_StackedBar">
            <summary>
              Looks up a localized string similar to Stacked Bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_StackedBar100">
            <summary>
              Looks up a localized string similar to Stacked Bar 100%.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_StackedBar100Flat">
            <summary>
              Looks up a localized string similar to Stacked Bar 100%.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_StackedBarFlat">
            <summary>
              Looks up a localized string similar to Stacked Bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_ThreeLineBreak">
            <summary>
              Looks up a localized string similar to Three Line Break.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Enum_WizardChartType_ThreeLineBreakFlat">
            <summary>
              Looks up a localized string similar to Three Line Break.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Error_AddCollectionItem_MsgBody">
            <summary>
              Looks up a localized string similar to {0}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Error_AddCollectionItem_MsgTitle">
            <summary>
              Looks up a localized string similar to Failed to add new item.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Error_CopyControl_Failed">
            <summary>
               Looks up a localized string similar to Failed to clone control due to the following error:
            {0}
            
            Stack:
            {2}.
             </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Error_CopyControl_MsgTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_Argument_InvalidAxisScaleValue">
            <summary>
              Looks up a localized string similar to '{0}' is not a valid value for '{1}'. '{1}' must be a power of 10..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_Argument_InvalidRange">
            <summary>
              Looks up a localized string similar to '{0}' is not a valid value for '{1}'. '{1}' must be greater than or equal to {2} and less than or equal to {3}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_Argument_InvalidValueNegative">
            <summary>
              Looks up a localized string similar to '{0}' is not a valid value for '{1}'. '{1}' must be a positive value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_Argument_NotNullString">
            <summary>
              Looks up a localized string similar to '{0}' can't be null or empty.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_CantInsertStandardAxis">
            <summary>
              Looks up a localized string similar to Standard axes can't be moved. Index should be more or equals to {0}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_CantRemoveStandardAxis">
            <summary>
              Looks up a localized string similar to Standard axes can't be removed.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_CantSetStandardAxis">
            <summary>
              Looks up a localized string similar to Standard axes can't be replaced.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_GridLayout_MaxCount">
            <summary>
              Looks up a localized string similar to Chart can't contain more then {0} chart areas..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_Invalid_Format">
            <summary>
              Looks up a localized string similar to Format string has invalid syntax.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_Invalid_ValueMember">
            <summary>
              Looks up a localized string similar to Invalid ValueMember exception.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_InvalidStyleName">
            <summary>
              Looks up a localized string similar to Invalid style name: '{0}'.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_NonUniqueName">
            <summary>
              Looks up a localized string similar to {0} named '{1}' already defined.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_Requires_Axis_Category">
            <summary>
              Looks up a localized string similar to Chart type '{0}' requires AxisX to be categorical, but it is '{1}'.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Exception_Requires_Axis_Numerical">
            <summary>
              Looks up a localized string similar to Chart type '{0}' requires AxisX to be numerical, but it is '{1}'.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendItemEditor_label10Text">
            <summary>
              Looks up a localized string similar to Border style:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendItemEditor_label7Text">
            <summary>
              Looks up a localized string similar to Fill style:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendItemEditor_label8Text">
            <summary>
              Looks up a localized string similar to Shape style:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendItemEditor_label9Text">
            <summary>
              Looks up a localized string similar to Line style:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendItemEditor_labelLegendItemNameText">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendItemEditor_labelLegendItemTextText">
            <summary>
              Looks up a localized string similar to Legend text:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_cbInsideAreaText">
            <summary>
              Looks up a localized string similar to Inside chart area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_cbVisibleText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_checkBoxFooterVisibleText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_checkBoxHeaderVisibleText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_label1Text">
            <summary>
              Looks up a localized string similar to Alignment:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_label2Text">
            <summary>
              Looks up a localized string similar to Dock to:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_label4Text">
            <summary>
              Looks up a localized string similar to Margins (X,Y):.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_label5Text">
            <summary>
              Looks up a localized string similar to Rows:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_label6Text">
            <summary>
              Looks up a localized string similar to Columns:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_labelNameText">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_panel1Text">
            <summary>
              Looks up a localized string similar to Footer.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_panelCaptionText">
            <summary>
              Looks up a localized string similar to Labels Font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_panelGridLayoutText">
            <summary>
              Looks up a localized string similar to Grid Layout.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_panelHeaderText">
            <summary>
              Looks up a localized string similar to Header.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_panelPositionText">
            <summary>
              Looks up a localized string similar to Position.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_rbStyleColumnText">
            <summary>
              Looks up a localized string similar to Column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_rbStyleRowText">
            <summary>
              Looks up a localized string similar to Row.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_rbStyleTableText">
            <summary>
              Looks up a localized string similar to Table.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_tabPage1Text">
            <summary>
              Looks up a localized string similar to Common.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LegendsPage_tabPageTitlesText">
            <summary>
              Looks up a localized string similar to Titles.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LightDirCtl_buttonOKText">
            <summary>
              Looks up a localized string similar to ü.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LightDirCtl_label1Text">
            <summary>
              Looks up a localized string similar to Z:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LightDirCtl_label2Text">
            <summary>
              Looks up a localized string similar to Y:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LightDirCtl_label3Text">
            <summary>
              Looks up a localized string similar to X:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LightDirCtl_label4Text">
            <summary>
              Looks up a localized string similar to Directional light ratio:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LightDirCtl_rbAmbientText">
            <summary>
              Looks up a localized string similar to Ambient.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LightDirCtl_rbDirectionalText">
            <summary>
              Looks up a localized string similar to Directional.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.LightDirCtl_rbPointText">
            <summary>
              Looks up a localized string similar to Point.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ListBoxEx_NoItems">
            <summary>
              Looks up a localized string similar to [There are no items in the list].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.MarkerEditor_fcbLabelFormatText">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.MarkerEditor_labelDistanceFactorText">
            <summary>
              Looks up a localized string similar to Distance:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.MarkerEditor_labelFactorText">
            <summary>
              Looks up a localized string similar to (Factor).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.MarkerEditor_labelMarkerAlignText">
            <summary>
              Looks up a localized string similar to Alignment:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.MarkerEditor_labelMarkerLabelFmtText">
            <summary>
              Looks up a localized string similar to Format:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.MarkerEditor_labelMarkerShapeText">
            <summary>
              Looks up a localized string similar to Shape:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.MarkerEditor_labelMarkerSizeText">
            <summary>
              Looks up a localized string similar to Size:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Message_DataSource_NotSupportedType">
            <summary>
               Looks up a localized string similar to This type of data source is not yet supported.
            {0}.
             </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Message_SelectChartType">
            <summary>
              Looks up a localized string similar to Select chart type before continuing.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_AnnotationLine">
            <summary>
              Looks up a localized string similar to Annotation line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_AnnotationTextBar">
            <summary>
              Looks up a localized string similar to Annotation text.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_Axis">
            <summary>
              Looks up a localized string similar to Axis.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_Backdrop">
            <summary>
              Looks up a localized string similar to Backdrop.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_BodyDownswingBackdrop">
            <summary>
              Looks up a localized string similar to Body Downswing Backdrop.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_BodyUpswingBackdrop">
            <summary>
              Looks up a localized string similar to Body Upswing Backdrop.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_BodyWidth">
            <summary>
              Looks up a localized string similar to Body Width.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_Border">
            <summary>
              Looks up a localized string similar to Border.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_BorderLine">
            <summary>
              Looks up a localized string similar to Border line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_CalloutLine">
            <summary>
              Looks up a localized string similar to Callout Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_ChartArea">
            <summary>
              Looks up a localized string similar to Chart Area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_CloseLine">
            <summary>
              Looks up a localized string similar to Close Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_DownswingLine">
            <summary>
              Looks up a localized string similar to Downswing Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_Font">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_HiloLine">
            <summary>
              Looks up a localized string similar to Hilo Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_Label">
            <summary>
              Looks up a localized string similar to Label.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_LabelFont">
            <summary>
              Looks up a localized string similar to Label font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_LabelInfo">
            <summary>
              Looks up a localized string similar to Label.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_LabelsFont">
            <summary>
              Looks up a localized string similar to Labels font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_Legend">
            <summary>
              Looks up a localized string similar to Legend.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_Line">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_LineBackdrop">
            <summary>
              Looks up a localized string similar to Line Backdrop.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_Marker">
            <summary>
              Looks up a localized string similar to Marker.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_OpenLine">
            <summary>
              Looks up a localized string similar to Open Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_PlaneItem">
            <summary>
              Looks up a localized string similar to Wall.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_Series">
            <summary>
              Looks up a localized string similar to Series.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_SeriesLine">
            <summary>
              Looks up a localized string similar to Series line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_SharpGraph">
            <summary>
              Looks up a localized string similar to Entire Chart.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_TickLen">
            <summary>
              Looks up a localized string similar to Tick Length.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_Title">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_TitleFont">
            <summary>
              Looks up a localized string similar to Title font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_Tooltip">
            <summary>
              Looks up a localized string similar to Tooltip.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_UpswingLine">
            <summary>
              Looks up a localized string similar to Upswing Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_WallRange">
            <summary>
              Looks up a localized string similar to Wall Range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Property_Name_WickLine">
            <summary>
              Looks up a localized string similar to Wick Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.PropertyEditorForm_buttonCloseText">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.PropertyEditorForm_Text">
            <summary>
              Looks up a localized string similar to Property Editor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_buttonCustomPropsText">
            <summary>
              Looks up a localized string similar to Properties....
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_checkBoxVisibleText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_comboBoxBind3Text">
            <summary>
              Looks up a localized string similar to comboBox1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_label1Text">
            <summary>
              Looks up a localized string similar to Chart type:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_label2Text">
            <summary>
              Looks up a localized string similar to Area:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_label4Text">
            <summary>
              Looks up a localized string similar to Legend:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_label5Text">
            <summary>
              Looks up a localized string similar to Axis Y:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_label6Text">
            <summary>
              Looks up a localized string similar to Axis X:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_labelBindValue1Text">
            <summary>
              Looks up a localized string similar to value name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_labelBindValue2Text">
            <summary>
              Looks up a localized string similar to value name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_labelBindValue3Text">
            <summary>
              Looks up a localized string similar to value name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_labelBindValue4Text">
            <summary>
              Looks up a localized string similar to value name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_labelBindValue5Text">
            <summary>
              Looks up a localized string similar to value name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_labelSeriesNameText">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_panelAnnoPropertiesText">
            <summary>
              Looks up a localized string similar to Annotation properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_panelPointPropertiesText">
            <summary>
              Looks up a localized string similar to Point properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_tabPageAnnoText">
            <summary>
              Looks up a localized string similar to Annotations.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_tabPageGeneralText">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_tabPagePointsText">
            <summary>
              Looks up a localized string similar to Points.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_yaPanel1Text">
            <summary>
              Looks up a localized string similar to Points collection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_yaPanel2Text">
            <summary>
              Looks up a localized string similar to Annotations collection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SeriesPage_yaPanelDataBindingText">
            <summary>
              Looks up a localized string similar to Data binding.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.SharpGraph_FileFilter">
            <summary>
              Looks up a localized string similar to XML files (*.xml)|*.xml|All files (*.*)|*.*;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.String_ColumnHeaderNN">
            <summary>
              Looks up a localized string similar to NN.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.String_NoChartAreas">
            <summary>
              Looks up a localized string similar to No chart areas specified.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.String_Sample">
            <summary>
              Looks up a localized string similar to {0}{0}Sample.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.String_ValueX">
            <summary>
              Looks up a localized string similar to X.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.String_ValueXName">
            <summary>
              Looks up a localized string similar to X (Name).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.String_ValueY">
            <summary>
              Looks up a localized string similar to Y{0}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.StyleEditor_Item_Edit">
            <summary>
              Looks up a localized string similar to &lt;Edit...&gt;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.StyleEditor_Item_New">
            <summary>
              Looks up a localized string similar to &lt;New...&gt;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.StyleEditorControl_Save_Style_Caption">
            <summary>
              Looks up a localized string similar to Save Style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.StyleEditorControl_Style_Override_Confirmation">
            <summary>
              Looks up a localized string similar to The style '{0}' already exists. Do you want to replace it?.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TextAnglePicker_label1Text">
            <summary>
              Looks up a localized string similar to Angle:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TextAlignPicker_btnTopLeftToolTip">
            <summary>
              Looks up a localized string similar to tool tip top left.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TextAlignPicker_btnTopToolTip">
            <summary>
              Looks up a localized string similar to tool tip top.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TextAlignPicker_btnTopRightToolTip">
            <summary>
              Looks up a localized string similar to tool tip top right.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TextAlignPicker_btnLeftToolTip">
            <summary>
              Looks up a localized string similar to tool tip left.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TextAlignPicker_btnCenterToolTip">
            <summary>
              Looks up a localized string similar to tool tip center.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TextAlignPicker_btnRightToolTip">
            <summary>
              Looks up a localized string similar to tool tip right .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TextAlignPicker_btnBottomLeftToolTip">
            <summary>
              Looks up a localized string similar to tool tip bottom left.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TextAlignPicker_btnBottomToolTip">
            <summary>
              Looks up a localized string similar to tool tip bottom .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TextAlignPicker_btnBottomRightToolTip">
            <summary>
              Looks up a localized string similar to tool tip bottom right.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TitlesPage_cbVisibleText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TitlesPage_label10Text">
            <summary>
              Looks up a localized string similar to Border:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TitlesPage_label1Text">
            <summary>
              Looks up a localized string similar to Docking:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TitlesPage_label2Text">
            <summary>
              Looks up a localized string similar to Dock to:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TitlesPage_label3Text">
            <summary>
              Looks up a localized string similar to Backdrop:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TitlesPage_labelNameText">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TitlesPage_panelCaptionText">
            <summary>
              Looks up a localized string similar to Caption.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.TitlesPage_panelPositionText">
            <summary>
              Looks up a localized string similar to Layout.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarBorderStyle_chooseColorToolBtn1ToolTipText">
            <summary>
              Looks up a localized string similar to Line Color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarBorderStyle_chooseLineStyleToolBtn1ToolTipText">
            <summary>
              Looks up a localized string similar to Line Style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarBorderStyle_chooseLineWeightToolBtn1ToolTipText">
            <summary>
              Looks up a localized string similar to Line Weight.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarBorderStyle_chooseShadowColorToolBtnToolTipText">
            <summary>
              Looks up a localized string similar to Shadow color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarBorderStyle_chooseShadowWeightToolBtn1ToolTipText">
            <summary>
              Looks up a localized string similar to Shadow weight.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarBorderStyle_chooseStyleToolTipText">
            <summary>
              Looks up a localized string similar to Choose style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarBorderStyle_labelStyleText">
            <summary>
              Looks up a localized string similar to Style: .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarChartView_tb3DText">
            <summary>
              Looks up a localized string similar to 3D.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarChartView_tb3DToolTipText">
            <summary>
              Looks up a localized string similar to Projection type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarChartView_tbLightText">
            <summary>
              Looks up a localized string similar to light.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarChartView_tbLightToolTipText">
            <summary>
              Looks up a localized string similar to Light position and type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarChartView_tbProjectionText">
            <summary>
              Looks up a localized string similar to projection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarChartView_tbProjectionToolTipText">
            <summary>
              Looks up a localized string similar to Projection settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFillStyle_chooseAlphaLevelToolTipText">
            <summary>
              Looks up a localized string similar to Transparency level.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFillStyle_chooseColor1ToolBtnToolTipText">
            <summary>
              Looks up a localized string similar to Choose color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFillStyle_chooseColor2ToolBtnToolTipText">
            <summary>
              Looks up a localized string similar to Secondary color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFillStyle_chooseFillStyleToolTipText">
            <summary>
              Looks up a localized string similar to Fill style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFillStyle_chooseGradientTypeToolTipText">
            <summary>
              Looks up a localized string similar to Gradient type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFillStyle_choosePatternToolBtnToolTipText">
            <summary>
              Looks up a localized string similar to Pattern style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFillStyle_choosePicturePutToolTipText">
            <summary>
              Looks up a localized string similar to Picture alignment.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFillStyle_choosePictureToolTipText">
            <summary>
              Looks up a localized string similar to Picture.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFillStyle_chooseStyleToolTipText">
            <summary>
              Looks up a localized string similar to Choose style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFillStyle_labelStyleText">
            <summary>
              Looks up a localized string similar to Style: .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFont_BoldTooltipText">
            <summary>
              Looks up a localized string similar to Bold.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFont_chooseAngleTooltipText">
            <summary>
              Looks up a localized string similar to Choose angle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFont_chooseStyleTooltipText">
            <summary>
              Looks up a localized string similar to Choose style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFont_chooseTextColorTooltipText">
            <summary>
              Looks up a localized string similar to Choose text color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFont_ItalicTooltipText">
            <summary>
              Looks up a localized string similar to Italic.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFont_tbFontFaceTooltipText">
            <summary>
              Looks up a localized string similar to Font face.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFont_tbFontSizeTooltipText">
            <summary>
              Looks up a localized string similar to Font size.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFont_tbTextAlignTooltipText">
            <summary>
              Looks up a localized string similar to Text alignment.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarFont_UnderlineTooltipText">
            <summary>
              Looks up a localized string similar to Underline.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarLabelInfo_label1Text">
            <summary>
              Looks up a localized string similar to Alignment:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarLabelInfo_label2Text">
            <summary>
              Looks up a localized string similar to Format:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarLineStyle_chooseStyleText">
            <summary>
              Looks up a localized string similar to Choose.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarLineStyle_chooseStyleToolTipText">
            <summary>
              Looks up a localized string similar to Choose style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarLineStyle_labelStyleText">
            <summary>
              Looks up a localized string similar to Style: .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarLineStyle_tbLineColorText">
            <summary>
              Looks up a localized string similar to a.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarLineStyle_tbLineColorToolTipText">
            <summary>
              Looks up a localized string similar to Line Color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarLineStyle_tbLineStyleText">
            <summary>
              Looks up a localized string similar to abc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarLineStyle_tbLineStyleToolTipText">
            <summary>
              Looks up a localized string similar to Line Style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarLineStyle_tbLineWeightText">
            <summary>
              Looks up a localized string similar to a.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ToolBarLineStyle_tbLineWeightToolTipText">
            <summary>
              Looks up a localized string similar to Line Weight.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ViewPointProjectionCtl_checkBoxOrtogonalText">
            <summary>
              Looks up a localized string similar to Orthogonal.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ViewPointProjectionCtl_label11Text">
            <summary>
              Looks up a localized string similar to Perspective ratio:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ViewPointProjectionCtl_label7Text">
            <summary>
              Looks up a localized string similar to DX:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ViewPointProjectionCtl_label8Text">
            <summary>
              Looks up a localized string similar to DY:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ViewPointProjectionCtl_label9Text">
            <summary>
              Looks up a localized string similar to Z Depth.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ViewPointProjectionCtl_labelHorizontalRotationText">
            <summary>
              Looks up a localized string similar to Horizontal rotation:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.ViewPointProjectionCtl_labelVerticalRotationText">
            <summary>
              Looks up a localized string similar to Vertical rotation:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WallRangeEditor_checkBoxWallRangeDrawOnTopText">
            <summary>
              Looks up a localized string similar to Draw on top of grid.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WallRangeEditor_checkBoxWallRangeVisibleText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WallRangeEditor_label11Text">
            <summary>
              Looks up a localized string similar to Adjacent axes:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WallRangeEditor_label12Text">
            <summary>
              Looks up a localized string similar to Border:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WallRangeEditor_label13Text">
            <summary>
              Looks up a localized string similar to Backdrop:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WallRangeEditor_label14Text">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WallRangeEditor_label1Text">
            <summary>
              Looks up a localized string similar to End value:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WallRangeEditor_label8Text">
            <summary>
              Looks up a localized string similar to Axis:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WallRangeEditor_label9Text">
            <summary>
              Looks up a localized string similar to Start value:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Wizard_Title_ArChart">
            <summary>
              Looks up a localized string similar to Chart Wizard.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.Wizard_Title_SharpGraph">
            <summary>
              Looks up a localized string similar to SharpGraph Wizard.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardAxesPage_tabPageXText">
            <summary>
              Looks up a localized string similar to   Axis X    .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardAxesPage_tabPageYText">
            <summary>
              Looks up a localized string similar to   Axis Y    .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardAxisEditorControl_checkBoxAxisInsideText">
            <summary>
              Looks up a localized string similar to Axis inside.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardAxisEditorControl_checkBoxGridlinesText">
            <summary>
              Looks up a localized string similar to Grid Lines.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardAxisEditorControl_checkBoxLabelsText">
            <summary>
              Looks up a localized string similar to Labels.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardAxisEditorControl_checkBoxTickmarksText">
            <summary>
              Looks up a localized string similar to Tick Marks.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardAxisEditorControl_checkBoxVisibleText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardAxisEditorControl_labelFormatText">
            <summary>
              Looks up a localized string similar to Label Format:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardAxisEditorControl_panelTitleText">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_cboSeriesChartTypeToolTip">
            <summary>
              Looks up a localized string similar to Choose Series Chart Type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_labelBindValue1Text">
            <summary>
              Looks up a localized string similar to value name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_labelBindValue2Text">
            <summary>
              Looks up a localized string similar to value name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_labelBindValue3Text">
            <summary>
              Looks up a localized string similar to value name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_labelBindValue4Text">
            <summary>
              Looks up a localized string similar to value name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_labelBindValue5Text">
            <summary>
              Looks up a localized string similar to value name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_labelSeriesNameText">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_lblSeriesChartTypeText">
            <summary>
              Looks up a localized string similar to Chart Type:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_panelDataBindingText">
            <summary>
              Looks up a localized string similar to Data Binding.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_pnlDataSourceText">
            <summary>
              Looks up a localized string similar to Data Source.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_pnlSeriesCollectionText">
            <summary>
              Looks up a localized string similar to Series.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_pnlSeriesDetailText">
            <summary>
              Looks up a localized string similar to Series Properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_tabPageCommonText">
            <summary>
              Looks up a localized string similar to Series Settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_tabPagePointDataText">
            <summary>
              Looks up a localized string similar to Data Points.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartSeriesPage_textBoxSeriesNameToolTip">
            <summary>
              Looks up a localized string similar to Series name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartTypePage_checkBoxApplyToExistingText">
            <summary>
              Looks up a localized string similar to Update Existing Series.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartTypePage_checkBoxSwapAxesText">
            <summary>
              Looks up a localized string similar to Swap Axes.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartTypePage_label1Text">
            <summary>
              Looks up a localized string similar to Chart Group:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartTypePage_tabPage2DText">
            <summary>
              Looks up a localized string similar to            2D        .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartTypePage_tabPage3DText">
            <summary>
              Looks up a localized string similar to            3D        .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardChartTypePage_yaPanelProjectionText">
            <summary>
              Looks up a localized string similar to Projection and Light.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardDataSourceEdit_buttonEditDataSourceText">
            <summary>
              Looks up a localized string similar to ....
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardDataSourceEdit_buttonEditDataSourceToolTip">
            <summary>
              Looks up a localized string similar to Modify selected data source.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_buttonCancelText">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_buttonFinishText">
            <summary>
              Looks up a localized string similar to Finish.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_buttonNextText">
            <summary>
              Looks up a localized string similar to &amp;Next &gt;&gt;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_buttonNextToolTip">
            <summary>
              Looks up a localized string similar to Switch to the next step.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_buttonPrevStepText">
            <summary>
              Looks up a localized string similar to &lt;&lt; &amp;Previous.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_buttonPrevStepToolTip">
            <summary>
              Looks up a localized string similar to Switch to the previous step.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_buttonValidateText">
            <summary>
              Looks up a localized string similar to validate.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_checkBoxAutoRunWizardText">
            <summary>
              Looks up a localized string similar to Auto Run Wizard.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_checkBoxAutoRunWizardToolTip">
            <summary>
              Looks up a localized string similar to Check to run the wizard every time a new chart is added from the toolbox.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_labelStepDescText">
            <summary>
              Looks up a localized string similar to Step Description.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_stepTitleAppearanceText">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_stepTitleAxesText">
            <summary>
              Looks up a localized string similar to Axes.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_stepTitleChartTypeText">
            <summary>
              Looks up a localized string similar to Chart Type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_stepTitleDefineSeriesText">
            <summary>
              Looks up a localized string similar to Series.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_stepTitleLegendsText">
            <summary>
              Looks up a localized string similar to Legend.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardForm_stepTitleTitlesText">
            <summary>
              Looks up a localized string similar to Titles.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_checkBoxDisplayLegendText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_checkBoxLegendInsideText">
            <summary>
              Looks up a localized string similar to Legend inside.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_lblColsText">
            <summary>
              Looks up a localized string similar to Columns:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_lblFontText">
            <summary>
              Looks up a localized string similar to Labels Font:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_lblRowsText">
            <summary>
              Looks up a localized string similar to Rows:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_panelSeriesCollectionText">
            <summary>
              Looks up a localized string similar to Header and Footer.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_pnlLabelsText">
            <summary>
              Looks up a localized string similar to Labels.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_rbStyleColumnText">
            <summary>
              Looks up a localized string similar to Column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_rbStyleRowText">
            <summary>
              Looks up a localized string similar to Row.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_rbStyleTableText">
            <summary>
              Looks up a localized string similar to Table.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_yaPanelGridLayoutText">
            <summary>
              Looks up a localized string similar to Grid layout.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardLegendPage_yaPanelPositionText">
            <summary>
              Looks up a localized string similar to Position.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Desc_Appearance">
            <summary>
              Looks up a localized string similar to Select a color palette to apply to your chart or modify the appearance of individual graph elements..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Desc_Axes">
            <summary>
              Looks up a localized string similar to Check the box to make sure the selected axis is visible and then set the axis properties, including title and label format.  If the axis is not visible, you will not be able to set its properties.  Doughnut style charts do not use axes..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Desc_ChartType">
            <summary>
              Looks up a localized string similar to Select chart type group from the drop-down list, then select chart type below..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Desc_DefineSeries">
            <summary>
              Looks up a localized string similar to First, use the Data Source section to select or create a new data source.  Then add one or more series as needed for your graph.  Set the name and chart type for the series then set the data binding for each X and Y value as needed..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Desc_Legends">
            <summary>
              Looks up a localized string similar to Check the box to make a legend visible and then set the title, layout and position properties for the legend..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Desc_Titles">
            <summary>
              Looks up a localized string similar to Add a title and footer to your chart and set the appearance properties..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Name_Appearance">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Name_Axes">
            <summary>
              Looks up a localized string similar to Axes.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Name_ChartType">
            <summary>
              Looks up a localized string similar to Chart Type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Name_DefineSeries">
            <summary>
              Looks up a localized string similar to Series.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Name_Legends">
            <summary>
              Looks up a localized string similar to Legend.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardStep_Name_Titles">
            <summary>
              Looks up a localized string similar to Titles.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardTitlesPage_cbVisibleText">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardTitlesPage_label10Text">
            <summary>
              Looks up a localized string similar to Border:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardTitlesPage_label2Text">
            <summary>
              Looks up a localized string similar to Backdrop:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardTitlesPage_labelDockText">
            <summary>
              Looks up a localized string similar to Dock:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardTitlesPage_labelNameText">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardTitlesPage_panelTitleText">
            <summary>
              Looks up a localized string similar to Title properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardTitlesPage_textBoxNameText">
            <summary>
              Looks up a localized string similar to textBox1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Globalization.strings.WizardTitlesPage_yaPanelTitlesText">
            <summary>
              Looks up a localized string similar to Titles.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.Backdrop">
            <summary>
            Specifies the settings used to draw object's background.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Style">
            <summary>
            Designates type of backdrop (i.e. solid, gradient, etc)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Color">
            <summary>
            Primary color to fill
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Color2">
            <summary>
            Second color used for gradient effects and patterns
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Gradient">
            <summary>
            Used only for gradient backdrops
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Pattern">
            <summary>
            Used only for pattern backdrops
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Picture">
            <summary>
            Used only for picture style backdrops
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.PictureAlignment">
            <summary>
            Used only for picture style backdrops
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Alpha">
            <summary>
            Alpha level (transparency)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.IsInvisible">
            <summary>
            Return true if backdrop is not visible
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.HasTransparency">
            <summary>
            Returns true if backdrop is transparent or most likely transparent
            </summary>
            <value></value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.CopyFrom(GrapeCity.ActiveReports.Chart.Graphics.Backdrop)">
            <summary>
            Initializes current object with the settings of another one
            </summary>
            <param name="backdrop"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Serialize(System.Runtime.Serialization.SerializationInfo,System.Boolean)">
            <summary>
            Creates an XML encoding or reconstructs object state from XML encoding
            </summary>
            <param name="info"></param>
            <param name="isLoading">Specifies whether to reconstruct object(true) or create XML encoding(false)</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor">
            <summary>
            Initializes a new instance of the BackdropInfo class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes a new instance of the BackdropInfo class.
            </summary>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the BackdropInfo class with a "fill solid" style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes a new instance of the BackdropInfo class with a "fill solid" style.
            </summary>
            <param name="color"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(System.Drawing.Color,System.Byte)">
            <summary>
            Initializes a new instance of the BackdropInfo class with a "fill solid" style.
            </summary>
            <param name="color"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(System.Drawing.Color,System.Byte,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes a new instance of the BackdropInfo class with a "fill solid" style.
            </summary>
            <param name="color"></param>
            <param name="alpha"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the BackdropInfo class with a "gradient" style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes a new instance of the BackdropInfo class with a "gradient" style.
            </summary>
            <param name="gradient"></param>
            <param name="color"></param>
            <param name="color2"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the BackdropInfo class with a "hatch" style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes a new instance of the BackdropInfo class with a "hatch" style.
            </summary>
            <param name="pattern"></param>
            <param name="color"></param>
            <param name="color2"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle)">
            <summary>
            Initializes a new instance of the BackdropInfo class with a "picture" style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes a new instance of the BackdropInfo class with a "picture" style.
            </summary>
            <param name="picture"></param>
            <param name="pictureAlignment"></param>
            <param name="antiAliasMode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Drawing2D.HatchStyle,System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle)">
            <summary>
            Initializes a new instance of the BackdropInfo class.
            </summary>
            <param name="style">Specifies backdrop style</param>
            <param name="color">Specifies primary color</param>
            <param name="color2">Specifies secondary color (used with hatch and gradient styles).</param>
            <param name="gradient">Specifies gradient direction (used with gradient style)</param>
            <param name="pattern">Specifies hatch pattern (used with hatch style)</param>
            <param name="picture">Specifies picture (used with picture style)</param>
            <param name="pictureAlignment">Specifies picture alignment (used with picture style)</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Drawing2D.HatchStyle,System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes a new instance of the BackdropInfo class.
            </summary>
            <param name="style">Specifies backdrop style</param>
            <param name="color">Specifies primary color</param>
            <param name="color2">Specifies secondary color (used with hatch and gradient styles).</param>
            <param name="gradient">Specifies gradient direction (used with gradient style)</param>
            <param name="pattern">Specifies hatch pattern (used with hatch style)</param>
            <param name="picture">Specifies picture (used with picture style)</param>
            <param name="pictureAlignment">Specifies picture alignment (used with picture style)</param>
            <param name="antiAliasMode">Specifies AA settings to draw graphics</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Drawing2D.HatchStyle,System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle,System.Byte)">
            <summary>
            Initializes a new instance of the BackdropInfo class.
            </summary>
            <param name="style">Specifies backdrop style</param>
            <param name="color">Specifies primary color</param>
            <param name="color2">Specifies secondary color (used with hatch and gradient styles).</param>
            <param name="gradient">Specifies gradient direction (used with gradient style)</param>
            <param name="pattern">Specifies hatch pattern (used with hatch style)</param>
            <param name="picture">Specifies picture (used with picture style)</param>
            <param name="pictureAlignment">Specifies picture alignment (used with picture style)</param>
            <param name="alpha">Specifies alpha (transparency) channel</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle,System.Drawing.Color,System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.GradientType,System.Drawing.Drawing2D.HatchStyle,System.Drawing.Image,GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle,System.Byte,GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode)">
            <summary>
            Initializes a new instance of the BackdropInfo class.
            </summary>
            <param name="style">Specifies backdrop style</param>
            <param name="color">Specifies primary color</param>
            <param name="color2">Specifies secondary color (used with hatch and gradient styles).</param>
            <param name="gradient">Specifies gradient direction (used with gradient style)</param>
            <param name="pattern">Specifies hatch pattern (used with hatch style)</param>
            <param name="picture">Specifies picture (used with picture style)</param>
            <param name="pictureAlignment">Specifies picture alignment (used with picture style)</param>
            <param name="alpha">Specifies alpha (transparency) channel</param>
            <param name="antiAliasMode">Specifies AA settings to draw graphics</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Converter">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of object to get the properties for.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that will be used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.GradientEditor">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.GradientEditor.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.GradientEditor" /> Class. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.GradientEditor.PaintValueImpl(System.Object,System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paint value.
            </summary>
            <param name="value">The value to paint.</param>
            <param name="currentValue">Is equal to value for simple draw, and represents selected item in listbox</param>
            <param name="g">Context to paint.</param>
            <param name="bounds">Bounds to paint.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.PatternEditor">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.PatternEditor.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.PatternEditor" /> Class. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.PatternEditor.PaintValueImpl(System.Object,System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paint value.
            </summary>
            <param name="value">The value to paint.</param>
            <param name="currentValue">Is equal to value for simple draw, and represents selected item in listbox</param>
            <param name="g">Context to paint.</param>
            <param name="bounds">Bounds to paint.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.NotifyOnAnyPropertyChange(System.Object)">
            <summary>
            Notification method.
            </summary>
            <param name="newValue">New property value.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.FitToRectangle(System.Drawing.RectangleF)">
            <summary>
            Sets backdrop's bounding rectangle
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.FitToRectangle(System.Drawing.PointF[])">
            Indices of points:
            0 - top left
            1 - top right
            2 - bottom right
            3 - bottom left
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.GetEffectiveColor(System.Byte,System.Drawing.Color)">
            <summary>
            Calculates effective color by the alpha transparency factor and color
            </summary>
            <param name="alpha"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Clone">
            <summary>
            This member overrides <code>Item.Clone</code></summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Backdrop.Dispose">
            <summary>
            Disposed the Backdrop instance from memory.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.ProjectionType">
            <summary>
            Specifies projection type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.ProjectionType.Identical">
            <summary>
            Flat projection (z coordinate is ignored)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.ProjectionType.Orthogonal">
            <summary>
            Orthogonal projection
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.ProjectionType.Perspective">
            <summary>
            Projection with perspective
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.LineStyle">
            <summary>
            Specifies line drawing styles
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.LineStyle.None">
            <summary>
            Nothing to draw
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.LineStyle.Solid">
            <summary>
            Solid line
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.LineStyle.Dash">
            <summary>
            Dahsed line
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.LineStyle.Dot">
            <summary>
            Dot line
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.LineStyle.DashDot">
            <summary>
            Dash-dot line
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.LineStyle.DashDotDot">
            <summary>
            Dash-dot-dot line
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle">
            <summary>
            Specifies styles to fill item's backdrop
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle.Transparent">
            <summary>
            Transparent
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle.Solid">
            <summary>
            Solid fill
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle.Gradient">
            <summary>
            Grafient fill
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle.Pattern">
            <summary>
            Pattern fill
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.BackdropStyle.Picture">
            <summary>
            Picture
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.GradientType">
            <summary>
            Specifies gradient type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.GradientType.Horizontal">
            <summary>
            Horizontal
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.GradientType.Vertical">
            <summary>
            Vertical
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.GradientType.DiagonalUp">
            <summary>
            From bottom left to top right
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.GradientType.DiagonalDown">
            <summary>
            From top left to bottom right
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.GradientType.FromCenter">
            <summary>
            Radial gradient from center
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.GradientType.FromCorner">
            <summary>
            Radial gradient to center
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.TextAnchor">
            <summary>
            Specifies how text shape anchors to its position
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAnchor.TopLeft">
            <summary>
            Anchors by the top left corner
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAnchor.TopMiddle">
            <summary>
            Anchors by the center of the top
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAnchor.TopRight">
            <summary>
            Anchors by the top right corner
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAnchor.MiddleLeft">
            <summary>
            Anchors by the center of the left side
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAnchor.Center">
            <summary>
            Anchors text by shape center
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAnchor.MiddleRight">
            <summary>
            Anchors by the center of the right side
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAnchor.BottomLeft">
            <summary>
            Anchors by the bottom left corner
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAnchor.BottomMiddle">
            <summary>
            Anchors by the center of shape's bottom side
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAnchor.BottomRight">
            <summary>
            Anchors by the bottom right corner
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.TextAlign">
            <summary>
            Specifies how text aligns within its rectangle
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAlign.Left">
            <summary>
            Aligns text to the left
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAlign.Center">
            <summary>
            Aligns text to center
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.TextAlign.Right">
            <summary>
            Aligns text to the right
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle">
            <summary>
            Specifies how picture is aligned within backdrop
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle.Stretched">
            <summary>
            Stretches picture to entire backdrop
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle.Tiled">
            <summary>
            Tiles picture
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle.Centered">
            <summary>
            Puts picture at center
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle.Top">
            <summary>
            Puts picture at the top center
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle.Left">
            <summary>
            Puts picture at the left
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle.Bottom">
            <summary>
            Puts picture at the bottom
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.PicturePutStyle.Right">
            <summary>
            Puts picture at the right
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode">
            <summary>
            Specifies antialiasing settings
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode.Auto">
            <summary>
            Uses AA settings of the parent object
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode.None">
            <summary>
            Turns AA off
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode.Graphics">
            <summary>
            Turns AA on for graphics only
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode.Text">
            <summary>
            Turns AA on for texts only
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.AntiAliasMode.Both">
            <summary>
            Turns AA on for graphics and text
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.Bar">
            <summary>
            Stores a set of three integers that represent the size of a 3D bar area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Bar.Width">
            <summary>
            Gets the width of the bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Bar.Height">
            <summary>
            Gets the height of the bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Bar.Depth">
            <summary>
            Gets the depth of the bar.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Bar.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize a new instance of the Bar class with parameters.
            </summary>
            <param name="width">The width of the bar.</param>
            <param name="height">The height of the bar.</param>
            <param name="depth">The depth of the bar.</param>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Graphics.Bar.Empty">
            <summary>
            Indicates a new instance of a Bar structure whose property has not been initialized.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Bar.IsEmpty">
            <summary>
            Gets true if bar is empty
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.Line">
            <summary>
            Holds all visual attibutes of line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Line.Color">
            <summary>
            Color used to draw line
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Line.Weight">
            <summary>
            Line thickness
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Line.Style">
            <summary>
            Style used to draw line
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Line.IsDirty">
            <summary>
            Overridden <code>Item.IsDirty</code>. Specifies whether object should be redrawn.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.#ctor">
            <summary>
            Creates default line
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.#ctor(System.Drawing.Color)">
            <summary>
            Creates solid line with thickness of 1 and with specified color
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.#ctor(System.Drawing.Color,System.Int32)">
            <summary>
            Creates solid line with specified thickness and color
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.#ctor(System.Drawing.Color,GrapeCity.ActiveReports.Chart.Graphics.LineStyle)">
            <summary>
            Initializes new instance of the LineInfo class with thickness of 1 and with specified style
            </summary>
            <param name="color"></param>
            <param name="style"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.#ctor(System.Drawing.Color,System.Int32,GrapeCity.ActiveReports.Chart.Graphics.LineStyle)">
            <summary>
            Initializes new instance of the Line class.
            </summary>
            <param name="color">The color of the line</param>
            <param name="weight">The thickness of the line</param>
            <param name="style">The style of the line</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.Line.Converter">
            <summary>
            The type converter for <see cref="T:GrapeCity.ActiveReports.Chart.Graphics.Line" />.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of object to get the properties for.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that will be used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.Line.SeriesLineConverter">
            <summary>
            The type converter for series lines.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.SeriesLineConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.SeriesLineConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.Equals(System.Object)">
            <summary>
            Compare the Line object to another System.Object and check if the two are equal.
            </summary>
            <param name="obj">System.Object to compare with the Line object.</param>
            <returns>Boolean type. Returns True if the two are equal. Otherwise it is False.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Line.GetHashCode">
            <summary>
            It functions as a hash function for a particular type. It is suitable for use in data structures such as hash algorithm and hash table.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.Point2d">
            <summary>
            Represents an ordered pair of integer x- and y-coordinates that defines a point in a 2D plane.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Point2d.X">
            <summary>
            Gets or sets point's x coordinate
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Point2d.Y">
            <summary>
            Gets or sets point's y coordinate
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Point2d.IsDirty">
            <summary>
            Overridden <code>Item.IsDirty</code>. Specifies whether object should be redrawn.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.Clone">
            <summary>
            Overridden <code>Item.Clone</code>.
            </summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.#ctor">
            <summary>
            Initializes new instance of the Point2d class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.#ctor(System.Single,System.Single)">
            <summary>
            Initializes new instance of the Point2d class.
            </summary>
            <param name="x">The horizontal position of the point.</param>
            <param name="y">The vertical position of the point.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.#ctor(System.Drawing.PointF)">
            <summary>
            Initializes new instance of the Point2d class
            </summary>
            <param name="p">The GDI+ point structure.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.ToString">
            <summary>
            Converts the value of the current instance to string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.Equals(System.Object)">
            <summary>
            Compare the CLASS_NAME object to another System.Object and check if the two are equal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.op_Equality(GrapeCity.ActiveReports.Chart.Graphics.Point2d,GrapeCity.ActiveReports.Chart.Graphics.Point2d)">
            <summary>
            Checks whether two given Point2d are equal.
            </summary>
            <param name="a">First Point2d to check.</param>
            <param name="b">Second Point2d to check.</param>
            <returns>
                <c>True</c> if the two Point2d are equal, <c>False</c> othervise.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.op_Inequality(GrapeCity.ActiveReports.Chart.Graphics.Point2d,GrapeCity.ActiveReports.Chart.Graphics.Point2d)">
            <summary>
            Checks whether two given Point2d are different.
            </summary>
            <param name="a">First Point2d to check.</param>
            <param name="b">Second Point2d to check.</param>
            <returns>
                <c>True</c> if the two Point2d are differs, <c>False</c> othervise.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.GetHashCode">
            <summary>
            It functions as a hash function for a particular type. It is suitable for use in data structures such as hash algorithm and hash table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.op_Implicit(GrapeCity.ActiveReports.Chart.Graphics.Point2d)~System.Drawing.PointF">
            <summary>
            Implicit conversion to <code>PointF</code>.
            </summary>
            <param name="p">A Point2d that specifies the coordinates for the new PointF.</param>
            <returns>The new PointF structure with the specified coordinates of the Point2d.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point2d.op_Implicit(System.Drawing.PointF)~GrapeCity.ActiveReports.Chart.Graphics.Point2d">
            <summary>
            Implicit conversion to <code>PointF</code>.
            </summary>
            <param name="p">A Point2d that specifies the coordinates for the new PointF.</param>
            <returns>The new PointF structure with the specified coordinates of the Point2d.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Point2d.Length">
            <summary>
            Gets vector length
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Graphics.Point3d">
            <summary>
            Represents a point in 3D geometrical space.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Point3d.X">
            <summary>
            Gets or sets point's x coordinate
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Point3d.Y">
            <summary>
            Gets or sets point's y coordinate
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Point3d.Z">
            <summary>
            Gets or sets point's z coordinate
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Graphics.Point3d.IsDirty">
            <summary>
            Overridden <code>Item.IsDirty</code>. Specifies whether object should be redrawn.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point3d.Clone">
            <summary>
            Overridden <code>Item.Clone</code>.
            </summary>
            <returns>Object's clone</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point3d.#ctor">
            <summary>
            Initializes new instance of the Point3d class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point3d.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes new instance of the Point3d class.
            </summary>
            <param name="x">The x- coordinate of the 3d point</param>
            <param name="y">The y- coordinate of the 3d point</param>
            <param name="z">The z- coordinate of the 3d point</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point3d.#ctor(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point3d.#ctor(System.String,GrapeCity.ActiveReports.Chart.GraphXmlSerializationContext)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point3d.ToString">
            <summary>
            Converts the value of the current instance to string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point3d.Equals(System.Object)">
            <summary>
            Compare the Point3d object to another System.Object and check if the two are equal.
            </summary>
            <param name="obj">Point3d System.Object to be compared with object.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point3d.GetHashCode">
            <summary>
            It functions as a hash function for a particular type. It is suitable for use in data structures such as hash algorithm and hash table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Graphics.Point3d.ToVector3d">
            <summary>
            Explicit convertion to <code>Vector3d</code></summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.InternalC.StdCollectionTypeConverter">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.InternalC.StdCollectionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information. For internal use only.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>&gt;An Object that represents the converted value.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Area">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Area2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Bar">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Bar2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_BarCylinder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_BarPyramid">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Bezier">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Bezier3D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_BezierXY">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Bubble">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_BubbleXY">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Candle">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Clustered">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Doughnut">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Doughnut2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Funnel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Funnel2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Gantt">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Gantt2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_HiLo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_HLC">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_HLO">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_HLOC">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_HorizontalBar2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_HorizontalBar3D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Kagi">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Kagi2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Line">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Line2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_LineXY">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_PAF">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Pie">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_PlotXY">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_PriceVolume">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Pyramid">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Pyramid2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Renko">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Renko2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Ring">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_Scatter">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_StackedArea">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_StackedArea100">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_StackedArea100_2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_StackedArea2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_StackedBar">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_StackedBar100">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_StackedBar100_2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_StackedBar2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_TLB">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Resources.chartType_TLB2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Styling.StyleEditForm">
            <summary>
            Summary description for StyleNameForm.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Styling.StyleEditForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Styling.StyleEditForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Styling.StyleEditForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Styling.StyleEditor">
            <summary>
            Internal class for chart designer
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Styling.StyleEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Styling.StyleEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Styling.StyleEditorControl.DialogsOwner">
            <summary>
            Gets or sets window that owns dialogs called
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Styling.StyleManager">
            <summary>
            Summary description for StyleManager.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Styling.StyleNameForm">
            <summary>
            Summary description for StyleNameForm.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Styling.StyleNameForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Styling.StyleNameForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Styling.StyleNameForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Wizard.WizardAppearancePage">
            <summary>
            Appearance page control
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Wizard.WizardAxesPage">
            <summary>
            Axes editor page
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Wizard.WizardAxesPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardAxesPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardAxesPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Wizard.WizardAxisEditorControl">
            <summary>
            Summary description for AxisEditorControl.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Wizard.WizardAxisEditorControl.axis">
            <summary>
            reference to edited axis
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardAxisEditorControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardAxisEditorControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Wizard.WizardAxisEditorControl.isSelectionChanging">
            <summary>
            skip updating axis properties
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Wizard.WizardChartSeriesPage">
            <summary>
            Series editor page.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Wizard.WizardChartSeriesPage.membersChartType">
            <summary>
            the chart type that the data members are listed for
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardChartSeriesPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardChartSeriesPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardChartSeriesPage.displayPointsData">
            <summary>
            Displays series's points data
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Wizard.WizardChartTypePage">
            <summary>
            Summary description for ChartTypePage.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardChartTypePage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardChartTypePage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardChartTypePage.UpdateTypeSelection(GrapeCity.ActiveReports.Chart.Wizard.ChartTypeDesc)">
            <summary>
            Refreshes selecttion in chart type list
            </summary>
            <param name="typeDesc">chart type to be selected</param>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Wizard.WizardChartTypePage.previousChartIsDFP">
            <summary>
            is the chart of type Doughnut, Funnel or Pyramid
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Wizard.WizardDataSourceEdit">
            <summary>
            SeriesData editor page.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardDataSourceEdit.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardDataSourceEdit.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Wizard.WizardForm">
            <summary>
            Main Wizard's Form.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardForm.validateControl(GrapeCity.ActiveReports.Chart.SharpGraph)">
            <summary>
            validates target control before it is displayed in the wizard
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardForm.LeaveCurrentStep">
            <summary>
            switches the wizard to the next step
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Chart.Wizard.WizardForm.SeriesCollectionEditor">
            <summary>
            Gets series collection editor object
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Wizard.WizardLegendPage">
            <summary>
            Summary description for LegendPage.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Wizard.WizardLegendPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardLegendPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardLegendPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Chart.Wizard.WizardTitlesPage">
            <summary>
            Titles editor page.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Chart.Wizard.WizardTitlesPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardTitlesPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Chart.Wizard.WizardTitlesPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>